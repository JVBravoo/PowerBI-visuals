var powerbi;

!function(a) {
    var b;
    !function(b) {
        function c(a) {
            for (var b = 0, c = h.length; c > b; b++) {
                var e = h[b], f = (e.consumerEndPointFlags & a) === a;
                f && d(e.name, e.dependencies);
            }
        }
        function d(b, c) {
            void 0 === c && (c = []);
            var d = a.common.directives[b];
            e(b, d, c, !0);
        }
        function e(a, b, c, d) {
            void 0 === c && (c = []), void 0 === d && (d = !1);
            var e = a[0].toLowerCase() + a.slice(1);
            if (!(f.indexOf(e) >= 0)) {
                c.push(function() {
                    for (var a = [], c = 0, d = arguments.length; d > c; c++) a.push(arguments[c]);
                    var e = Function.prototype.bind.apply(b, [ null ].concat(a));
                    return new e();
                });
                var g = d ? "powerbi.common.directives" : "powerbi.directives";
                angular.module(g).directive(e, c), f.push(e);
            }
        }
        var f = [];
        !function(a) {
            a[a.Designer = 1] = "Designer", a[a.ExploreHost = 2] = "ExploreHost", a[a.Providers = 4] = "Providers", 
            a[a.Web = 8] = "Web", a[a.WindowsApp = 16] = "WindowsApp", a[a.All = 31] = "All";
        }(b.EndPoints || (b.EndPoints = {}));
        var g = b.EndPoints, h = [ {
            name: "ApplyStyle",
            dependencies: [],
            consumerEndPointFlags: 11
        }, {
            name: "AuthDialog",
            dependencies: [],
            consumerEndPointFlags: 12
        }, {
            name: "ClickTelemetry",
            dependencies: [ "telemetryService" ],
            consumerEndPointFlags: 13
        }, {
            name: "CollapsibleSection",
            dependencies: [],
            consumerEndPointFlags: 13
        }, {
            name: "DatasetParametersDialog",
            dependencies: [],
            consumerEndPointFlags: 12
        }, {
            name: "DialogConfirmContent",
            dependencies: [],
            consumerEndPointFlags: g.All
        }, {
            name: "DialogPromptContent",
            dependencies: [],
            consumerEndPointFlags: g.All
        }, {
            name: "Drag",
            dependencies: [ "dragDataService" ],
            consumerEndPointFlags: 9
        }, {
            name: "DragResize",
            dependencies: [],
            consumerEndPointFlags: 9
        }, {
            name: "DragScroll",
            dependencies: [ "dragDataService" ],
            consumerEndPointFlags: 9
        }, {
            name: "Drop",
            dependencies: [ "dragDataService" ],
            consumerEndPointFlags: 9
        }, {
            name: "DropdownOverlay",
            dependencies: [ "overlayService" ],
            consumerEndPointFlags: 9
        }, {
            name: "DropdownOverlayInvoke",
            dependencies: [ "overlayService" ],
            consumerEndPointFlags: 9
        }, {
            name: "DropdownMenu",
            dependencies: [],
            consumerEndPointFlags: 27
        }, {
            name: "DropdownMenuItems",
            dependencies: [],
            consumerEndPointFlags: 8
        }, {
            name: "EditableLabel",
            dependencies: [],
            consumerEndPointFlags: 11
        }, {
            name: "FocusOn",
            dependencies: [],
            consumerEndPointFlags: 4
        }, {
            name: "InlineMessage",
            dependencies: [],
            consumerEndPointFlags: 12
        }, {
            name: "InlineNameValuePairs",
            dependencies: [],
            consumerEndPointFlags: 12
        }, {
            name: "Localize",
            dependencies: [ "localizationService" ],
            consumerEndPointFlags: g.All
        }, {
            name: "LocalizeTooltip",
            dependencies: [ "localizationService" ],
            consumerEndPointFlags: g.All
        }, {
            name: "ModalDialog",
            dependencies: [],
            consumerEndPointFlags: g.All
        }, {
            name: "ModalOverlay",
            dependencies: [],
            consumerEndPointFlags: 4
        }, {
            name: "ModalThreeButtonDialog",
            dependencies: [],
            consumerEndPointFlags: 15
        }, {
            name: "NgRightClick",
            dependencies: [ "$parse" ],
            consumerEndPointFlags: 9
        }, {
            name: "NgRepeatFinishEvent",
            dependencies: [ "$timeout" ],
            consumerEndPointFlags: 9
        }, {
            name: "NgScrollbars",
            dependencies: [],
            consumerEndPointFlags: 9
        }, {
            name: "NotificationBar",
            dependencies: [ "notificationBar" ],
            consumerEndPointFlags: 8
        }, {
            name: "PopupContainer",
            dependencies: [],
            consumerEndPointFlags: 9
        }, {
            name: "QnaQuestionbox",
            dependencies: [ "localizationService" ],
            consumerEndPointFlags: 14
        }, {
            name: "Resizable",
            dependencies: [],
            consumerEndPointFlags: 11
        }, {
            name: "Spinner",
            dependencies: [],
            consumerEndPointFlags: 15
        }, {
            name: "ToolbarOverlay",
            dependencies: [ "overlayService" ],
            consumerEndPointFlags: 9
        }, {
            name: "Tooltip",
            dependencies: [],
            consumerEndPointFlags: 11
        }, {
            name: "Visual",
            dependencies: [],
            consumerEndPointFlags: 27
        } ];
        b.registerDirectivesForEndPoint = c, b.parentTelemetryService, angular.module("powerbi.common", []), 
        angular.module("powerbi.common.directives", []), angular.module("powerbi.common.controllers", []), 
        angular.module("powerbi.common", [ "powerbi.common.directives", "powerbi.common.controllers" ]).factory("promiseFactory", [ "$q", function(b) {
            return a.common.createPromiseFactory(b);
        } ]).factory("scopedProvider", [ "$injector", function(b) {
            return a.common.createScopedProvider(b);
        } ]).factory("dragDataService", function() {
            return b.createDragDataService();
        }).factory("overlayService", function() {
            return b.createOverlayService();
        }).factory("dropdownMenuService", function() {
            return b.createDropdownMenuService();
        }).factory("localizationService", function() {
            return a.common.createLocalizationService();
        }).factory("delayedQueryResultHandler", function() {
            return a.common.createDelayedQueryResultHandler();
        }).factory("tooltipService", function() {
            return a.common.createTooltipService();
        }).provider("featureSwitches", function() {
            var c = this;
            c.prototypeSwitches = new b.ClientFeatureSwitches();
            var d = window.featureSwitches;
            if (d) for (var e in d) "function" == typeof d[e] && (c.prototypeSwitches[e] = d[e]());
            var f = jsCommon.QueryStringUtil.parseQueryString(top.location.search);
            for (var e in c.prototypeSwitches) f[e] && (c.prototypeSwitches[e] = "false" !== f[e]);
            return c.$get = [ "$q", function(b) {
                return a.common.createEditableFeatureSwitchService(b, c.prototypeSwitches);
            } ], c;
        }).factory("visualPlugin", [ "featureSwitchService", function(b) {
            return a.visuals.visualPluginFactory.createDashboard(b.featureSwitches);
        } ]).provider("dataProviderFactory", function() {
            var b = this;
            return b.$get = [ "promiseFactory", "featureSwitchService", "delayedQueryResultHandler", function(c, d, e) {
                var f = a.common.httpService, g = {
                    dsr: {
                        name: "dsr",
                        create: function(c) {
                            return new a.data.dsr.DsrDataProvider(c, b.executeSemanticQueryProxyCommunication || a.data.dsr.createExecuteSemanticQueryProxyHttpCommunication(f), e);
                        }
                    },
                    bingNews: {
                        name: "bingNews",
                        create: function(b) {
                            return new a.data.bingNews.BingNewsDataProvider(b, f);
                        }
                    }
                };
                return a.data.createDataProviderFactory(g);
            } ], b;
        }).factory("dataProxy", [ "promiseFactory", "dataProviderFactory", function(b, c) {
            return a.data.createDataProxy(b, c);
        } ]).factory("singleExecutableDataProxyFactory", [ "dataProxy", "promiseFactory", function(b, c, d) {
            return {
                create: function() {
                    return a.data.createSingleExecutableDataProxy(b, c, d);
                }
            };
        } ]).provider("telemetryService", function() {
            var c = this;
            return c.$get = function() {
                for (var d, e = window; e && e.powerbi && e.powerbi.common && e.powerbi.common.parentTelemetryService && (null != e.opener || e !== e.parent) && null == d; ) e = e.opener || e.parent, 
                d = e.powerbi && e.powerbi.common.parentTelemetryService;
                return d ? d : (d = a.createTelemetryService(c.hostService), jsCommon.Trace.resetListeners(), 
                jsCommon.Trace.addListener(d), b.parentTelemetryService = d, d);
            }, c;
        }).factory("editableFeatureSwitchService", [ "featureSwitches", function(a) {
            return a;
        } ]).factory("featureSwitchService", [ "featureSwitches", function(a) {
            return a;
        } ]).factory("errorService", [ "telemetryService", function(b) {
            return a.common.createErrorService(b);
        } ]).factory("themeService", function() {
            return a.common.createThemeService();
        }).factory("activeGroupId", function() {
            return a.common.createActiveGroupIdService();
        }).factory("notificationBar", function() {
            return a.common.createNotificationBarService();
        }).factory("viralTenantMergeHelperService", [ "localizationService", function(b) {
            return a.common.createViralTenantMergeHelperService(b);
        } ]), b.registerCommonDirective = d, b.registerDirective = e;
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        a.activityId = "ActivityId", a.requestId = "RequestId", a.enableConfirmButtonEventName = "enableConfirmButton", 
        a.disableConfirmButtonEventName = "disableConfirmButton", a.uploadFileSizeHeaderName = "X-PowerBI-UploadFileSize", 
        a.previousTenantIdHeaderName = "X-PowerBI-User-PreviousTenantId", a.liveClientIdKey = "LiveClientId", 
        a.liveLogoutUrl = "https://login.live.com/oauth20_logout.srf?client_id={0}&redirect_uri={1}/providers/excel/msaRedirect?logout=1", 
        a.loadPowerViewReportEventName = "loadPowerViewReport", a.reportContainerLoadedEventName = "reportContainerLoaded", 
        a.loadExcelWorkbookEventName = "loadExcelWorkbook", a.visualDataChanged = "visualDataChanged", 
        a.onReportChangedEventName = "onReportChanged", a.currentActiveReportInfoChangedEventName = "currentActiveReportInfoChanged", 
        a.dragStartEventName = "dragstart", a.dragEnterEventName = "dragenter", a.dragOverEventName = "dragover", 
        a.dragLeaveEventName = "dragleave", a.dropEventName = "drop", a.dragEndEventName = "dragend", 
        a.DragResizeElementResizeStartEventName = "DragResizeElementResizeStart", a.DragResizeElementResizeMoveEventName = "DragResizeElementResizeMove", 
        a.DragResizeElementResizeEndEventName = "DragResizeElementResizeEnd", a.DragResizeElementDragStartEventName = "DragResizeElementDragStart", 
        a.DragResizeElementDragMoveEventName = "DragResizeElementDragMove", a.DragResizeElementDragEndEventName = "DragResizeElementDragEnd", 
        a.editableLabelOnBlurEventName = "editableLabelOnBlur", a.openReportActionName = "/openReport", 
        a.tagName = "tagName", a.myWorkspaceGroupId = "myWorkspaceId";
        var b;
        !function(a) {
            a.stateChangeStart = "$stateChangeStart", a.stateChangeSuccess = "$stateChangeSuccess", 
            a.locationChangeStart = "$locationChangeStart", a.getDataDirectQueryUrlParams = "advancedOptions&server&database&user&dsid";
            var b;
            !function(a) {
                a.reports = "landing.reports", a.report = "landing.reports.report", a.reportPage = "landing.reports.report.page", 
                a.datasets = "landing.datasets", a.dataset = "landing.datasets.dataset", a.workbooks = "landing.workbooks";
            }(b = a.states || (a.states = {}));
        }(b = a.navigation || (a.navigation = {})), a.contractRowProtocolThreshold = 50, 
        a.datasetShowDatasourceUpdatedNotification = "datasetShowDatasourceUpdatedNotification", 
        a.contentProviderStoreCloseModalDialogMessage = "contentProviderStoreCloseModalDialogMessage", 
        a.scopeDestroyEventName = "$destroy", a.oAuthRedirectUrl = "https://preview.powerbi.com/views/oauthredirect.html", 
        a.preparingPackageRefreshNotificationDuration = 3e4, a.packageRefreshNotificationDuration = 3e5, 
        a.notificationDuration = 5e3, a.showSettingsViewerEventName = "showSettingsViewer", 
        a.defaultPopupWindowWidth = 980, a.defaultPopupWindowHeight = 640, a.datasetShowAuthDialog = "datasetShowAuthDialog", 
        a.allWeekDays = 127, a.maxRefreshTimeNumber = 8, a.database = "Database", a.server = "Server", 
        a.errorCode = "ErrorCode", a.time = "Time", a.version = "Version";
        var c;
        !function(a) {
            a.packageOperationInProgress = "PackageOperationInProgress", a.dataRefreshTooSoon = "DataRefreshTooSoon";
        }(c = a.serverErrors || (a.serverErrors = {})), a.contentProviderStoreTileListRefreshEventName = "contentProviderStoreTileListRefresh", 
        a.contentProviderStoreConnectEventName = "contentProviderStoreConnect", a.contentProviderStoreMashupContentProviderLoadedMessage = "contentProviderStoreMashupContentProviderLoadedMessage", 
        a.contentProviderStoreCloseModalDialogMessage = "contentProviderStoreCloseModalDialogMessage", 
        a.contentProviderStoreRenderAsModalDialogMode = "renderAsModalDialog", a.contentProviderStoreRenderAsFullScreenMode = "renderAsFullScreen", 
        a.contentProviderStoreTileLowestPriority = 999, a.contentProviderStoreMicrosoftOrgAppEnabled = "microsoftOrgAppEnabled", 
        a.contentProviderStoreVsoVnextAppEnabled = "vsoVnextAppEnabled", a.contentProviderStoreWithInDXTFeatureSwitchEnabled = "withinDXT", 
        a.contentProviderStoreAuthenticationParentScope = "$parentScope", a.contentProviderStoreAuthorizationCodePostbackEventName = "authorizationCodePostback", 
        a.contentProviderStoreZuoraAppEnabled = "zuoraAppEnabled", a.excelContentProviderId = 6, 
        a.retailSamplesContentProviderId = 22, a.generatedSamplesContentProvidersMap = {
            22: "Retail Sales Analysis"
        };
    }(b = a.constants || (a.constants = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        a.contentProviderHelpLink = {
            13: "http://go.microsoft.com/fwlink/?LinkId=546971",
            19: "http://go.microsoft.com/fwlink/?LinkID=528958",
            10: "http://go.microsoft.com/fwlink/?LinkID=528796",
            30: "http://go.microsoft.com/fwlink/?LinkId=613552",
            23: "http://go.microsoft.com/fwlink/?LinkID=528959",
            16: "http://go.microsoft.com/fwlink/?LinkID=528957",
            17: "http://go.microsoft.com/fwlink/?LinkID=528797",
            20: "http://go.microsoft.com/fwlink/?LinkId=613120",
            9: "http://go.microsoft.com/fwlink/?LinkID=528963",
            26: "http://go.microsoft.com/fwlink/?LinkID=528960",
            42: "http://go.microsoft.com/fwlink/?LinkId=536680",
            41: "http://go.microsoft.com/fwlink/?LinkId=613402",
            52: "http://go.microsoft.com/fwlink/?LinkId=615189",
            14: "http://go.microsoft.com/fwlink/?LinkId=544911",
            38: "http://go.microsoft.com/fwlink/?LinkID=615577",
            18: "http://go.microsoft.com/fwlink/?LinkId=533295",
            24: "http://go.microsoft.com/fwlink/?LinkID=528961"
        }, a.contentProviderFallbackLink = "http://go.microsoft.com/fwlink/?LinkId=532757", 
        a.excelWorkbookUploadFailedHelpLink = "https://go.microsoft.com/fwlink/?LinkId=525916";
    }(b = a.models || (a.models = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(c) {
            var d;
            !function(c) {
                function d(b) {
                    g || (g = !0, b.logEvent(a.telemetry.DashboardTokenRefreshPrompt), f());
                }
                function e(b) {
                    h || (h = !0, b.logEvent(a.telemetry.DashboardBITokenRefreshPrompt), f());
                }
                function f() {
                    var a = parent.powerbi.common;
                    a.errorService.fatalCustom(b.localize.get("ExpiredTokenError_Title"), b.localize.get("ExpiredTokenError_Text"), null);
                }
                var g = !1, h = !1;
                c.promptExpiredPowerBITokenRefreshDialog = d, c.promptExpiredBITokenRefreshDialog = e;
            }(d = c.expiredTokenPromptHelper || (c.expiredTokenPromptHelper = {}));
        }(c = b.helpers || (b.helpers = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(c) {
            var d = function() {
                function c() {}
                return c.onpremGatewayRequired = function(a) {
                    for (var b = a.refreshConnections, c = void 0 !== b ? b.length : 0, d = 0; c > d; d++) if (b[d].onpremGatewayRequired) return !0;
                    return !1;
                }, c.convertRefreshTimeToJsDateTime = function(c) {
                    if (c) {
                        var d = c.indexOf("("), e = c.indexOf(")"), f = c.substr(d + 1, e - d - 1), g = parseInt(f, 10);
                        isNaN(g) && (b.localize.ensureLocalization(function() {
                            a.common.errorService.error(b.localize.get("SettingsDataset_Error_InvalidDataFromServer_NextRefreshOrLastRefreshNaN"), "SettingsDataset_Error_InvalidDataFromServer_NextRefreshOrLastRefreshNaN");
                        }), g = 0);
                        var h = new Date(g);
                        return h;
                    }
                    return null;
                }, c.convertDiscoverAggregatedDatasourcesResponseToDatasources = function(a, b) {
                    for (var d = new Array(), e = 0, f = b.length; f > e; e++) {
                        var g = c.convertModelDatasourceToDatasetDatasource(a, b[e].discoverDataSourceEntry);
                        g.testConnectionState = 0 === b[e].discoverDataSourceEntry.credentialStatus ? 1 : 0, 
                        g.alreadyExecutedTestConnection = !1, d.push(g);
                    }
                    return d;
                }, c.convertModelDatasourceToDatasetDatasource = function(a, c) {
                    for (var d = new Array(), e = 0; e < c.credentialTypes.length; e++) d.push(b.contracts.CredentialType[c.credentialTypes[e]]);
                    var f = {
                        modelId: a,
                        datasourceId: c.dataSourceId,
                        name: b.contracts.DatabaseType[24] === b.contracts.DatabaseType[c.databaseType] ? c.extensionDatabaseType : b.contracts.DatabaseType[c.databaseType],
                        oAuth2URL: c.oAuth2Endpoint,
                        oAuth2Nonce: c.oAuth2Nonce,
                        databaseType: c.databaseType,
                        credentialTypes: d,
                        connectionStringGeneralProperties: c.connectionStringGeneralProperties,
                        onpremGatewayRequired: c.onPremGatewayRequired
                    };
                    return f;
                }, c.convertModelToDataset = function(a) {
                    var d = {
                        importAndRefreshBehavior: a.refreshSchedule.importAndRefreshBehavior,
                        refreshEnabled: a.refreshSchedule.refreshEnabled,
                        refreshFrequencyIndex: a.refreshSchedule.isDaily ? 0 : 1,
                        refreshDays: c.convertModelWeekdaysToDatasetWeekdays(a.refreshSchedule.weekDays),
                        refreshTimeWindowIndex: c.getTimeWindowIndexFromExecutionTime(a.refreshSchedule.executionTime),
                        refreshTimesHourly: c.getTimeProWindowIndexFromExecutionTime(a.refreshSchedule.executionTimeHourly),
                        refreshTimeZoneId: a.refreshSchedule.localTimeZoneId,
                        sendFailureEmail: !0,
                        isRefreshable: a.refreshSchedule.isRefreshable,
                        refreshNotificationEnabled: a.refreshSchedule.refreshNotificationEnabled
                    }, e = new b.models.SettingsDataset(a.id, a.displayName, a.description, 4 === a.lastRefreshStatus ? !0 : !1, "", c.convertRefreshTimeToJsDateTime(a.nextRefreshTime).toString(), d, a.parameters);
                    return e;
                }, c.convertModelsToDatasets = function(a) {
                    for (var b = new Array(), d = 0; d < a.length; d++) {
                        var e = c.convertModelToDataset(a[d]);
                        b.push(e);
                    }
                    return b;
                }, c.convertModelWeekdaysToDatasetWeekdays = function(a) {
                    for (var b = new Array(), c = 0; 7 > c; c++) b[c] = 1 === (1 & a) ? !0 : !1, a >>= 1;
                    return b;
                }, c.getTimeWindowIndexFromExecutionTime = function(c) {
                    var d;
                    if (null === c) d = 0; else {
                        var e = c.split(":"), f = parseInt(e[0], 10);
                        f >= 0 && 24 > f ? d = Math.floor(f / 6) : (a.common.errorService.error(b.localize.get("SettingsDataset_Error_InvalidDataFromServer_RefreshSettings_ExecutionTimeInvalidHour"), "SettingsDataset_Error_InvalidDataFromServer_RefreshSettings_ExecutionTimeInvalidHour"), 
                        d = 0);
                    }
                    return d;
                }, c.getTimeProWindowIndexFromExecutionTime = function(c) {
                    var d = [];
                    if (c) {
                        try {
                            var e = JSON.parse(c);
                        } catch (f) {
                            return void b.localize.ensureLocalization(function() {
                                a.common.errorService.error(b.localize.get("SettingsDataset_Error_InvalidDataFromServer_RefreshSettings_ExecutionTimesHourlyInvalidJsonFormat"), "SettingsDataset_Error_InvalidDataFromServer_RefreshSettings_ExecutionTimesHourlyInvalidJsonFormat");
                            });
                        }
                        for (var g = e.length, h = 0; g > h; h++) {
                            var i = e[h], j = i.split(":"), k = parseInt(j[0], 10), l = parseInt(j[1], 10);
                            if (0 > k || k >= 24) b.localize.ensureLocalization(function() {
                                a.common.errorService.error(b.localize.get("SettingsDataset_Error_InvalidDataFromServer_RefreshSettings_ExecutionTimesHourlyInvalidHour"), "SettingsDataset_Error_InvalidDataFromServer_RefreshSettings_ExecutionTimesHourlyInvalidHour");
                            }); else if (0 > l || l >= 60) b.localize.ensureLocalization(function() {
                                a.common.errorService.error(b.localize.get("SettingsDataset_Error_InvalidDataFromServer_RefreshSettings_ExecutionTimesHourlyInvalidMinute"), "SettingsDataset_Error_InvalidDataFromServer_RefreshSettings_ExecutionTimesHourlyInvalidMinute");
                            }); else {
                                var m = {
                                    refreshHourIndex: (k + 11) % 12,
                                    refreshMinuteIndex: Math.floor(l / 30),
                                    refreshAmPmIndex: Math.floor(k / 12),
                                    isIncomplete: !1,
                                    isDuplicate: !1
                                };
                                d.push(m);
                            }
                        }
                    }
                    return d;
                }, c;
            }();
            c.ModelConverterHelper = d;
        }(c = b.helpers || (b.helpers = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(b) {
            var c = function() {
                function b() {}
                return b.popupOAuthWindow = function(a) {
                    var c = window;
                    return window.parent !== window && (c = window.parent), b.popUpWindow(a, c);
                }, b.authResponse = function(a, b) {
                    var c = a, d = $("iframe[name=contentProviderDialogFrame]")[0];
                    d && (c = d.contentWindow), c.postMessage(JSON.stringify({
                        OAuthResponse: b
                    }), "*");
                }, b.popUpWindow = function(b, c) {
                    var d = Math.max(Math.min(c.screen.width, a.constants.defaultPopupWindowWidth), c.screen.width / 2), e = Math.max(Math.min(c.screen.height, a.constants.defaultPopupWindowHeight), c.screen.height / 2), f = (c.outerWidth - d) / 2;
                    f += window.screenX;
                    var g = (c.outerHeight - e) / 2;
                    return g += c.screenY, c.name = "mainWindow", c.open(b, "_blank", "top=" + g + ", left=" + f + ", screenX=" + f + ", screenY=" + g + ", width=" + d + ", height=" + e + ", resizable=yes");
                }, b;
            }();
            b.OAuthPopupWindowHelper = c;
        }(c = b.helpers || (b.helpers = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b;
            !function(a) {
                function b() {
                    var a = jsCommon.Utility.is64BitOperatingSystem(), b = clusterUri + "/powerbi/resource/powerbicompanionapp/";
                    return b += a ? "x64" : "x86";
                }
                function c(a, b) {
                    var c = jsCommon.Utility.is64BitOperatingSystem();
                    return c ? a : b;
                }
                a.getDownloadLink = b, a.getDownloadCenterLink = c;
            }(b = a.powerBICompanionHelper || (a.powerBICompanionHelper = {}));
        }(b = a.helpers || (a.helpers = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b;
            !function(a) {
                function b() {
                    var a = "https://go.microsoft.com/fwlink/?LinkID=521962";
                    return a;
                }
                a.getDownloadLink = b;
            }(b = a.powerBIExcelHelper || (a.powerBIExcelHelper = {}));
        }(b = a.helpers || (a.helpers = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            !function(a) {
                a[a.FinishedSuccessfully = 0] = "FinishedSuccessfully", a[a.PublishInProgress = 1] = "PublishInProgress", 
                a[a.PublishError = 2] = "PublishError", a[a.RefreshInProgress = 3] = "RefreshInProgress", 
                a[a.RefreshError = 4] = "RefreshError";
            }(a.PublishOrRefreshStatus || (a.PublishOrRefreshStatus = {}));
            a.PublishOrRefreshStatus;
            !function(a) {
                a[a.None = 0] = "None", a[a.Read = 1] = "Read", a[a.Write = 2] = "Write", a[a.ReShare = 4] = "ReShare", 
                a[a.Explore = 8] = "Explore", a[a.CopyOnWrite = 17] = "CopyOnWrite", a[a.ReadWrite = a.Read | a.Write] = "ReadWrite", 
                a[a.ReadReshare = a.Read | a.ReShare] = "ReadReshare", a[a.All = a.ReadWrite | a.ReShare] = "All";
            }(a.Permissions || (a.Permissions = {}));
            a.Permissions;
            !function(a) {
                a[a.DoNotGetData = 0] = "DoNotGetData", a[a.GetDataOnImport = 1] = "GetDataOnImport", 
                a[a.GetDataOnRefresh = 2] = "GetDataOnRefresh", a[a.GetDataOnImportAndRefresh = a.GetDataOnImport | a.GetDataOnRefresh] = "GetDataOnImportAndRefresh";
            }(a.ImportAndRefreshBehavior || (a.ImportAndRefreshBehavior = {}));
            a.ImportAndRefreshBehavior;
            !function(a) {
                a[a.PowerBIServicePlan0 = 1] = "PowerBIServicePlan0", a[a.PowerBIServicePlan1 = 2] = "PowerBIServicePlan1", 
                a[a.PowerBIServicePlan2 = 4] = "PowerBIServicePlan2";
            }(a.ServicePlan || (a.ServicePlan = {}));
            a.ServicePlan;
            !function(a) {
                a[a.HasCredential = 0] = "HasCredential", a[a.NotSpecified = 1] = "NotSpecified";
            }(a.CredentialStatus || (a.CredentialStatus = {}));
            a.CredentialStatus;
            !function(a) {
                a[a.Sql = 0] = "Sql", a[a.Windows = 1] = "Windows", a[a.Anonymous = 2] = "Anonymous", 
                a[a.Basic = 3] = "Basic", a[a.Key = 4] = "Key", a[a.oAuth2 = 5] = "oAuth2";
            }(a.CredentialType || (a.CredentialType = {}));
            a.CredentialType;
            !function(a) {
                a[a.Unknown = 0] = "Unknown", a[a.SqlServer = 1] = "SqlServer", a[a.Oracle = 2] = "Oracle", 
                a[a.Teradata = 3] = "Teradata", a[a.Sybase = 4] = "Sybase", a[a.Db2 = 5] = "Db2", 
                a[a.MySql = 6] = "MySql", a[a.PostgreSql = 7] = "PostgreSql", a[a.SqlAzure = 8] = "SqlAzure", 
                a[a.File = 9] = "File", a[a.Folder = 10] = "Folder", a[a.ActiveDirectory = 11] = "ActiveDirectory", 
                a[a.Hdfs = 12] = "Hdfs", a[a.AzureMarketPlace = 13] = "AzureMarketPlace", a[a.HdInsight = 14] = "HdInsight", 
                a[a.AzureBlob = 15] = "AzureBlob", a[a.AzureTable = 16] = "AzureTable", a[a.SAP = 17] = "SAP", 
                a[a.SharePoint = 18] = "SharePoint", a[a.Web = 19] = "Web", a[a.ODATA = 20] = "ODATA", 
                a[a.SharePointDocLib = 21] = "SharePointDocLib", a[a.PowerQueryMashup = 22] = "PowerQueryMashup", 
                a[a.AnalysisServices = 23] = "AnalysisServices", a[a.Extension = 24] = "Extension", 
                a[a.ODBC = 25] = "ODBC", a[a.OLEDB = 26] = "OLEDB", a[a.AdoNet = 27] = "AdoNet", 
                a[a.Database = 28] = "Database";
            }(a.DatabaseType || (a.DatabaseType = {}));
            a.DatabaseType;
            !function(a) {
                a[a.Encryption = 0] = "Encryption", a[a.NotEncryption = 1] = "NotEncryption";
            }(a.EncryptedConnection || (a.EncryptedConnection = {}));
            a.EncryptedConnection;
            !function(a) {
                a[a.None = 0] = "None", a[a.Private = 1] = "Private", a[a.Organizational = 2] = "Organizational", 
                a[a.Public = 3] = "Public";
            }(a.PrivacyLevel || (a.PrivacyLevel = {}));
            a.PrivacyLevel;
            !function(a) {
                a[a.ModalDialog = 0] = "ModalDialog", a[a.FullScreen = 1] = "FullScreen", a[a.DirectConnect = 2] = "DirectConnect", 
                a[a.LocalFile = 3] = "LocalFile", a[a.FWLink = 4] = "FWLink";
            }(a.ContentProviderConfigurationUIStyle || (a.ContentProviderConfigurationUIStyle = {}));
            a.ContentProviderConfigurationUIStyle;
            !function(a) {
                a[a.Service = 1] = "Service", a[a.Organizational = 2] = "Organizational", a[a.File = 3] = "File", 
                a[a.Sample = 4] = "Sample", a[a.Learn = 5] = "Learn", a[a.BigDataAndMore = 6] = "BigDataAndMore";
            }(a.ContentProviderCategory || (a.ContentProviderCategory = {}));
            a.ContentProviderCategory;
            !function(a) {
                a[a.FullConfigurationFlow = 0] = "FullConfigurationFlow", a[a.LoginFlowOnly = 1] = "LoginFlowOnly";
            }(a.ConfigurationPageType || (a.ConfigurationPageType = {}));
            a.ConfigurationPageType;
            !function(a) {
                a[a.Scheduled = 0] = "Scheduled", a[a.OnDemand = 1] = "OnDemand";
            }(a.RefreshType || (a.RefreshType = {}));
            a.RefreshType;
        }(b = a.contracts || (a.contracts = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(b) {
            b.contentProviderManifest = [ {
                id: 1003,
                providerName: "files-tutorial",
                displayText: "Learn about importing files",
                displayTextLocalizationKey: "GetData_FilesTutorial_Title",
                iconCSSClass: "content-provider-files-tutorial",
                category: 3,
                configurationUIstyle: 4,
                providerConfig: '{"FWLink":"http://go.microsoft.com/fwlink/?LinkID=613513"}',
                sortPriority: a.constants.contentProviderStoreTileLowestPriority
            }, {
                id: 1e3,
                providerName: "local-file",
                displayText: "Local File",
                displayTextLocalizationKey: "GetData_LocalFile_Title",
                iconCSSClass: "content-provider-local-file",
                category: 3,
                configurationUIstyle: 3,
                searchKeywords: "Excel, PBIX, Power BI Designer",
                sortPriority: 0
            }, {
                id: 1001,
                providerName: "onedrive-personal",
                displayText: "OneDrive - Personal",
                displayTextLocalizationKey: "GetData_OneDrivePersonal_Title",
                iconCSSClass: "content-provider-onedrive",
                category: 3,
                configurationPageUrl: "/providers/cloudfile/onedrive",
                configurationUIstyle: 1,
                disableDetailPane: !0,
                searchKeywords: "Excel, PBIX, Power BI Designer",
                sortPriority: 2,
                authentication: {
                    oAuth: {
                        endpointRetrievalAPI: "/powerbi/providers/excel/authorizationEndpoint?storageProvider=1"
                    }
                }
            }, {
                id: 1002,
                providerName: "onedrive-for-business",
                displayText: "OneDrive - Business",
                displayTextLocalizationKey: "GetData_OneDriveBusiness_Title",
                iconCSSClass: "content-provider-onedrive",
                category: 3,
                configurationPageUrl: "/providers/cloudfile/onedrivepro",
                configurationUIstyle: 1,
                disableDetailPane: !0,
                searchKeywords: "Excel, PBIX, Power BI Designer",
                sortPriority: 1,
                disabledInArchivedContent: !0
            }, {
                id: 25,
                providerKey: "9f29a2e5-02d7-4420-b133-d0a663befe00",
                providerName: "sql-server-analysis-services",
                displayText: "SQL Server Analysis Services",
                description: "GetData_SqlServerAnalysisServices",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkID=528956",
                iconCSSClass: "content-provider-sql-server-analysis-services",
                category: 6,
                configurationPageUrl: "/providers/AnalysisServer/",
                configurationUIstyle: 1,
                sortPriority: 2
            }, {
                id: 38,
                providerKey: "B8EEABC6-26A4-4CAE-8F8E-E918E1D5BBE7",
                providerName: "uservoice",
                displayText: "UserVoice",
                description: "GetData_UserVoice",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=615577",
                iconCSSClass: "content-provider-uservoice",
                smallIconCSSClass: "content-provider-uservoice-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/UserVoice/?contentProviderId=38&displayText=UserVoice",
                configurationUIstyle: 0
            }, {
                id: 19,
                providerKey: "cc2d7c39-cb58-4ff0-ac02-2e0d3f80508c",
                providerName: "github",
                displayText: "GitHub",
                description: "GetData_GitHub",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkID=528958",
                iconCSSClass: "content-provider-github",
                smallIconCSSClass: "content-provider-github-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/GitHub/?contentProviderId=19&displayText=GitHub",
                configurationUIstyle: 0
            }, {
                id: 13,
                providerKey: "6ab8831d-b1f6-4f48-9b70-32a66a25fc75appfigures",
                providerName: "appfigures",
                displayText: "appFigures",
                description: "GetData_Appfigures",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=546971",
                iconCSSClass: "content-provider-appfigures",
                smallIconCSSClass: "content-provider-appfigures-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/AppFigures/?contentProviderId=13&displayText=appFigures",
                configurationUIstyle: 0
            }, {
                id: 30,
                providerKey: "629a1404-f870-421e-a5d0-daf455b1a15e",
                providerName: "mailchimp",
                displayText: "MailChimp",
                description: "GetData_Mailchimp",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=613552",
                iconCSSClass: "content-provider-mailchimp",
                smallIconCSSClass: "content-provider-mailchimp-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/MailChimp/?contentProviderId=30&displayText=MailChimp",
                configurationUIstyle: 0
            }, {
                id: 42,
                providerKey: "2128e7e4-9004-452c-86ab-4ce555effdf4",
                providerName: "sql-db-auditing",
                displayText: "SQL Database Auditing",
                description: "GetData_SqlDbAuditing",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=536680",
                iconCSSClass: "content-provider-sql-db-auditing",
                smallIconCSSClass: "content-provider-sql-db-auditing-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/SQLDBAuditing/?contentProviderId=42&displayText=SQL%20Database%20Auditing",
                configurationUIstyle: 0
            }, {
                id: 14,
                providerKey: "4d72ac76-d7d9-4d53-89ed-a7d210dcb985",
                providerName: "twilio",
                displayText: "Twilio",
                description: "GetData_Twilio",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=544911",
                iconCSSClass: "content-provider-twilio",
                smallIconCSSClass: "content-provider-twilio-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/Twilio/?contentProviderId=14&displayText=Twilio",
                configurationUIstyle: 0
            }, {
                id: 10,
                providerKey: "badc1aad-ff6b-457f-87e5-9b93ee058ef0",
                providerName: "google-analytics",
                displayText: "Google Analytics",
                description: "GetData_GoogleAnalytics",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkID=528796",
                iconCSSClass: "content-provider-google-analytics",
                smallIconCSSClass: "content-provider-google-analytics-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/GoogleAnalytics/?contentProviderId=10&displayText=Google%20Analytics",
                configurationUIstyle: 0
            }, {
                id: 23,
                providerKey: "f17d3e2b-7248-49c6-af9e-ac9e594b8b06",
                providerName: "marketo",
                displayText: "Marketo",
                description: "GetData_Marketo",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkID=528959",
                iconCSSClass: "content-provider-marketo",
                smallIconCSSClass: "content-provider-marketo-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/Marketo/?contentProviderId=23&displayText=Marketo",
                configurationUIstyle: 0
            }, {
                id: 16,
                providerKey: "cafb2591-2578-4f88-a8c1-f1530b464696",
                providerName: "microsoft-dynamics-crm",
                displayText: "Microsoft Dynamics CRM",
                description: "GetData_MicrosoftDynamicsCrm",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkID=528957",
                iconCSSClass: "content-provider-microsoft-dynamics-crm",
                smallIconCSSClass: "content-provider-microsoft-dynamics-crm-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/DynamicsCRM/?contentProviderId=16&displayText=Microsoft%20Dynamics%20CRM",
                configurationUIstyle: 0
            }, {
                id: 17,
                providerKey: "007a08ed-748b-4db3-9d0b-047f4295afa6",
                providerName: "microsoft-dynamics-marketing",
                displayText: "Microsoft Dynamics Marketing",
                description: "GetData_MicrosoftDynamicsMarketing",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkID=528797",
                iconCSSClass: "content-provider-microsoft-dynamics-marketing",
                smallIconCSSClass: "content-provider-microsoft-dynamics-marketing-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/DynamicsMarketing/?contentProviderId=17&displayText=Microsoft%20Dynamics%20Marketing",
                configurationUIstyle: 0
            }, {
                id: 22,
                providerKey: "bb35a484-389d-4cc6-ab18-57d6eef86a23",
                providerName: "retail-analysis-sample",
                displayText: "Retail Analysis Sample",
                displayTextLocalizationKey: "GetData_Retail_Analysis_Sample_Title",
                description: "GetData_Retail_Analysis_Sample",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkID=522048",
                iconCSSClass: "content-provider-retail-analysis-sample",
                category: 4,
                providerConfig: '{"dataAccessInfo":{"DSID":"{\\"providerName\\":\\"RetailSalesSample\\"}","SID":"{GUID}"}}',
                configurationUIstyle: 2
            }, {
                id: 9,
                providerKey: "909545e0-1c5e-44a9-b9db-bae412465c89",
                providerName: "salesforce",
                displayText: "Salesforce",
                description: "GetData_Salesforce",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkID=528963",
                iconCSSClass: "content-provider-salesforce",
                category: 1,
                configurationPageUrl: "/providers/salesforce",
                configurationUIstyle: 1,
                authentication: {
                    oAuth: {
                        endpointRetrievalAPI: "/powerbi/providers/salesforce/authorizationEndpoint"
                    }
                }
            }, {
                id: 26,
                providerKey: "70d60c83-cf35-4d3a-a80f-37b653b5ff50",
                providerName: "sendgrid",
                displayText: "SendGrid",
                description: "GetData_Sendgrid",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkID=528960",
                iconCSSClass: "content-provider-sendgrid",
                smallIconCSSClass: "content-provider-sendgrid-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/SendGrid/?contentProviderId=26&displayText=SendGrid",
                configurationUIstyle: 0
            }, {
                id: 24,
                providerKey: "ccc45ff5-ea82-4a82-904d-913d5aba659d",
                providerName: "zendesk",
                displayText: "Zendesk",
                description: "GetData_Zendesk",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkID=528961",
                iconCSSClass: "content-provider-zendesk",
                smallIconCSSClass: "content-provider-zendesk-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/Zendesk/?contentProviderId=24&displayText=Zendesk",
                configurationUIstyle: 0,
                finePrint: "GetData_Zendesk_FinePrint"
            }, {
                id: 29,
                providerKey: "156B0EF1-E21C-4BEA-B187-6530269821F5",
                providerName: "zuora",
                displayText: "Zuora",
                description: "GetData_Zuora",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=615603",
                iconCSSClass: "content-provider-zuora",
                smallIconCSSClass: "content-provider-zuora-small",
                category: 1,
                configurationPageUrl: "/providers/mashup/Zuora/?contentProviderId=29&displayText=Zuora",
                configurationUIstyle: 0,
                featureSwitch: a.constants.contentProviderStoreZuoraAppEnabled
            }, {
                id: 62,
                providerKey: "EAF6690A-F3CD-4C8A-9BD2-A4F884857DC7",
                providerName: "acumatica",
                displayText: "Acumatica",
                description: "GetData_Acumatica",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=616430",
                iconCSSClass: "content-provider-acumatica",
                smallIconCSSClass: "content-provider-acumatica-small",
                category: 1,
                configurationPageUrl: "/providers/mashup/Acumatica/?contentProviderId=62&displayText=Acumatica",
                configurationUIstyle: 0
            }, {
                id: 31,
                providerKey: "b019fa14-15cf-4baf-bc0f-0b4b07b2a2dc",
                providerName: "msft-it-new-technology-adoption",
                displayText: "Microsoft: IT New Technology Adoption",
                description: "GetData_MsftItNewTechnologyAdoption",
                iconCSSClass: "content-provider-msft-it-new-technology-adoption",
                category: 2,
                providerConfig: '{"dataAccessInfo":{"DSID":"{\\"providerName\\":\\"MSITNTA\\"}","SID":"{GUID}"}}',
                configurationUIstyle: 2,
                featureSwitch: a.constants.contentProviderStoreMicrosoftOrgAppEnabled
            }, {
                id: 32,
                providerKey: "09ea17d2-a321-4021-94b9-bb8949fd19b7",
                providerName: "msft-windows-uservoice",
                displayText: "Microsoft: Windows UserVoice",
                description: "GetData_MsftWindowsUservoice",
                iconCSSClass: "content-provider-msft-windows-uservoice",
                category: 2,
                providerConfig: '{"dataAccessInfo":{"DSID":"{\\"providerName\\":\\"WinUserVoice\\"}","SID":"{GUID}"}}',
                configurationUIstyle: 2,
                featureSwitch: a.constants.contentProviderStoreMicrosoftOrgAppEnabled
            }, {
                id: 33,
                providerKey: "0d2d1835-934a-486d-b712-b898e02a4353",
                providerName: "msft-digital-crimes-unit",
                displayText: "Microsoft: Digital Crimes Unit",
                description: "GetData_MsftDigitalCrimesUnit",
                iconCSSClass: "content-provider-msft-digital-crimes-unit",
                category: 2,
                providerConfig: '{"dataAccessInfo":{"DSID":"{\\"providerName\\":\\"DCU\\"}","SID":"{GUID}"}}',
                configurationUIstyle: 2,
                featureSwitch: a.constants.contentProviderStoreMicrosoftOrgAppEnabled
            }, {
                id: 34,
                providerKey: "4f1864d0-5c45-49e9-a721-8bf017e6d905",
                providerName: "msft-people-view",
                displayText: "Microsoft: People View",
                description: "GetData_MsftPeopleView",
                iconCSSClass: "content-provider-msft-people-view",
                category: 2,
                providerConfig: '{"dataAccessInfo":{"DSID":"{\\"providerName\\":\\"HR\\"}","SID":"{GUID}"}}',
                configurationUIstyle: 2,
                featureSwitch: a.constants.contentProviderStoreMicrosoftOrgAppEnabled
            }, {
                id: 61,
                providerKey: "C9D39A14-FE1B-4952-B895-A3763B5C47B7",
                providerName: "visual-studio-online-vnext",
                displayText: "Visual Studio Online vNext",
                description: "GetData_VisualStudioOnlineVNext",
                iconCSSClass: "content-provider-visual-studio-online",
                smallIconCSSClass: "content-provider-visual-studio-online-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/VnextVisualStudioOnline/?contentProviderId=61&displayText=Visual%20Studio%20Online%20vNext",
                configurationUIstyle: 0,
                featureSwitch: a.constants.contentProviderStoreVsoVnextAppEnabled
            }, {
                id: 27,
                providerKey: "029a8b9d-b743-46d6-9f98-ee10b2873482",
                providerName: "stats-nfl-2014-season-recap",
                displayText: "STATS NFL 2014 Season Recap",
                displayTextLocalizationKey: "GetData_StatsNFL2014SeasonRecap_Title",
                description: "GetData_StatsNFL2014SeasonRecap",
                iconCSSClass: "content-provider-placeholder",
                category: 1,
                providerConfig: '{"dataAccessInfo":{"DSID":"{\\"providerName\\":\\"NFL2014SeasonRecap\\"}","SID":"{GUID}"}}',
                configurationUIstyle: 2,
                featureSwitch: a.constants.contentProviderStoreWithInDXTFeatureSwitchEnabled
            }, {
                id: 50,
                providerKey: "99baada2-cf09-41f2-afd9-6835059b94d3",
                providerName: "azure-sql-database-with-live-connect",
                displayText: "Azure SQL Database",
                description: "GetData_AzureSqlDatabaseWithLiveConnect",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkID=544900",
                iconCSSClass: "content-provider-sql-db-auditing",
                category: 6,
                configurationPageUrl: "/providers/sqlazure",
                configurationUIstyle: 1,
                autoRedirectUrlParams: a.constants.navigation.getDataDirectQueryUrlParams,
                sortPriority: 0
            }, {
                id: 51,
                providerKey: "9574d7ff-7b97-4917-9535-e67fd09393d2",
                providerName: "azure-sql-datawarehouse-live-connect",
                displayText: "Azure SQL Data Warehouse",
                description: "GetData_AzureSqlDatawarehouseLiveConnect",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkID=544902",
                iconCSSClass: "content-provider-azure-sql-datawarehouse-live-connect",
                category: 6,
                configurationPageUrl: "/providers/pdw",
                configurationUIstyle: 1,
                autoRedirectUrlParams: a.constants.navigation.getDataDirectQueryUrlParams,
                sortPriority: 1
            }, {
                id: 70,
                providerKey: "47024A6F-E6D5-4B93-937A-B6BA1226A223",
                providerName: "spark-sql-live-connect",
                displayText: "Spark on Azure HDInsight",
                description: "GetData_AzureHDInsightSparkLiveConnect",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkID=616055",
                iconCSSClass: "content-provider-spark-sql-live-connect",
                category: 6,
                configurationPageUrl: "/providers/spark",
                configurationUIstyle: 1,
                autoRedirectUrlParams: a.constants.navigation.getDataDirectQueryUrlParams,
                sortPriority: 3
            }, {
                id: 18,
                providerKey: "be72f833-0a48-4311-935e-bb32bc05f0c6",
                providerName: "visual-studio-online",
                displayText: "Visual Studio Online",
                description: "GetData_VisualStudioOnline",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=533295",
                iconCSSClass: "content-provider-visual-studio-online",
                smallIconCSSClass: "content-provider-visual-studio-online-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/VisualStudioOnline/?contentProviderId=18&displayText=Visual%20Studio%20Online",
                configurationUIstyle: 0
            }, {
                id: 20,
                providerKey: "d33ebf56-4499-4d43-970d-5edc2368d289",
                providerName: "quickbooks-online",
                displayText: "QuickBooks Online",
                description: "GetData_QuickbooksOnline",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkID=613120",
                iconCSSClass: "content-provider-quickbooks-online",
                smallIconCSSClass: "content-provider-quickbooks-online-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/QuickBooks/?contentProviderId=20&displayText=QuickBooks%20Online",
                configurationUIstyle: 0
            }, {
                id: 1004,
                providerName: "business-user",
                displayText: "Business User",
                displayTextLocalizationKey: "GetData_BusinessUser_Title",
                iconCSSClass: "content-provider-business-user",
                category: 5,
                configurationUIstyle: 4,
                providerConfig: '{"FWLink":"http://go.microsoft.com/fwlink/?LinkID=613515"}',
                sortPriority: 0
            }, {
                id: 1005,
                providerName: "business-analyst",
                displayText: "Business Analyst",
                displayTextLocalizationKey: "GetData_BusinessAnalyst_Title",
                iconCSSClass: "content-provider-business-analyst",
                category: 5,
                configurationUIstyle: 4,
                providerConfig: '{"FWLink":"http://go.microsoft.com/fwlink/?LinkID=613516"}',
                sortPriority: 1
            }, {
                id: 1006,
                providerName: "bi-professional",
                displayText: "BI Professional",
                displayTextLocalizationKey: "GetData_BIProfessional_Title",
                iconCSSClass: "content-provider-bi-professional",
                category: 5,
                configurationUIstyle: 4,
                providerConfig: '{"FWLink":"http://go.microsoft.com/fwlink/?LinkID=613517"}',
                sortPriority: 2
            }, {
                id: 1007,
                providerName: "developer",
                displayText: "Developer",
                displayTextLocalizationKey: "GetData_Developer_Title",
                iconCSSClass: "content-provider-developer",
                category: 5,
                configurationUIstyle: 4,
                providerConfig: '{"FWLink":"http://go.microsoft.com/fwlink/?LinkID=613518"}',
                sortPriority: 3
            }, {
                id: 43,
                providerKey: "8b5f82f6-9a6e-4135-92c6-f6072f111f4c",
                providerName: "human-resources-sample",
                displayText: "Human Resources Sample",
                displayTextLocalizationKey: "GetData_HumanResourcesSample_Title",
                description: "GetData_HumanResourcesSample",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=528586",
                iconCSSClass: "content-provider-human-resources-sample",
                category: 4,
                providerConfig: '{"dataAccessInfo":{"DSID":"{\\"providerName\\":\\"HumanResourcesSample\\"}","SID":"{GUID}"}}',
                configurationUIstyle: 2,
                featureSwitch: a.constants.contentProviderStoreWithInDXTFeatureSwitchEnabled
            }, {
                id: 44,
                providerKey: "7158743e-08ad-4884-9a20-4c66ef741812",
                providerName: "customer-profitability-sample",
                displayText: "Customer Profitability Sample",
                displayTextLocalizationKey: "GetData_CustomerProfitabilitySample_Title",
                description: "GetData_CustomerProfitabilitySample",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=528587",
                iconCSSClass: "content-provider-customer-profitability-sample",
                category: 4,
                providerConfig: '{"dataAccessInfo":{"DSID":"{\\"providerName\\":\\"CustomerProfitabilitySample\\"}","SID":"{GUID}"}}',
                configurationUIstyle: 2,
                featureSwitch: a.constants.contentProviderStoreWithInDXTFeatureSwitchEnabled
            }, {
                id: 45,
                providerKey: "bc6e5524-d894-46ef-8d0b-e99f42df8f31",
                providerName: "opportunity-analysis-sample",
                displayText: "Opportunity Analysis Sample",
                displayTextLocalizationKey: "GetData_OpportunityAnalysisSample_Title",
                description: "GetData_OpportunityAnalysisSample",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=528588",
                iconCSSClass: "content-provider-opportunity-analysis-sample",
                category: 4,
                providerConfig: '{"dataAccessInfo":{"DSID":"{\\"providerName\\":\\"OpportunityTrackingSample\\"}","SID":"{GUID}"}}',
                configurationUIstyle: 2,
                featureSwitch: a.constants.contentProviderStoreWithInDXTFeatureSwitchEnabled
            }, {
                id: 46,
                providerKey: "8b4eff17-adfe-485c-b6b7-d7df36f04c24",
                providerName: "it-spend-analysis-sample",
                displayText: "IT Spend Analysis Sample",
                displayTextLocalizationKey: "GetData_ITSpendAnalysisSample_Title",
                description: "GetData_ITSpendAnalysisSample",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=528589",
                iconCSSClass: "content-provider-it-spend-analysis-sample",
                category: 4,
                providerConfig: '{"dataAccessInfo":{"DSID":"{\\"providerName\\":\\"ITSpendAnalysisSample\\"}","SID":"{GUID}"}}',
                configurationUIstyle: 2,
                featureSwitch: a.constants.contentProviderStoreWithInDXTFeatureSwitchEnabled
            }, {
                id: 47,
                providerKey: "00100b6a-5aba-4de1-bf62-a3a91cdff527",
                providerName: "procurement-analysis-sample",
                displayText: "Procurement Analysis Sample",
                displayTextLocalizationKey: "GetData_ProcurementAnalysisSample_Title",
                description: "GetData_ProcurementAnalysisSample",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=528590",
                iconCSSClass: "content-provider-procurement-analysis-sample",
                category: 4,
                providerConfig: '{"dataAccessInfo":{"DSID":"{\\"providerName\\":\\"ProcurementAnalysisSample\\"}","SID":"{GUID}"}}',
                configurationUIstyle: 2,
                featureSwitch: a.constants.contentProviderStoreWithInDXTFeatureSwitchEnabled
            }, {
                id: 48,
                providerKey: "e96a9f16-42da-4020-aae7-07315691b016",
                providerName: "sales-and-marketing-sample",
                displayText: "Sales and Marketing Sample",
                displayTextLocalizationKey: "GetData_SalesAndMarketingSample_Title",
                description: "GetData_SalesAndMarketingSample",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=528591",
                iconCSSClass: "content-provider-sales-and-marketing-sample",
                category: 4,
                providerConfig: '{"dataAccessInfo":{"DSID":"{\\"providerName\\":\\"SalesMarketingSample\\"}","SID":"{GUID}"}}',
                configurationUIstyle: 2,
                featureSwitch: a.constants.contentProviderStoreWithInDXTFeatureSwitchEnabled
            }, {
                id: 49,
                providerKey: "0ee5f075-5b0a-42a9-9e64-e9c5cb5e23c4",
                providerName: "supplier-quality-analysis-sample",
                displayText: "Supplier Quality Analysis Sample",
                displayTextLocalizationKey: "GetData_SupplierQualityAnalysisSample_Title",
                description: "GetData_SupplierQualityAnalysisSample",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=528585",
                iconCSSClass: "content-provider-supplier-quality-analysis-sample",
                category: 4,
                providerConfig: '{"dataAccessInfo":{"DSID":"{\\"providerName\\":\\"SupplierQualityAnalysisSample\\"}","SID":"{GUID}"}}',
                configurationUIstyle: 2,
                featureSwitch: a.constants.contentProviderStoreWithInDXTFeatureSwitchEnabled
            }, {
                id: 52,
                providerKey: "F191E418-8585-45B3-BEA2-5D5CEBE9E981",
                providerName: "sweetiq",
                displayText: "SweetIQ",
                description: "GetData_SweetIQ",
                learnMoreUrl: "http://go.microsoft.com/fwlink/?LinkId=615189",
                iconCSSClass: "content-provider-sweetiq",
                smallIconCSSClass: "content-provider-sweetiq-small",
                category: 1,
                configurationPageUrl: "/providers/mashUp/SweetIQ/?contentProviderId=52&displayText=SweetIQ",
                configurationUIstyle: 0
            } ];
        }(c = b.contracts || (b.contracts = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(c) {
            var d = a.common.contracts.CredentialType, e = (a.common.contracts.DatabaseType, 
            a.common.contracts.EncryptedConnection, a.constants), f = (a.common.contracts.PrivacyLevel, 
            function() {
                function c(b, c) {
                    var d = this;
                    if (this.scope = b, this.model = this.scope.viewModel, this.services = c, this.scope.customizeAuthDialog = function() {
                        return d.customizeAuthDialog();
                    }, this.scope.dismissSpinnerError = function() {
                        return d.dismissSpinnerError();
                    }, this.scope.signInThroughOAuth = function() {
                        return d.signInThroughOAuth();
                    }, this.initModalDialog(), this.initAuthDialog(), this.model && this.model.datasource && this.model.datasource.onpremGatewayRequired) {
                        var e = this.services.telemetryService.startEvent(a.telemetry.DashboardAuthenticationDiscoverPublicKey, this.model.providerId);
                        this.services.datasetsService.discoverPublicKey(e.event).then(function(a) {
                            if (e.resolve(), d.gatewayPublicKey = atob(a.data.gatewayPublicKey).split(/<\/Modulus>|<Modulus>/)[1], 
                            d.cloudPublicKey = atob(a.data.cloudPublicKey).split(/<\/Modulus>|<Modulus>/)[1], 
                            d.entropy = [], a.data.randomSecret) for (var b = atob(a.data.randomSecret), c = b.length, f = 0; c > f; f++) d.entropy.push(b.charCodeAt(f)); else d.entropy = jsCommon.EncryptionContext.generateEntropy();
                        }, function(b) {
                            d.scope.traceDetails = {
                                activityId: b.activityId,
                                requestId: b.requestId,
                                errorCode: b.status.toString(),
                                time: new Date().toString(),
                                version: a.build
                            }, d.model.showSpinner = !1, d.model.showError = !0, d.model.showWaitingMessageForOAuth = !1, 
                            d.scope.dialogModel.isConfirmButtonDisabled = !1, e.reject();
                        });
                    }
                }
                return c.createOptions = function() {
                    return {
                        additionalServices: [ "$window", "datasetsService", "telemetryService", "localizationService" ]
                    };
                }, c.prototype.relocateToLink = function() {
                    var b = a.models.contentProviderHelpLink[this.model.providerId];
                    b ? this.services.$window.open(b, "_blank") : this.services.$window.open(a.models.contentProviderFallbackLink, "_blank");
                }, c.prototype.initModalDialog = function() {
                    var a = this;
                    this.scope.dialogModel = new b.models.ModalDialogModel(!1, this.services.localizationService.get("AuthDialog_LinkText_SignIn"), !0, !1, !1), 
                    this.scope.dialogModel.cancelButtonText = this.services.localizationService.get("AuthDialog_CancelButtonText"), 
                    this.scope.dialogModel.isConfirmButtonDisabled = !1, this.scope.dialogModel.autoCloseDialogOnConfirmButtonSelected = !1, 
                    this.scope.dialogModel.confirmButtonImportance = b.models.ButtonImportance.Elevated, 
                    this.scope.dialogModel.cancelButtonImportance = b.models.ButtonImportance.Elevated, 
                    this.scope.relocateToLink = function() {
                        return a.relocateToLink();
                    }, this.scope.confirmDialog = function() {
                        return a.confirmDialog();
                    }, this.scope.closeDialog = function() {
                        return a.closeDialog();
                    }, this.scope.showOAuthError = !1, this.model.showModalDialog = !0, this.model.showError = !1;
                }, c.prototype.initAuthDialog = function() {
                    this.model.selectedAuthenticationIndex = 0, this.model.editableField1Value = "", 
                    this.model.editableField2Value = "", this.customizeAuthDialog(), this.dismissSpinnerError();
                }, c.prototype.confirmDialog = function() {
                    return this.model.datasource.credentialTypes[this.model.selectedAuthenticationIndex] === d[5] && void 0 === this.scope.oAuthResponse ? void this.signInThroughOAuth() : (this.model.showSpinner = !0, 
                    void this.updateDatasourceRequest());
                }, c.prototype.sendUpdateDatasourceRequest = function(b, c) {
                    void 0 === c && (c = !1);
                    var d = this.services.telemetryService, f = this;
                    this.scope.dialogModel.isConfirmButtonDisabled = !0, this.model.showError = !1;
                    var g;
                    g = this.model.isImportScenario ? d.startEvent(a.telemetry.MashUpContentProviderUpdateDatasource, this.model.providerId) : d.startEvent(a.telemetry.DashboardAuthenticationDialogSaveCredentials, this.model.providerId), 
                    this.services.datasetsService.updateDatasource(this.model.datasource.datasourceId, !0, c, b, g.event).then(function() {
                        g.resolve(), f.model.showSpinner = !1, f.model.showWaitingMessageForOAuth = !1, 
                        f.model.datasource.testConnectionState = 4, f.scope.$emit(e.datasetShowDatasourceUpdatedNotification, f.model.datasource.name), 
                        f.closeDialog();
                    }, function(b) {
                        f.scope.traceDetails = {
                            activityId: b.activityId,
                            requestId: b.requestId,
                            errorCode: b.status.toString(),
                            time: new Date().toString(),
                            version: a.build
                        }, f.model.showSpinner = !1, f.model.showError = !0, f.model.showWaitingMessageForOAuth = !1, 
                        f.scope.dialogModel.isConfirmButtonDisabled = !1, g.reject();
                    });
                }, c.prototype.closeDialog = function() {
                    var b = this;
                    if (this.model.showModalDialog = !1, this.scope.viewModel.showPlainUI && null != this.services.$window.parent) {
                        var c = {
                            message: a.constants.contentProviderStoreCloseModalDialogMessage
                        };
                        this.services.$window.parent.postMessage(JSON.stringify(c), "*");
                    }
                    setTimeout(function() {
                        b.model.showAuthDialog = !1, b.scope.$apply();
                    }, 0);
                }, c.prototype.customizeAuthDialog = function() {
                    switch (this.model.datasource.credentialTypes[this.model.selectedAuthenticationIndex]) {
                      case d[2]:
                        this.customizeAuthDialogShowNothing();
                        break;

                      case d[3]:
                        this.customizeAuthDialogShowUserNameAndPassword();
                        break;

                      case d[5]:
                        this.customizeAuthDialogShowSignIn();
                        break;

                      case d[4]:
                        this.customizeAuthDialogShowAccountKey();
                        break;

                      case d[0]:
                        this.customizeAuthDialogShowUserNameAndPassword();
                        break;

                      case d[1]:
                        this.customizeAuthDialogShowNothing();
                    }
                }, c.prototype.customizeAuthDialogShowUserNameAndPassword = function() {
                    this.model.showEditableField1 = !0, this.model.showEditableField2 = !0, this.model.showWaitingMessageForOAuth = !1, 
                    this.model.editableField1Label = this.services.localizationService.get("AuthDialog_FieldName_Username"), 
                    this.model.editableField2Label = this.services.localizationService.get("AuthDialog_FieldName_Password");
                }, c.prototype.customizeAuthDialogShowAccountKey = function() {
                    this.model.showEditableField1 = !0, this.model.showEditableField2 = !1, this.model.showWaitingMessageForOAuth = !1, 
                    this.model.editableField1Label = this.services.localizationService.get("AuthDialog_FieldName_AccountKey");
                }, c.prototype.customizeAuthDialogShowSignIn = function() {
                    this.model.showEditableField1 = !1, this.model.showEditableField2 = !1, this.model.showWaitingMessageForOAuth = !1;
                }, c.prototype.customizeAuthDialogShowNothing = function() {
                    this.model.showEditableField1 = !1, this.model.showEditableField2 = !1, this.model.showWaitingMessageForOAuth = !1, 
                    this.model.editableField1Label = "";
                }, c.prototype.updateDatasourceRequest = function() {
                    var a, b = 1;
                    switch (this.model.datasource.credentialTypes[this.model.selectedAuthenticationIndex]) {
                      case d[2]:
                        a = [], b = 3;
                        break;

                      case d[3]:
                        a = this.getCredentialDetailsUserNameAndPassword();
                        break;

                      case d[4]:
                        a = this.getCredentialDetailsKey();
                        break;

                      case d[5]:
                        a = this.getCredentialDetailsRedirectEndpoint();
                        break;

                      case d[0]:
                        a = this.getCredentialDetailsUserNameAndPassword();
                        break;

                      case d[1]:
                        a = [];
                    }
                    this.buildUpdateDatasourceRequest(a, b);
                }, c.prototype.buildUpdateDatasourceRequest = function(a, b) {
                    var c = this, e = 8 === this.model.datasource.databaseType || 1 === this.model.datasource.databaseType ? 0 : 1, f = this.model.datasource.credentialTypes[this.model.selectedAuthenticationIndex];
                    if (this.model.datasource.onpremGatewayRequired) if (f === d[1] || f === d[2]) {
                        var g = {
                            credentials: null,
                            credentialType: d[f],
                            encryptedConnection: e,
                            privacyLevel: b,
                            encryptionAlgorithmVersion: "RSA-OAEP"
                        };
                        this.sendUpdateDatasourceRequest(g, !0);
                    } else {
                        var h = {
                            credentialDetails: a,
                            connectionStringGeneralProperties: this.model.datasource.connectionStringGeneralProperties
                        }, i = new jsCommon.EncryptionContext(JSON.stringify(h), this.gatewayPublicKey, this.entropy, function(a) {
                            var g = {
                                credentials: a,
                                credentialType: d[f],
                                encryptedConnection: e,
                                privacyLevel: b,
                                encryptionAlgorithmVersion: "RSA-OAEP"
                            };
                            c.sendUpdateDatasourceRequest(g, !0);
                        });
                        i.RSAEncrypt();
                    } else {
                        var j = {
                            credentialDetails: a,
                            credentialType: d[f],
                            encryptedConnection: e,
                            privacyLevel: b
                        };
                        this.sendUpdateDatasourceRequest(j);
                    }
                }, c.prototype.getCredentialDetailsUserNameAndPassword = function() {
                    var a;
                    return a = [ {
                        name: "userName",
                        value: this.model.editableField1Value
                    }, {
                        name: "password",
                        value: this.model.editableField2Value
                    } ];
                }, c.prototype.getCredentialDetailsKey = function() {
                    var a;
                    return a = [ {
                        name: "key",
                        value: this.model.editableField1Value
                    } ];
                }, c.prototype.getCredentialDetailsRedirectEndpoint = function() {
                    var a;
                    return a = [ {
                        name: "redirectEndpoint",
                        value: this.scope.oAuthResponse
                    }, {
                        name: "oAuth2Nonce",
                        value: this.scope.viewModel.datasource.oAuth2Nonce
                    } ];
                }, c.prototype.dismissSpinnerError = function() {
                    this.model.showSpinner = !1, this.model.showError = !1;
                }, c.prototype.signInThroughOAuth = function() {
                    var b = this, c = this.scope.viewModel.datasource.oAuth2URL;
                    if ("https:" !== c.substring(0, 6).toLowerCase()) return void (this.scope.showOAuthError = !0);
                    this.scope.showOAuthError = !1;
                    var d = window.location.host, e = this.reformUrlWithNewState(c, d), f = e[1], g = function(c) {
                        var d = JSON.parse(c.data);
                        if (d && d.OAuthResponse) {
                            var e = d.OAuthResponse, g = a.constants.oAuthRedirectUrl;
                            g += "?" === e.substring(0, 1) ? e : "?" + e, b.scope.oAuthResponse = decodeURIComponent(b.reformUrlWithNewState(g, f)[0]), 
                            b.model.showWaitingMessageForOAuth = !0, b.confirmDialog();
                        } else b.scope.showOAuthError = !0;
                    };
                    this.services.$window.addEventListener(InJs.DOMConstants.messageEventName, g), this.scope.$on(a.constants.scopeDestroyEventName, function() {
                        b.services.$window.removeEventListener(InJs.DOMConstants.messageEventName, g, !1);
                    });
                    var h = e[0];
                    if (h) {
                        var i = {
                            login_uri: h,
                            redirect_targeturi: d
                        }, j = a.constants.oAuthRedirectUrl + jsCommon.QueryStringUtil.rebuildQueryString(i), k = a.common.helpers.OAuthPopupWindowHelper.popupOAuthWindow(j);
                        k || (this.scope.showOAuthError = !0);
                    }
                }, c.prototype.reformUrlWithNewState = function(a, b) {
                    var c = jsCommon.QueryStringUtil.parseQueryString(a.substring(a.indexOf("?"))), d = null;
                    c.state && (d = c.state, c.state = b), c["#state"] && (d = c["#state"], c["#state"] = b);
                    var e = a.substring(0, a.indexOf("?")) + jsCommon.QueryStringUtil.rebuildQueryString(c), f = [ e, d ];
                    return f;
                }, c;
            }());
            c.AuthDialogController = f;
        }(c = b.controllers || (b.controllers = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a(a, b) {
                    this.scope = a, this.services = b, this.scope.localizedExpandedTitle = this.services.localizationService.get(this.scope.expandedTitleLocalizationId), 
                    this.scope.localizedCollapsedTitle = this.services.localizationService.get(this.scope.collapsedTitleLocalizationId);
                }
                return a.createOptions = function() {
                    return {
                        additionalServices: [ "localizationService" ]
                    };
                }, a;
            }();
            a.CollapsibleSectionController = b;
        }(b = a.controllers || (a.controllers = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(c) {
            var d = a.common.helpers.ModelConverterHelper, e = function() {
                function c(a, b) {
                    this.scope = a, this.model = this.scope.viewModel, this.services = b, this.initModalDialog();
                }
                return c.createOptions = function() {
                    return {
                        additionalServices: [ "$window", "datasetsService", "errorService", "telemetryService", "localizationService" ]
                    };
                }, c.prototype.relocateToLink = function() {
                    var b = a.models.contentProviderHelpLink[this.model.providerId];
                    b ? this.services.$window.open(b, "_blank") : this.services.$window.open(a.models.contentProviderFallbackLink, "_blank");
                }, c.prototype.initModalDialog = function() {
                    var a = this, c = this.scope.dialogModel = new b.models.ModalDialogModel(!1, this.services.localizationService.get("DatasetParametersDialog_NextButtonText"), !0, !1, !1);
                    c.cancelButtonText = this.services.localizationService.get("DatasetParametersDialog_CancelButtonText"), 
                    c.isConfirmButtonDisabled = !1, c.autoCloseDialogOnConfirmButtonSelected = !1, c.confirmButtonImportance = b.models.ButtonImportance.Elevated, 
                    c.cancelButtonImportance = b.models.ButtonImportance.Elevated, this.scope.confirmDialog = function() {
                        return a.confirmDialog();
                    }, this.scope.closeDialog = function() {
                        return a.closeDialog();
                    }, this.scope.relocateToLink = function() {
                        return a.relocateToLink();
                    };
                }, c.prototype.confirmDialog = function() {
                    var c = this;
                    if (!this.areAllParametersValueSet()) return void (this.model.showValidationError = !0);
                    this.model.showValidationError = !1, this.model.showSpinner = !0;
                    var e = this.services.telemetryService, f = this.services.datasetsService, g = this;
                    if (this.scope.dialogModel.isConfirmButtonDisabled = !0, g.model.isImportScenario) {
                        var h = e.startEvent(a.telemetry.MashUpContentProviderSaveModelParameters, g.model.providerId);
                        b.mashupProviderService.updateMashUpProviderPackageModelParameters(g.model.providerId, g.model.datasetModel.dataset.parameters, h.event).then(function(b) {
                            h.resolve();
                            var i = b.data;
                            g.model.dataAccessInfo = i;
                            var j = e.startEvent(a.telemetry.MashUpContentProviderGetAggregatedDatasourcesForImport, g.model.providerId);
                            f.getAggregatedDatasourcesForImport(g.model.providerId.toString(), i, !1, j.event).then(function(b) {
                                j.resolve(), g.model.datasetModel.dataset.datasources = d.convertDiscoverAggregatedDatasourcesResponseToDatasources(0, b.data), 
                                c.scope.viewModel.showPlainUI ? c.scope.viewModel.showDatasetParametersDialog = !1 : g.closeDialog(), 
                                setTimeout(function() {
                                    g.scope.$emit(a.constants.datasetShowAuthDialog, 0), g.scope.$apply();
                                }, 0);
                            }, function(a) {
                                c.resetState(), f.displayOopsErrorAndEndTelemetry(e, c.services.errorService, "SettingsDataset_Error_FailedToLoadDatasources", a, j);
                            });
                        }, function(a) {
                            c.resetState(), f.displayOopsErrorAndEndTelemetry(e, c.services.errorService, "DatasetParametersDialog_Error_FailedToUpdateModelParameters", a, h);
                        });
                    } else {
                        var i = e.startEvent(a.telemetry.DashboardParametersDialogSaveParameters, g.model.providerId);
                        f.updateModelParameters(g.model.datasetModel.dataset.modelId.toString(), g.model.datasetModel.dataset.parameters, i.event).then(function() {
                            i.resolve();
                            var b = e.startEvent(a.telemetry.DashboardGetAggregatedDatasourcesForOneModel, g.model.providerId);
                            f.getAggregatedDatasourcesForOneModel(g.model.datasetModel.dataset.modelId.toString(), !1, b.event).then(function(c) {
                                b.resolve(), g.model.datasetModel.dataset.datasources = d.convertDiscoverAggregatedDatasourcesResponseToDatasources(g.model.datasetModel.dataset.modelId, c.data), 
                                g.closeDialog(), setTimeout(function() {
                                    g.scope.$emit(a.constants.datasetShowAuthDialog, 0), g.scope.$apply();
                                }, 0);
                            }, function(a) {
                                c.resetState(), f.displayOopsErrorAndEndTelemetry(e, c.services.errorService, "SettingsDataset_Error_FailedToLoadDatasources", a, b);
                            });
                        }, function(a) {
                            c.resetState(), f.displayOopsErrorAndEndTelemetry(e, c.services.errorService, "DatasetParametersDialog_Error_FailedToUpdateModelParameters", a, i);
                        });
                    }
                }, c.prototype.closeDialog = function() {
                    if (this.resetState(), this.model.showDatasetParametersDialog = !1, this.scope.viewModel.showPlainUI && null != this.services.$window.parent) {
                        var b = {
                            message: a.constants.contentProviderStoreCloseModalDialogMessage
                        };
                        this.services.$window.parent.postMessage(JSON.stringify(b), "*");
                    }
                }, c.prototype.resetState = function() {
                    this.model.showSpinner = !1, this.scope.dialogModel.isConfirmButtonDisabled = !1;
                }, c.prototype.areAllParametersValueSet = function() {
                    return 0 === _.filter(this.model.datasetModel.dataset.parameters, function(a) {
                        return void 0 === a.value || "" === a.value;
                    }).length;
                }, c;
            }();
            c.DatasetParametersDialogController = e;
        }(c = b.controllers || (b.controllers = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            !function(a) {
                a[a.Parent = 1] = "Parent", a[a.None = 2] = "None";
            }(a.DragResizeRestriction || (a.DragResizeRestriction = {}));
            a.DragResizeRestriction;
            !function(a) {
                a[a.Up = 1] = "Up", a[a.Down = 2] = "Down", a[a.Left = 4] = "Left", a[a.Right = 8] = "Right", 
                a[a.UpLeft = 16] = "UpLeft", a[a.UpRight = 32] = "UpRight", a[a.DownLeft = 64] = "DownLeft", 
                a[a.DownRight = 128] = "DownRight", a[a.All = 255] = "All";
            }(a.DragResizeHandleDirections || (a.DragResizeHandleDirections = {}));
            var b = (a.DragResizeHandleDirections, function() {
                function a(b, c) {
                    this.resizeHandleDirections = 255, this.dimensions = {}, this.restricted = {}, window.interact && (interact.pointerMoveTolerance(a.DefaultPointerMoveTolerance), 
                    this.element = b, this.rawElement = this.element.get(0), c && (this.options = c, 
                    this.snapToGridIfNeeded(), this.options = this.extend({
                        minWidth: a.MinWidth,
                        minHeight: a.MinHeight,
                        maxWidth: a.MaxWidth,
                        maxHeight: a.MaxHeight,
                        maintainAspectRatio: !1,
                        autoScrollParent: null,
                        inertia: !0,
                        disableDrawing: !1
                    }, this.options)), this.resizeHandleDirections = this.options && this.options.resizeHandleDirections ? this.options.resizeHandleDirections : this.resizeHandleDirections, 
                    this.element && this.element.length > 0 && (this.element.addClass(a.DragResizeElementClass), 
                    this.attachDragHandle(), this.attachResizeHandles()));
                }
                return a.prototype.destroy = function() {
                    "undefined" != typeof this.dragInteractable && this.dragInteractable.unset(), "undefined" != typeof this.resizeInteractable && this.resizeInteractable.unset(), 
                    this.autoScrollParent && this.autoScrollParent.off("scroll", this.autoScrollParentScrollHandlerFn);
                }, a.prototype.getResizeHandleDirectionArray = function() {
                    var a = [], b = this.options.resizeHandleDirections;
                    return 1 & b && a.push("up"), 2 & b && a.push("down"), 4 & b && a.push("left"), 
                    8 & b && a.push("right"), 16 & b && a.push("up-left"), 32 & b && a.push("up-right"), 
                    64 & b && a.push("down-left"), 128 & b && a.push("down-right"), a;
                }, a.prototype.getRestrictionString = function() {
                    var a;
                    switch (this.options.restriction) {
                      case 1:
                        a = "parent";
                        break;

                      case 2:
                        a = "";
                    }
                    return a;
                }, a.prototype.attachDragHandle = function() {
                    var b = this, c = this.element.get(0), d = this.options.autoScrollParent;
                    this.dragInteractable = interact(c).styleCursor(!1).ignoreFrom("[draggable=true], [drag-resize-disabled=true]").draggable({
                        inertia: this.options.inertia,
                        restrict: 0 === this.getRestrictionString().length ? void 0 : {
                            restriction: this.getRestrictionString(),
                            endOnly: !1,
                            elementRect: {
                                top: 0,
                                left: 0,
                                bottom: 1,
                                right: 1
                            }
                        },
                        autoScroll: null === d ? void 0 : {
                            enabled: !0,
                            container: d[0]
                        },
                        onstart: function(a) {
                            return b.onDragStart(a);
                        },
                        onmove: function(a) {
                            return b.onDragMove(a);
                        },
                        onend: function(a) {
                            return b.onDragEnd(a);
                        }
                    });
                    var e = 0, f = 0, g = jsCommon.DeferUtility.deferUntilNextFrame;
                    d && (this.autoScrollParent = d, this.autoScrollParentScrollHandlerFn = g(function() {
                        if (b.element.hasClass(a.DraggingClass)) {
                            var c = d.scrollTop(), g = d.scrollLeft(), h = g - f, i = c - e;
                            (0 !== h || 0 !== i) && b.onDragMove({
                                dx: h,
                                dy: i
                            }), e = c, f = g;
                        }
                    }), d.on("scroll.dragResizeElement", this.autoScrollParentScrollHandlerFn));
                }, a.prototype.onDragStart = function() {
                    this.dimensions = this.getDimensionsFromElement(this.element), this.element.addClass(a.DraggingClass), 
                    this.notifyDragStart(this.dimensions);
                }, a.prototype.onDragMove = function(a) {
                    this.dimensions.x += a.dx, this.dimensions.y += a.dy, this.draw(this.dimensions), 
                    this.notifyDragMove(this.dimensions);
                }, a.prototype.onDragEnd = function() {
                    this.element.removeClass(a.DraggingClass), this.snapToGridIfNeeded(), this.notifyDragEnd(this.dimensions);
                }, a.prototype.attachResizeHandles = function() {
                    for (var b = this, c = this.getResizeHandleDirectionArray(), d = 0, e = c.length; e > d; d++) {
                        var f = $("<div/>").addClass(a.ResizeHandleClass).attr(a.ResizeHandleDataDirectionAttr, c[d]).appendTo(this.element);
                        this.options.useCustomResizeHandles && f.addClass(a.CustomResizeHandleClass);
                    }
                    this.resizeInteractable = interact(".resizeHandle", {
                        context: this.rawElement
                    }).styleCursor(!1).ignoreFrom("[draggable=true], [drag-resize-disabled=true]").draggable({
                        restrict: {
                            restriction: "" === this.getRestrictionString() ? void 0 : this.element.parent().get(0),
                            elementRect: {
                                top: 0,
                                left: 0,
                                bottom: 1,
                                right: 1
                            }
                        },
                        onstart: function(a) {
                            return b.onResizeStart(a);
                        },
                        onmove: function(a) {
                            return b.onResizeMove(a);
                        },
                        onend: function(a) {
                            return b.onResizeEnd(a);
                        }
                    });
                }, a.prototype.onResizeStart = function(b) {
                    var c = b.target;
                    this.element.addClass(a.ResizingClass), this.dimensions = this.getDimensionsFromElement(this.element), 
                    this.resizeStartRect = {
                        left: this.dimensions.x,
                        top: this.dimensions.y,
                        right: this.dimensions.x + this.dimensions.width,
                        bottom: this.dimensions.y + this.dimensions.height,
                        width: this.dimensions.width,
                        height: this.dimensions.height
                    };
                    var d = c.getAttribute("data-direction");
                    this.resizeDirection = {
                        up: /up/.test(d),
                        down: /down/.test(d),
                        left: /left/.test(d),
                        right: /right/.test(d)
                    }, this.extend(this.restricted, this.dimensions), this.notifyResizeStart(this.dimensions);
                }, a.prototype.onResizeMove = function(a) {
                    var b = this.options.minWidth, c = this.options.minHeight, d = this.options.maxWidth, e = this.options.maxHeight;
                    this.resizeDirection.left && (this.dimensions.x += a.dx, this.dimensions.width -= a.dx), 
                    this.resizeDirection.up && (this.dimensions.y += a.dy, this.dimensions.height -= a.dy), 
                    this.resizeDirection.right && (this.dimensions.width += a.dx), this.resizeDirection.down && (this.dimensions.height += a.dy);
                    var f = this.dimensions.width, g = this.dimensions.height;
                    if (this.options.maintainAspectRatio) {
                        var h = Math.sqrt(f * f + g * g) / Math.sqrt(b * b + c * c);
                        g = c * h, f = b * h;
                    }
                    this.restricted.width = Math.min(Math.max(f, b), d), this.restricted.height = Math.min(Math.max(g, c), e), 
                    this.resizeDirection.left && (this.restricted.x = this.resizeStartRect.right - this.restricted.width), 
                    this.resizeDirection.up && (this.restricted.y = this.resizeStartRect.bottom - this.restricted.height), 
                    this.draw(this.restricted), this.notifyResizeMove(this.restricted);
                }, a.prototype.onResizeEnd = function() {
                    this.element.removeClass(a.ResizingClass), this.extend(this.dimensions, this.restricted), 
                    this.snapToGridIfNeeded(), this.notifyResizeEnd(this.dimensions);
                }, a.prototype.getDimensionsFromElement = function(a) {
                    var b = this.getPositionFromElement(a), c = this.getSizeFromElement(a);
                    return {
                        x: b.x,
                        y: b.y,
                        width: c.width,
                        height: c.height
                    };
                }, a.prototype.getSizeFromElement = function(a) {
                    return {
                        width: a.width(),
                        height: a.height()
                    };
                }, a.prototype.getPositionFromElement = function(a) {
                    var b = a.get(0).style, c = b.transform || b.webkitTransform, d = {
                        x: 0,
                        y: 0
                    };
                    if (c && c.length > 0) {
                        var e = c.match(/translate\((-?\d+(?:\.\d*)?)px, (-?\d+(?:\.\d*)?)px\)/);
                        e && (d.x = parseFloat(e[1]), d.y = parseFloat(e[2]));
                    }
                    return d;
                }, a.prototype.draw = function(a) {
                    var b = this;
                    this.options.disableDrawing || window.requestAnimationFrame(function() {
                        a = b.extend({}, a || b.dimensions);
                        var c = b.element.get(0).style;
                        c.webkitTransform = c.transform = "translate(" + a.x + "px, " + a.y + "px)", c.width = a.width + "px", 
                        c.height = a.height + "px";
                    });
                }, a.prototype.snapToGridIfNeeded = function() {
                    this.options.snapToGrid === !0 && this.options.gridSize && (this.dimensions || (this.dimensions = this.getDimensionsFromElement(this.element)), 
                    this.snapToGrid(this.dimensions));
                }, a.prototype.snapToGrid = function(a) {
                    var b = this.options.gridSize;
                    a.x = Math.round(a.x / b.width) * b.width, a.y = Math.round(a.y / b.height) * b.height, 
                    a.width = Math.round(a.width / b.width) * b.width, a.height = Math.round(a.height / b.height) * b.height, 
                    this.draw(a);
                }, a.prototype.notifyResizeStart = function(a) {
                    this.options && this.options.onResizeStart && this.options.onResizeStart(a);
                }, a.prototype.notifyResizeMove = function(a) {
                    this.options && this.options.onResizeMove && this.options.onResizeMove(a);
                }, a.prototype.notifyResizeEnd = function(a) {
                    this.options && this.options.onResizeEnd && this.options.onResizeEnd(a);
                }, a.prototype.notifyDragStart = function(a) {
                    this.options && this.options.onDragStart && this.options.onDragStart(a);
                }, a.prototype.notifyDragMove = function(a) {
                    this.options && this.options.onDragMove && this.options.onDragMove(a);
                }, a.prototype.notifyDragEnd = function(a) {
                    this.options && this.options.onDragEnd && this.options.onDragEnd(a);
                }, a.prototype.extend = function(a, b) {
                    for (var c in b) void 0 !== b[c] && (a[c] = b[c]);
                    return a;
                }, a.DragResizeElementClass = "dragResizeElement", a.DraggingClass = "dragging", 
                a.ResizingClass = "resizing", a.ResizeHandleClass = "resizeHandle", a.CustomResizeHandleClass = "customHandle", 
                a.ResizeHandleDataDirectionAttr = "data-direction", a.MinWidth = 100, a.MinHeight = 50, 
                a.MaxWidth = 1e4, a.MaxHeight = 1e4, a.DefaultPointerMoveTolerance = 5, a;
            }());
            a.DragResizeElement = b;
        }(b = a.controllers || (a.controllers = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(b) {
            var c = function() {
                function b(a, c) {
                    var d = this;
                    this.scope = a, this.services = c, this.element = this.services.$element, this.scope.disableClick = a.disableClick || !1, 
                    this.scope.maxInputLength = a.maxInputLength || b.defaultMaxLength, this.scope.makeEditable = function() {
                        return d.makeEditable();
                    }, this.scope.updateInputState = function() {
                        return d.updateInputState();
                    }, this.scope.onInternalBlur = function() {
                        return d.onInternalBlur();
                    }, this.scope.onInternalKeyDown = function(a) {
                        return d.onInternalKeyDown(a);
                    }, this.editableLabel = this.element.find(".editableLabel"), this.inputTextbox = this.element.find(".textInput"), 
                    this.textLabel = this.element.find(".textLabel"), this.scope.disableClick ? (this.editableState = a.editable || !1, 
                    this.setEditableState(this.editableState), a.$watch("editable", function(a, c) {
                        d.editableState !== a && (a && !c ? d.makeEditable() : (d.setEditableState(!1), 
                        d.editableLabel.removeClass(b.cssErrorClass), d.inputTextbox.val("")));
                    })) : this.setEditableState(!1);
                }
                return b.createOptions = function() {
                    return {
                        additionalServices: [ "$element" ]
                    };
                }, b.prototype.isInputValid = function() {
                    return this.scope.validate ? this.scope.validate(this.inputTextbox.val()) : !0;
                }, b.prototype.updateInputState = function() {
                    this.editableLabel.removeClass(b.cssErrorClass), this.isInputValid() || this.editableLabel.addClass(b.cssErrorClass);
                }, b.prototype.onInternalBlur = function() {
                    if (!this.cancelInput && this.scope.onBlur) {
                        var c = $(this.inputTextbox).val();
                        this.scope.onBlur(c);
                    }
                    this.cancelInput = !1, this.setEditableState(!1), this.editableLabel.removeClass(b.cssErrorClass), 
                    this.inputTextbox.val(""), this.scope.$emit(a.constants.editableLabelOnBlurEventName);
                }, b.prototype.onInternalKeyDown = function(a) {
                    switch (a.keyCode) {
                      case jsCommon.DOMConstants.enterKeyCode:
                        this.inputTextbox.blur();
                        break;

                      case jsCommon.DOMConstants.escKeyCode:
                        this.cancelInput = !0, this.inputTextbox.blur();
                    }
                }, b.prototype.makeEditable = function() {
                    var b = this, c = a.TextMeasurementService.getDivElementWidth(this.textLabel);
                    this.services.timeout(function() {
                        b.editableState = !0, b.inputTextbox = b.element.find(".textInput"), b.inputTextbox.width(c), 
                        b.inputTextbox.val(b.textLabel.text()), b.setEditableState(!0), b.services.timeout(function() {
                            b.inputTextbox.focus(), b.inputTextbox.select();
                        }, 0);
                    }, 0);
                }, b.prototype.setEditableState = function(a) {
                    this.editableState = a, this.editableState ? (this.editableLabel.addClass(b.cssActiveClass), 
                    this.inputTextbox.show(), this.textLabel.hide(), this.inputTextbox.on(jsCommon.DOMConstants.mouseClickEventName, function() {
                        event.stopPropagation();
                    }), this.inputTextbox.on(jsCommon.DOMConstants.keyDownEventName, function(a) {
                        switch (a.keyCode) {
                          case jsCommon.DOMConstants.enterKeyCode:
                          case jsCommon.DOMConstants.escKeyCode:
                            return;
                        }
                        event.stopPropagation();
                    }), this.inputTextbox.on(jsCommon.DOMConstants.contextmenuEventName, function() {
                        event.stopPropagation();
                    })) : (this.editableLabel.removeClass(b.cssActiveClass), this.textLabel.show(), 
                    this.inputTextbox.hide(), this.inputTextbox.off(jsCommon.DOMConstants.mouseClickEventName), 
                    this.inputTextbox.off(jsCommon.DOMConstants.keyDownEventName), this.inputTextbox.off(jsCommon.DOMConstants.contextmenuEventName));
                }, b.cssActiveClass = "active", b.cssErrorClass = "error", b.defaultMaxLength = 100, 
                b;
            }();
            b.EditableLabelController = c;
        }(c = b.controllers || (b.controllers = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a(a, b) {
                    var c = this;
                    this.scope = a, this.services = b, this.scope.close = function() {
                        return c.onClose();
                    }, this.scope.confirm = function() {
                        return c.onConfirm();
                    }, this.scope.cancel = function() {
                        return c.onCancel();
                    };
                }
                return a.prototype.onClose = function() {
                    this.scope.onCloseAction && this.scope.onCloseAction();
                }, a.prototype.onConfirm = function() {
                    this.scope.onConfirmAction && this.scope.onConfirmAction();
                    var a = this.scope.viewModel;
                    a.autoCloseDialogOnConfirmButtonSelected && this.onClose();
                }, a.prototype.onCancel = function() {
                    this.scope.onCancelAction && this.scope.onCancelAction();
                }, a;
            }();
            a.ModalDialogController = b;
        }(b = a.controllers || (a.controllers = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a(a, b) {
                    var c = this;
                    this.scope = a, this.services = b, this.scope.close = function() {
                        return c.onClose();
                    }, this.scope.confirm = function() {
                        return c.onConfirm();
                    }, this.scope.deny = function() {
                        return c.onDeny();
                    }, this.scope.cancel = function() {
                        return c.onCancel();
                    };
                }
                return a.prototype.onClose = function() {
                    this.scope.onCloseAction && this.scope.onCloseAction();
                }, a.prototype.onConfirm = function() {
                    this.scope.onConfirmAction && this.scope.onConfirmAction();
                    var a = this.scope.viewModel;
                    a.autoCloseDialogOnConfirmButtonSelected && this.onClose();
                }, a.prototype.onCancel = function() {
                    this.scope.onCancelAction && this.scope.onCancelAction();
                }, a.prototype.onDeny = function() {
                    this.scope.onDenyAction && this.scope.onDenyAction();
                }, a;
            }();
            a.ModalThreeButtonDialogController = b;
        }(b = a.controllers || (a.controllers = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(c) {
            var d = a.data.DataViewTransform, e = jsCommon.PerformanceUtil, f = function() {
                function c(a, b) {
                    var c = this;
                    this.scope = a, this.visualPlugin = b.visualPlugin, b.telemetryService && (this.perfLoadEvent = b.telemetryService.startPerfEvent(this.scope, null)), 
                    a.viewModel.visualPlugin && (this.visualPlugin = a.viewModel.visualPlugin), this.element = b.$element, 
                    this.allowDeferredRendering = this.scope.allowDeferredRendering, this.initialize(), 
                    this.scope.$on("$destroy", function() {
                        c.destroyVisual(), c.element = null, c.model.visual = null, c.perfLoadEvent && c.perfLoadEvent.resolve();
                    });
                }
                return c.createOptions = function() {
                    return {
                        additionalServices: [ "$element", "visualPlugin", "telemetryService" ]
                    };
                }, c.prototype.initialize = function() {
                    var a = this;
                    if (!this.processModel(this.scope.viewModel)) {
                        this.perfLoadEvent && (this.perfLoadEvent.resolve(), this.perfLoadEvent = null);
                        var b = this.scope.$watch("viewModel", function(c) {
                            a.processModel(c) && b();
                        });
                    }
                }, c.prototype.processModel = function(a) {
                    var c = !!this.model;
                    if (this.model = a, !a || !a.type) return !1;
                    var d = this.visualPlugin.getPlugin(a.type);
                    if (!d) return !1;
                    this.capabilities = d.capabilities;
                    var e = {
                        element: this.element,
                        host: a.hostServices,
                        style: a.visualStyle || b.services.visualStyles.create(),
                        viewport: a.viewport,
                        animation: {
                            transitionImmediate: !1
                        }
                    };
                    return a.interactivityOptions && (e.interactivity = a.interactivityOptions), this.initVisual(d, e, a, c), 
                    !0;
                }, c.prototype.executeDeferred = function(a) {
                    this.allowDeferredRendering === !0 && window.setImmediate ? window.setImmediate(function() {
                        return a();
                    }) : a();
                }, c.prototype.initVisual = function(a, b, c, d) {
                    var e = this;
                    if (b.viewport) {
                        this.destroyVisual();
                        var f = a.create();
                        this.model.visual = f, f.init(b), f.onDataChanged && (this.onDataChanged(c.data), 
                        d || this.scope.$watch("viewModel.data", function(a, b) {
                            a !== b && e.onDataChanged(a);
                        })), d || (this.scope.$watch("viewModel.type", function(a, b) {
                            b && a && a !== b && (e.element.empty(), e.processModel(e.model));
                        }), this.scope.$watch("viewModel.viewport", function(a) {
                            return e.onViewportChanged(a);
                        }));
                    } else var g = this.scope.$watch("viewModel.viewport", function(f) {
                        f && (g(), b.viewport = f, e.initVisual(a, b, c, d));
                    });
                }, c.prototype.destroyVisual = function() {
                    var a = this.model;
                    if (a) {
                        var b = a.visual;
                        b && b.destroy && b.destroy();
                    }
                }, c.prototype.onViewportChanged = function(a) {
                    if (a = a || {
                        height: 0,
                        width: 0
                    }, !this.currentViewport || this.currentViewport.height !== a.height || this.currentViewport.width !== a.width) if (this.currentViewport = a, 
                    this.viewport = a, this.model.visual.update) {
                        if (this.dataViews) {
                            var b = e.create("update(" + this.model.type + ")");
                            this.model.visual.update({
                                viewport: a,
                                dataViews: this.dataViews,
                                duration: 0
                            }), b.end();
                        }
                    } else {
                        var b = e.create("onViewportChanged(" + this.model.type + ")");
                        this.model.visual.onResizing(a, 0), b.end();
                    }
                }, c.prototype.onDataChanged = function(b) {
                    var f = this, g = this.model.visual;
                    if (g.onDataChanged) {
                        var h, i = this.capabilities;
                        b && b.dataView && (h = b.dataView);
                        var j, k = a.DataViewAnalysis.validateAndReshape(h, i.dataViewMappings);
                        if (k.isValid) {
                            var l = d.apply({
                                prototype: k.dataView,
                                objectDescriptors: i ? i.objects : null,
                                dataViewMappings: i ? i.dataViewMappings : null,
                                transforms: this.model.dataTransforms,
                                colorAllocatorFactory: a.visuals.createColorAllocatorFactory()
                            });
                            j = {
                                dataViews: l
                            }, b && b.isFirstSegment === !1 && (j.operationKind = 1), this.model.animateOnDataChanged && (j.duration = c.animationDurationInMilliseconds);
                        } else this.model.allowInvalidDataView && (j = {
                            dataViews: []
                        });
                        j && this.executeDeferred(function() {
                            if (g === f.model.visual) {
                                if (f.dataViews = j.dataViews, f.model.visual.update) {
                                    if (f.viewport) {
                                        var b = e.create("update(" + f.model.type + ")");
                                        f.model.visual.update({
                                            viewport: f.viewport,
                                            dataViews: f.dataViews,
                                            duration: j.duration
                                        }), b.end();
                                    }
                                } else {
                                    var b = e.create("onDataChanged(" + f.model.type + ")");
                                    g.onDataChanged(j), b.end();
                                }
                                !f.visualHasInitialData && j.dataViews.length > 0 && (f.element.attr("initialized", ""), 
                                f.visualHasInitialData = !0, f.perfLoadEvent && (f.perfLoadEvent.resolve(), f.perfLoadEvent = null), 
                                f.scope.$emit(a.constants.visualDataChanged));
                            }
                        });
                    }
                }, c.animationDurationInMilliseconds = 250, c;
            }();
            c.VisualController = f;
        }(c = b.controllers || (b.controllers = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a() {
                    this.restrict = "A", this.link = function(a, b, c) {
                        var d = a.$eval(c.applyStyle);
                        d.element(b), d.apply();
                    };
                }
                return a;
            }();
            a.ApplyStyle = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            var c = function() {
                function b() {
                    this.restrict = "E", this.replace = !0, this.templateUrl = "views/authDialogView.html", 
                    this.scope = {
                        viewModel: "="
                    }, this.controller = a.Services.createController(a.controllers.AuthDialogController);
                }
                return b;
            }();
            b.AuthDialog = c;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(b) {
            var c = function() {
                function b(b) {
                    var c = this;
                    this.restrict = "A", this.link = function(b, d) {
                        d.on(jsCommon.DOMConstants.mouseClickEventName, function() {
                            if (d.prop(a.constants.tagName).toLowerCase() === jsCommon.DOMConstants.Anchor) {
                                var b = d.attr(jsCommon.DOMConstants.hrefAttribute);
                                jsCommon.StringExtensions.isNullOrUndefinedOrWhiteSpaceString(b) || c.telemetryService.logEvent(a.telemetry.DashboardOpenLink, b);
                            }
                        });
                    }, this.telemetryService = b;
                }
                return b;
            }();
            b.ClickTelemetry = c;
        }(c = b.directives || (b.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            var c = function() {
                function b() {
                    this.restrict = "E", this.transclude = !0, this.replace = !0, this.templateUrl = "views/collapsibleSectionView.html", 
                    this.scope = {
                        expandedTitleLocalizationId: "@expandedTitleLocalizationId",
                        collapsedTitleLocalizationId: "@collapsedTitleLocalizationId"
                    }, this.link = function(a, b) {
                        a.$watch(function() {
                            return b.is(":visible");
                        }, function(b) {
                            b === !1 && (a.isCollapsibleSectionExpanded = !1);
                        }, !0);
                    }, this.controller = a.Services.createController(a.controllers.CollapsibleSectionController);
                }
                return b;
            }();
            b.CollapsibleSection = c;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            var c = function() {
                function b() {
                    this.restrict = "E", this.replace = !0, this.templateUrl = "views/datasetParametersDialogView.html", 
                    this.scope = {
                        viewModel: "="
                    }, this.controller = a.Services.createController(a.controllers.DatasetParametersDialogController);
                }
                return b;
            }();
            b.DatasetParametersDialog = c;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a() {
                    this.restrict = "E", this.templateUrl = "views/dialogConfirmContent.html", this.replace = !0, 
                    this.scope = {
                        viewModel: "="
                    };
                }
                return a;
            }();
            a.DialogConfirmContent = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(b) {
            var c = function() {
                function b() {
                    this.restrict = "E", this.templateUrl = "views/dialogPromptContent.html", this.replace = !0, 
                    this.scope = {
                        viewModel: "="
                    }, this.link = function(b, c) {
                        c.find("input[type=text]").on("change keyup paste mouseup", function(c) {
                            b.$emit(0 === $(c.target).val().length ? a.constants.disableConfirmButtonEventName : a.constants.enableConfirmButtonEventName);
                        }).on("keyup", function(a) {
                            if (a.which === jsCommon.DOMConstants.enterKeyCode) {
                                a.stopPropagation();
                                var c = b.$parent.confirmDialog;
                                c && (c(), b.$apply());
                            } else if (a.which === jsCommon.DOMConstants.escKeyCode) {
                                a.stopPropagation();
                                var d = b.$parent.closeDialog;
                                d && (d(), b.$apply());
                            }
                        }), setTimeout(function() {
                            c.find("input[type=text]").focus();
                        });
                    };
                }
                return b;
            }();
            b.DialogPromptContent = c;
        }(c = b.directives || (b.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(b) {
            var c = function() {
                function b(b) {
                    var c = this;
                    this.restrict = "A", this.link = function(b, d, e) {
                        d.attr("draggable", "true").on("dragstart", function(f) {
                            c.dragDataService.setDragElement(d), e.dragContext && c.dragDataService.setDragContext(b.$eval(e.dragContext));
                            var g = {
                                sourceElement: d,
                                dragData: c.dragDataService.getDragContext()
                            }, h = f.originalEvent;
                            h && h.dataTransfer && h.dataTransfer.setData("Text", "powerBIRocks"), b.$emit(a.constants.dragStartEventName, f, g);
                        }).on("dragend", function(e) {
                            c.dragDataService.setDragElement(null), c.dragDataService.setDragContext(null);
                            var f = {
                                sourceElement: d
                            };
                            b.$emit(a.constants.dragEndEventName, e, f);
                        });
                    }, this.dragDataService = b;
                }
                return b;
            }();
            b.Drag = c;
        }(c = b.directives || (b.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(c) {
            var d = function() {
                function c() {
                    this.restrict = "A", this.link = function(c, d, e) {
                        var f, g = c.$eval(e.dragResizeContext), h = c.$eval(e.onDragStart), i = c.$eval(e.onDragMove), j = c.$eval(e.onDragEnd), k = c.$eval(e.onResizeStart), l = c.$eval(e.onResizeMove), m = c.$eval(e.onResizeEnd);
                        switch (e.dragResizeRestriction) {
                          case "none":
                            f = 2;
                            break;

                          default:
                            f = 1;
                        }
                        var n = new b.controllers.DragResizeElement(d, {
                            onDragStart: function(b) {
                                g && h && h.apply(g, [ g, d, b ]), c.$emit(a.constants.DragResizeElementDragStartEventName, b);
                            },
                            onDragMove: function(b) {
                                g && i && i.apply(g, [ g, d, b ]), c.$emit(a.constants.DragResizeElementDragMoveEventName, b);
                            },
                            onDragEnd: function(b) {
                                g && j && j.apply(g, [ g, d, b ]), c.$emit(a.constants.DragResizeElementDragEndEventName, b);
                            },
                            onResizeStart: function(b) {
                                g && k && k.apply(g, [ g, d, b ]), c.$emit(a.constants.DragResizeElementResizeStartEventName, b);
                            },
                            onResizeMove: function(b) {
                                g && l && l.apply(g, [ g, d, b ]), c.$emit(a.constants.DragResizeElementResizeMoveEventName, b);
                            },
                            onResizeEnd: function(b) {
                                g && m && m.apply(g, [ g, d, b ]), c.$emit(a.constants.DragResizeElementResizeEndEventName, b);
                            },
                            restriction: f,
                            resizeHandleDirections: 255
                        });
                        c.$on("$destroy", function() {
                            n.destroy();
                        });
                    };
                }
                return c;
            }();
            c.DragResize = d;
        }(c = b.directives || (b.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            function b(a, b, h, i) {
                var j = b.offset(), k = a.width(), l = a.height(), m = b.width(), n = b.height();
                e(b) && (i - l / 2 < j.top ? d(b, -1 * g) : i + l / 2 > j.top + n && d(b, g)), f(b) && (h - k / 2 < j.left ? c(b, -1 * g) : h + k / 2 > j.left + m && c(b, g));
            }
            function c(a, b) {
                a.stop(!0, !0).animate({
                    scrollLeft: a.scrollLeft() + b
                }, 100);
            }
            function d(a, b) {
                a.stop(!0, !0).animate({
                    scrollTop: a.scrollTop() + b
                }, 100);
            }
            function e(a) {
                return a[0].scrollHeight > a.height();
            }
            function f(a) {
                return a[0].scrollWidth > a.width();
            }
            var g = 10, h = function() {
                function a(a) {
                    var c = this;
                    this.restrict = "A", this.link = function(a, d) {
                        d.on("dragover", function(a) {
                            var e = c.dragDataService.getDragElement();
                            b(e, d, a.originalEvent.pageX, a.originalEvent.pageY), a.preventDefault(), a.stopPropagation();
                        });
                    }, this.dragDataService = a;
                }
                return a;
            }();
            a.DragScroll = h;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(b) {
            function c(a, b, c) {
                return {
                    sourceElement: a,
                    targetElement: b,
                    dragData: c
                };
            }
            function d(a, b) {
                return a ? b.indexOf(a.attr("drag")) >= 0 : !0;
            }
            var e = function() {
                function b(e) {
                    var f = this;
                    this.restrict = "A", this.link = function(e, g, h) {
                        var i = h.drop.split(/\s/), j = h.dropAllowPropagation;
                        g.on("dragover", function(h) {
                            var k = f.dragDataService.getDragElement();
                            if (d(k, i)) {
                                j || (h.preventDefault(), h.stopPropagation()), g.addClass(b.dragoverClass);
                                var l = c(k, g, f.dragDataService.getDragContext());
                                e.$emit(a.constants.dragOverEventName, h, l);
                            }
                        }).on("drop", function(h) {
                            j || (h.preventDefault(), h.stopPropagation());
                            var k = f.dragDataService.getDragElement();
                            if (d(k, i)) {
                                g.removeClass(b.dragoverClass);
                                var l = c(k, g, f.dragDataService.getDragContext());
                                e.$emit(a.constants.dropEventName, h, l);
                            }
                        }).on("dragenter", function(b) {
                            j || (b.preventDefault(), b.stopPropagation());
                            var h = f.dragDataService.getDragElement();
                            if (d(h, i)) {
                                var k = c(h, g, f.dragDataService.getDragContext());
                                e.$emit(a.constants.dragEnterEventName, b, k);
                            }
                        }).on("dragleave", function(h) {
                            j || (h.preventDefault(), h.stopPropagation());
                            var k = f.dragDataService.getDragElement();
                            if (d(k, i)) {
                                g.removeClass(b.dragoverClass);
                                var l = c(k, g, f.dragDataService.getDragContext());
                                e.$emit(a.constants.dragLeaveEventName, h, l);
                            }
                        });
                    }, this.dragDataService = e;
                }
                return b.dragoverClass = "dragover", b;
            }();
            b.Drop = e;
        }(c = b.directives || (b.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var DropDownMenuItemType;

!function(a) {
    a[a.Item = 0] = "Item", a[a.Title = 1] = "Title", a[a.Separator = 2] = "Separator";
}(DropDownMenuItemType || (DropDownMenuItemType = {}));

var DropdownOrientation;

!function(a) {
    a[a.Horizontal = 0] = "Horizontal", a[a.Vertical = 1] = "Vertical";
}(DropdownOrientation || (DropdownOrientation = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            var c = function() {
                function b() {
                    this.restrict = "A", this.replace = !1, this.scope = {
                        dropdownItems: "=",
                        dropdownClass: "@",
                        dropdownDarkTheme: "=",
                        dropdownOnItemSelected: "&",
                        dropdownOrientation: "=?"
                    }, this.link = function(a, b, c) {
                        a.dropdownClass = c.dropdownMenuClass, a.$applyAsync(function() {
                            a.dropdownOrientation = "horizontal" === c.dropdownOrientation ? 0 : 1;
                        });
                    }, this.controller = a.Services.createController(d);
                }
                return b;
            }();
            b.DropdownMenu = c;
            var d = function() {
                function a(a, b) {
                    var c = this;
                    this.scope = a, this.element = b.$element, this.services = b, this.scope.select = function(a) {
                        return c.select(a);
                    }, a.$on("$destroy", function() {
                        return c.dispose();
                    }), this.element.bind(jsCommon.DOMConstants.mouseClickEventName, function(a) {
                        return c.toggleMenu(a);
                    }), a.$on("dropdownExpand", function(a) {
                        a.defaultPrevented || (a.preventDefault(), c.toggleMenu());
                    });
                }
                return a.createOptions = function() {
                    return {
                        additionalServices: [ "$element", "dropdownMenuService" ]
                    };
                }, a.prototype.dispose = function() {
                    this.menuElement && this.menuElement.remove();
                }, a.prototype.toggleMenu = function(a) {
                    var b = this;
                    a && (a.preventDefault(), a.stopPropagation()), this.menuElement || this.compileMenuElement(), 
                    this.services.timeout(function() {
                        b.services.dropdownMenuService.toggleActive(b.menuElement, b.element, a);
                    });
                }, a.prototype.select = function(a) {
                    this.scope.dropdownOnItemSelected({
                        selected: a
                    }), this.services.dropdownMenuService.hideMenu();
                }, a.prototype.compileMenuElement = function() {
                    var b;
                    b = angular.element(a.template), b.data("$dropdownMenuController", this), this.menuElement = this.services.compile(b)(this.scope), 
                    this.scope.menuElement = this.menuElement;
                }, a.template = "<ul class='angular-dropdown {{dropdownClass}}' ng-class='{dark: dropdownDarkTheme === true}'><li ng-repeat='item in dropdownItems' class='dropdown-item' ng-mousedown='select(item); $event.stopPropagation();'><a ng-if='::item.type === 0' class='{{::item.containerClass}}' ng-href='{{::item.href}}' target='{{::item.hrefTarget ? item.hrefTarget : \"_blank\" }}'><div class='dropdown-content {{item.itemClass}}' ><div class='dropdown-label {{::item.labelClass}}'>{{::item.text}}</div><div class='dropdown-description {{::item.descriptionClass}}' ng-if='::item.description'>{{::item.description}}</div></div></a><span ng-if='::item.type === 1' class='{{::item.containerClass}}'><div class='dropdown-content {{item.itemClass}}' ><div class='dropdown-label {{::item.labelClass}}'>{{::item.text}}</div><div class='dropdown-description {{::item.descriptionClass}}' ng-if='::item.description'>{{::item.description}}</div></div></span><span ng-if='::item.type === 2' class='dropdown-separator'></span></li></ul>", 
                a;
            }();
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a() {
                    this.restrict = "E", this.replace = !0, this.templateUrl = "views/dropdownMenuItems.html", 
                    this.scope = {
                        dropdownItems: "=",
                        dropdownClass: "@",
                        dropdownDarkTheme: "=",
                        dropdownOnItemSelected: "&",
                        dropdownOrientation: "=?"
                    };
                }
                return a;
            }();
            a.DropdownMenuItems = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a(a) {
                    var b = this;
                    this.restrict = "E", this.replace = !0, this.transclude = !0, this.template = '<div class="dropdownOverlay" ng-transclude></div>', 
                    this.link = function(a, c, d) {
                        var e = d.dropdownOverlayClass;
                        e && (c.removeClass("dropdownOverlay"), c.addClass(e)), b.overlayService.register(c, !0), 
                        a.$on("$destroy", function() {
                            return b.overlayService.unregister(c, !0);
                        });
                    }, this.overlayService = a;
                }
                return a;
            }();
            a.DropdownOverlay = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a(a) {
                    var b = this;
                    this.clickAction = "click", this.restrict = "A", this.link = function(a, c, d) {
                        var e, f = d.preferLeft, g = d.needBlur;
                        c.on(b.clickAction, function(g) {
                            if (!e || 0 === e.length) {
                                var h = d.dropdownOverlayInvoke;
                                e = c.siblings('[dropdown-overlay-name="' + h + '"]'), 0 === e.length && (e = $('[dropdown-overlay-name="' + h + '"]'));
                            }
                            a.$applyAsync(function() {
                                b.overlayService.toggleDropdown(e, c, g, "true" === f);
                            });
                        }), "true" === g && c.on("blur", function() {
                            a.$applyAsync(function() {
                                b.overlayService.hideAllDropdowns();
                            });
                        });
                    }, this.overlayService = a;
                }
                return a;
            }();
            a.DropdownOverlayInvoke = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            var c = function() {
                function b() {
                    this.restrict = "E", this.templateUrl = "views/editableLabel.html", this.replace = !0, 
                    this.scope = {
                        viewModel: "=",
                        onBlur: "=",
                        validate: "=",
                        disableClick: "=?",
                        editable: "=?",
                        maxInputLength: "=?",
                        customTooltip: "=?"
                    }, this.link = function(a, b) {
                        var c = b.find("input");
                        c && c.length > 0 && c.on(jsCommon.DOMConstants.mouseDownEventName, function() {
                            c.get(0).setSelectionRange(-1, -1);
                        });
                    }, this.controller = a.Services.createController(a.controllers.EditableLabelController);
                }
                return b;
            }();
            b.EditableLabel = c;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a() {
                    this.restrict = "A", this.link = function(a, b, c) {
                        var d = a.$watch(c.focusOn, function(a) {
                            void 0 !== a && setTimeout(function() {
                                b.focus();
                            }, 0);
                        });
                        a.$on("$destroy", function() {
                            d();
                        });
                    };
                }
                return a;
            }();
            a.FocusOn = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a() {
                    this.restrict = "E", this.transclude = !0, this.replace = !0, this.templateUrl = "views/inlineMessageView.html", 
                    this.scope = {
                        mode: "=",
                        traceDetails: "="
                    };
                }
                return a;
            }();
            a.InlineMessage = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a() {
                    this.restrict = "E", this.transclude = !0, this.replace = !0, this.templateUrl = "views/inlineNameValuePairsView.html", 
                    this.scope = {
                        mode: "=",
                        showTitle: "=",
                        detailExpand: "=",
                        nameValuePairs: "="
                    };
                }
                return a;
            }();
            a.InlineNameValuePairs = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            var c = function() {
                function b(b) {
                    var c = this;
                    this.restrict = "A", this.link = function(b, d, e) {
                        var f = e.localize;
                        if (a.localization.loader.isDataLoaded) {
                            var g = c.localizationService.get(f);
                            d.text(g || "");
                        } else var h = b.$watch(function() {
                            return a.localization.loader.isDataLoaded;
                        }, function(a) {
                            var b = c.localizationService.get(f);
                            d.text(b || ""), a && h();
                        });
                    }, this.localizationService = b;
                }
                return b;
            }();
            b.Localize = c;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            var c = function() {
                function b(b) {
                    var c = this;
                    this.restrict = "A", this.link = function(b, d, e) {
                        var f = e.localizeTooltip;
                        if (a.localization.loader.isDataLoaded) {
                            var g = c.localizationService.get(f);
                            d.attr("title", g || "");
                        } else var h = b.$watch(function() {
                            return a.localization.loader.isDataLoaded;
                        }, function(a) {
                            var b = c.localizationService.get(f);
                            d.attr("title", b || ""), a === !0 && h();
                        });
                    }, this.localizationService = b;
                }
                return b;
            }();
            b.LocalizeTooltip = c;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            var c = function() {
                function b() {
                    this.restrict = "E", this.templateUrl = "views/modalDialog.html", this.transclude = !0, 
                    this.replace = !0, this.scope = {
                        viewModel: "=",
                        onCloseAction: "&",
                        onConfirmAction: "&",
                        onCancelAction: "&"
                    }, this.link = function(a, b, c) {
                        var d = c.confirmButtonText;
                        d || (d = "OK"), a.confirmButtonText = d, b.appendTo($("body"));
                    }, this.controller = a.Services.createController(a.controllers.ModalDialogController);
                }
                return b;
            }();
            b.ModalDialog = c;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a() {
                    this.restrict = "E", this.templateUrl = "views/modalOverlay.html", this.transclude = !0, 
                    this.replace = !0;
                }
                return a;
            }();
            a.ModalOverlay = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            var c = function() {
                function b() {
                    this.restrict = "E", this.templateUrl = "views/modalThreeButtonDialog.html", this.transclude = !0, 
                    this.replace = !0, this.scope = {
                        viewModel: "=",
                        onCloseAction: "&",
                        onConfirmAction: "&",
                        onDenyAction: "&",
                        onCancelAction: "&"
                    }, this.link = function(a, b, c) {
                        var d = c.confirmButtonText;
                        d || (d = "OK"), a.confirmButtonText = d, b.appendTo($("body")), b.on("keyup", function(b) {
                            if (b.which === jsCommon.DOMConstants.enterKeyCode) {
                                b.stopPropagation();
                                var c = a.confirmDialog;
                                c && (c(), a.$apply());
                            } else if (b.which === jsCommon.DOMConstants.escKeyCode) {
                                b.stopPropagation();
                                var d = a.$parent.closeDialog;
                                d && (d(), a.$apply());
                            }
                        }), setTimeout(function() {
                            b.find(".confirm").focus();
                        });
                    }, this.controller = a.Services.createController(a.controllers.ModalThreeButtonDialogController);
                }
                return b;
            }();
            b.ModalThreeButtonDialog = c;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a(a) {
                    var b = this;
                    this.restrict = "A", this.replace = !1, this.link = function(a, c, d) {
                        c.on(jsCommon.DOMConstants.contextmenuEventName, function(c) {
                            var e = b.$parse(d.ngRightClick);
                            e && a.$apply(function() {
                                c.preventDefault(), e(a, c);
                            });
                        });
                    }, this.$parse = a;
                }
                return a;
            }();
            a.NgRightClick = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a(a) {
                    var b = this;
                    this.restrict = "A", this.link = function(a, c, d) {
                        var e = d.ngRepeatFinishEvent;
                        a.$last === !0 && b.$timeout(function() {
                            a.$emit(e);
                        });
                    }, this.$timeout = a;
                }
                return a;
            }();
            a.NgRepeatFinishEvent = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a() {
                    this.restrict = "E", this.replace = !0, this.transclude = !0, this.template = '<div class="ng-scrollbar-container scrollbar-inner" drag-scroll ng-transclude></div>', 
                    this.link = function(a, b, c) {
                        var d = a.$eval(c.ngScrollbarsConfig);
                        setTimeout(function() {
                            b.scrollbar(d);
                        }, 0);
                    };
                }
                return a;
            }();
            a.NgScrollbars = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a(a) {
                    var b = this;
                    this.restrict = "E", this.replace = !0, this.templateUrl = "views/notificationBar.html", 
                    this.link = function(a) {
                        a.service = b.service, a.dismiss = function(a) {
                            a.onClose && a.onClose(), b.service.hide(a.id);
                        };
                    }, this.service = a;
                }
                return a;
            }();
            a.NotificationBar = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a() {
                    this.restrict = "E", this.replace = !0, this.transclude = !0, this.templateUrl = "views/popupContainer.html", 
                    this.link = function(a, b) {
                        a.$evalAsync(function() {
                            var c = b.outerHeight(), d = c + b.offset().top > $(window).height(), e = b.parent().offset().top - c;
                            d ? (b.css({
                                top: e
                            }), a.isOutOfScreen = !0) : b.css({
                                top: b.parent().offset().top + b.parent().innerHeight()
                            });
                        });
                    };
                }
                return a;
            }();
            a.PopupContainer = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a(a) {
                    var b = this;
                    this.restrict = "E", this.templateUrl = "views/qnaQuestionBox.html", this.scope = {
                        connectionGroup: "=connectionGroup",
                        options: "=options",
                        getInterpretRequestScope: "=getInterpretRequestScope"
                    }, this.replace = !0, this.link = function(a, c) {
                        var d, e = !1, f = function(b, f) {
                            if (!e && b && clusterUri) {
                                var g = {
                                    group: a.connectionGroup,
                                    interpretRequestOptons: a.options,
                                    disableBlurOnConfirmQuery: !0,
                                    disableNotification: !0,
                                    telemetryHostName: "PowerBI",
                                    getInterpretRequestScope: a.getInterpretRequestScope
                                }, h = new InJs.QuestionBox.QuestionBoxControl(c, g);
                                f.ensureLocalization(function() {
                                    h.placeholder = f.get("QnaTextBoxPlaceholder"), h.placeholderOnInit = f.get("QnaTextBoxLoadingPlaceholder"), 
                                    h.utteranceFeedbackTooltip = f.get("UtteranceFeedbackTooltip"), h.getLocalizedResource = function(a) {
                                        return f.get(a);
                                    };
                                }), $(a.connectionGroup).on(InJs.Events.InterpretIssuedEventName, function() {
                                    return a.showLoadingIndicator = !0;
                                }), $(a.connectionGroup).on(InJs.Events.InterpretErrorEventName, function() {
                                    return a.showLoadingIndicator = !1;
                                }), $(a.connectionGroup).on(InJs.Events.InterpretRetryCountExceededEventName, function() {
                                    return a.showLoadingIndicator = !1;
                                }), $(a.connectionGroup).on(InJs.Events.InterpretSuccessEventName, function() {
                                    return a.showLoadingIndicator = !1;
                                }), $(a.connectionGroup).on(InJs.Events.ConnectionGroupInvalidatedEventName, function() {
                                    return a.showLoadingIndicator = !1;
                                }), a.$on("$destroy", function() {
                                    d && d();
                                }), e = !0;
                            }
                        };
                        if (f(a.connectionGroup, b.localizationService), !e) var d = a.$watch("connectionGroup", function(a) {
                            f(a, b.localizationService);
                        });
                    }, this.localizationService = a;
                }
                return a;
            }();
            a.QnaQuestionbox = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a() {
                    this.restrict = "A", this.transclude = !0, this.link = function(a, b, c) {
                        var d, e, f, g, h = angular.element('<div class="pane-splitter"></div>');
                        b.append(h);
                        var i = parseInt(c.resizableCollapsedWidth, 10), j = parseInt(c.resizableDefaultWidth, 10), k = parseInt(c.resizableMinWidth, 10), l = c.resizableContainerid, m = c.resizableSibling, n = parseInt(h.css("width"), 10), o = function(a) {
                            if ("true" !== a) b.css("width", i + "px"), h.hide(); else {
                                var c = $(document).find("#" + l);
                                if (d = c.width(), d > 0 && m) {
                                    var e = $(c).find("." + m);
                                    if (1 === e.length) {
                                        f = e.width();
                                        var g = d - f;
                                        if (j > g) {
                                            var k = d - j - n;
                                            k > 0 && e.css("width", k + "px");
                                        }
                                    }
                                }
                                b.css("width", j + "px"), h.show();
                            }
                        }, p = function(a) {
                            a.preventDefault(), g = !1, $(document).off("mousemove", q), $(document).off("mousedown", p);
                        }, q = function(a) {
                            if (g) {
                                var c = d;
                                f && (c = c - f - n);
                                var h = e - a.clientX;
                                h > c && (h = c), k > h && (h = k), b.css("width", h + "px");
                            }
                        }, r = function(a) {
                            a.preventDefault();
                            var c = $(document).find("#" + l);
                            if (d = c.width(), e = b.offset().left + b.width(), m) {
                                var h = $(c).find("." + m);
                                1 === h.length && (f = h.width());
                            } else f = void 0;
                            g = !0, $(document).on("mouseup", p), $(document).on("mousemove", q);
                        };
                        o(c.resizableExpanded), c.$observe("resizableExpanded", o), h.on("mousedown", r), 
                        a.$on("$destroy", function() {
                            h.off("mousedown", r);
                        });
                    };
                }
                return a;
            }();
            a.Resizable = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a() {
                    this.restrict = "E", this.replace = !0, this.templateUrl = "views/spinner.html", 
                    this.link = function(a, b, c) {
                        void 0 !== c.dots && (a.dots = !0);
                    };
                }
                return a;
            }();
            a.Spinner = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a(a) {
                    var b = this;
                    this.restrict = "E", this.link = function(a, c) {
                        a.$watchGroup([ "viewModel.toolbarVisible", "viewModel.isSelected" ], function() {
                            b.refreshToolbar(a, c.parent());
                        }), b.refreshToolbar(a, c.parent());
                    }, this.overlayService = a;
                }
                return a.prototype.refreshToolbar = function(a, b) {
                    var c = a.viewModel, d = c.$toolbarElement;
                    d && (c.toolbarVisible && c.isSelected ? this.overlayService.showOverlay(d, b, !1) : this.overlayService.hideOverlay(d));
                }, a;
            }();
            a.ToolbarOverlay = b;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            var c = function() {
                function b() {
                    this.restrict = "A", this.controller = a.Services.createController(d);
                }
                return b;
            }();
            b.Tooltip = c;
            var d = function() {
                function a(a, b) {
                    var c = this;
                    this.scope = a, this.services = b, this.element = this.services.$element, this.attrs = this.services.$attrs, 
                    this.showTooltip = $.proxy(this.showTooltipInternal, this), this.hideTooltip = $.proxy(this.hideTooltipInternal, this), 
                    a.$on("$destroy", function() {
                        return c.dispose();
                    }), this.services.$element.on(jsCommon.DOMConstants.mouseMoveEventName, this.showTooltip), 
                    this.services.$element.on(jsCommon.DOMConstants.mouseLeaveEventName, this.hideTooltip);
                }
                return a.createOptions = function() {
                    return {
                        additionalServices: [ "$element", "tooltipService", "$attrs" ]
                    };
                }, a.prototype.showTooltipInternal = function(a) {
                    var b = this.services.$element, c = b.attr("tooltip-disable"), d = b.attr("tooltip-title"), e = b.attr("tooltip-description"), f = Number(b.attr("tooltip-delay")), g = b.attr("tooltip-arrow-position");
                    "true" !== c && this.services.tooltipService.showTooltip(this.element, a, d, e, f, g);
                }, a.prototype.hideTooltipInternal = function(a) {
                    this.services.tooltipService.hideTooltip(a);
                }, a.prototype.dispose = function() {
                    this.services.tooltipService.hideTooltip(), this.services.$element.off(jsCommon.DOMConstants.mouseMoveEventName, this.showTooltip), 
                    this.services.$element.off(jsCommon.DOMConstants.mouseLeaveEventName, this.hideTooltip);
                }, a;
            }();
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            var c = function() {
                function b() {
                    this.restrict = "E", this.templateUrl = "views/visual.html", this.replace = !0, 
                    this.scope = {
                        viewModel: "=",
                        allowDeferredRendering: "=allowDeferredRendering"
                    }, this.controller = a.Services.createController(a.controllers.VisualController);
                }
                return b;
            }();
            b.Visual = c;
        }(b = a.directives || (a.directives = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        a.defaultLocalizedStrings = {
            ContinueToPowerBI: "Go back home",
            DashboardInvitationEmailSubject: "{0} has shared Power BI Dashboard '{1}' with you",
            DashboardInvitationEmailViewDashboardLink: "Open",
            ExistingAccount: "Have an account? {0}Sign In{1}",
            ClusterUriNotFound: "Cluster URI not found. Please try again later.",
            Forbidden: "You are not authorized to view this page.",
            GenericError: "Something went wrong. <br/>Please try again later.",
            GenericErrorDescription: "An unknown error occured. If you continue to see this error please provide the following information when requesting support.",
            PageDoesNotExist: "Oops, we couldn't find the page you were looking for",
            PowerBILogoTxt: "Microsoft Power BI Preview",
            PowerBILogoTxtNoPreview: "Microsoft Power BI",
            SignUpButton: "Sign up",
            SignUpDifferentEmail: "Don't have an account? {0}Sign up{1}.",
            SignUpHeader: "Welcome to Power BI Preview",
            SignUpHeaderNoPreview: "Welcome to Power BI",
            SignUpTextLine1: "Someone has shared a dashboard with you.",
            SignUpTextLine2: "Sign up for a Microsoft Power BI account to see it.",
            SignInButton: "Sign in",
            SignInDifferentEmail: "Already a user? {0}Sign in{1}",
            SignInTextLine1: "Someone has shared a dashboard with you.",
            SignInTextLine2: "Sign in to see it.",
            Unauthorized: "We do not recognize you. Did you enter your credentials right?",
            RequestAnInvite: "Request an invite",
            UserNeedsInvitation: "You need an invitation to use Power BI.",
            UserNotSignedUp: "You’re not signed up yet.",
            DashboardInvitationEmailDefaultMessage: "Here's the dashboard that {0} shared with you",
            DateAndTimeLabel: "Date and Time:",
            TechnicalDetails: "TECHNICAL DETAILS <br/>",
            ErrorDescription_UserAccountDisabled: "This user account has been disabled.",
            ActivityIdLabel: "ActivityId:",
            TopNav_PowerBILogoText: "Microsoft Power BI Preview",
            TopNav_PowerBILogoTextNoPreview: "Microsoft Power BI",
            TopNav_HelpMenu_GettingStarted: "Getting started",
            TopNav_HelpMenu_ContactSupport: "Contact support",
            TopNav_HelpMenu_Developers: "Power BI for developers",
            TopNav_HelpMenu_Suggestions: "What should we build next?",
            TopNav_HelpMenu_Topics: "Help topics",
            TopNav_HelpMenu_About: "About Power BI",
            TopNav_HelpMenu_AboutDialog_Close: "Close",
            TopNav_HelpMenu_Community: "Community",
            TopNav_HelpMenu_FeatureRequests: "Feature Requests",
            TopNav_UserInfoMenu_SignOut: "Sign out",
            TopNav_SettingsMenu_ASConnector: "Analysis Services Connector Preview",
            TopNav_SettingsMenu_OnPremGateway: "Power BI Personal Gateway Preview",
            TopNav_SettingsMenu_ASConnectorNoPreview: "Analysis Services Connector",
            TopNav_SettingsMenu_OnPremGatewayNoPreview: "Power BI Personal Gateway",
            TopNav_SettingsMenu_MobileDownload: "Power BI for Mobile",
            TopNav_SettingsMenu_PowerBICompanion: "Power BI Designer Preview",
            TopNav_SettingsMenu_PowerBICompanionNoPreview: "Power BI Designer",
            TopNav_SettingsMenu_Download: "DOWNLOAD",
            TopNav_SettingsMenu_PowerBISettings: "Power BI Settings",
            TopNav_SettingsMenu_Office365Settings: "Office 365 Settings",
            TopNav_SettingsMenu_ChangeTheme: "Change Theme",
            TopNav_SettingsMenu_PurchasePowerBIPro: "Purchase Power BI Pro",
            TopNav_SettingsMenu_PowerBI: "Power BI",
            TopNav_SettingsMenu_PowerBIForO365: "Power BI for Office 365",
            TopNav_SettingsMenu_Settings: "Settings",
            TopNav_O365ApplicationLauncher_Error: "Application launcher cannot be loaded at this time",
            TopNav_O365ApplicationLauncher_Loading: "Loading ...",
            NullValue: "(Blank)",
            BooleanTrue: "True",
            BooleanFalse: "False",
            NavigationPane_OpenMenu: "Open Menu",
            NavigationPane_SharedWithYou: "Shared with you",
            NavigationPane_GetData: "Get Data",
            NavigationPane_CreateDashboard: "Create dashboard",
            NavigationPane_FilterContent: "Filter content",
            NavigationPane_Minimize: "Minimize the Navigator Pane",
            NavigationPane_Expand: "Expand the Navigator Pane",
            NavigationPane_RefreshPublishError: "Failed to publish or refresh",
            NavigationPane_PackagePublishErrorTitle: "Failed to import data",
            NavigationPane_ReportPublishErrorTitle: "Failed to publish report",
            NavigationPane_ModelPublishErrorTitle: "Failed to publish dataset",
            NavigationPane_PackagePublishErrorContent: "Do you want to delete the dataset and report?",
            NavigationPane_ReportPublishErrorContent: "Do you want to delete the report?",
            NavigationPane_ModelPublishErrorContent: "Do you want to delete the dataset?",
            NavigationPane_NoDashboardText: "You have no dashboards",
            NavigationPane_NoReportText: "You have no reports",
            NavigationPane_NoDatasetText: "You have no datasets",
            NavigationPane_NoDashboardSearchResultText: "No dashboards found",
            NavigationPane_NoReportSearchResultText: "No reports found",
            NavigationPane_NoDatasetSearchResultText: "No datasets found",
            Options_Menu: "More Options",
            ReportAppBar_FileButton: "FILE",
            ReportAppBar_SaveReportButton: "SAVE",
            ReportAppBar_EditReportButton: "EDIT REPORT",
            ReportAppBar_ShareButton: "Share Dashboard",
            ReportAppBar_EditReportButtonSharedDisabled: "You cannot edit a shared report",
            ReportAppBar_SaveToDashboard: "Save",
            ReportAppBar_SaveToDashboardDescription: "Save this report.",
            ReportAppBar_SaveAs: "Save As",
            ReportAppBar_SaveAsDescription: "Save a copy of this report.",
            ReportAppBar_SaveAsDialogTitle: "Save Your Report",
            ReportAppBar_SaveAsDialogInstructions: "Enter a name for your report:",
            ReportAppBar_ExportToPowerPoint: "Export to Power Point",
            ReportAppBar_ExportToPowerPointDescription: "Save this report as a Power Point presentation",
            ReportAppBar_ShareWithPeople: "Share with People",
            ReportAppBar_ShareWithPeopleDescription: "Invite other people to view and edit this report",
            ReportAppBar_Embed: "Embed",
            ReportAppBar_EmbedDescription: "Embed this report in your blog or website",
            ReportPaginator_Page: "PAGE",
            ReportPaginator_PageOf: "OF",
            ReportPaginator_EditingView: "Editing View",
            ReportPaginator_ReadingView: "Reading View",
            ReportContainer_UnsavedChangeWarningTitle: "You have unsaved changes.",
            ReportContainer_UnsavedChangeWarningMessage: "You might want to save them first.",
            ReportContainer_WindowUnload: "You have unsaved changes. You might want to save them first.",
            ReportContainer_Dontsave: "Don't Save",
            ReportContainer_Cancel: "Cancel",
            ReportContainer_Save: "Save",
            ReportNavigation_Thumbnails: "Thumbnails",
            SettingsViewer_Title: "Settings",
            SettingsDashboards_Title: "Dashboards",
            SettingsGeneral_Title: "General",
            SettingsGeneral_Privacy_Title: "Privacy",
            SettingsPrivacy_Title: "Privacy Settings",
            SettingsPrivacy_DataCollection_Title: "Search Term Collection",
            SettingsPrivacy_DataCollection_Info: "Help make Power BI better by sending search terms used in Power BI Q&A to Microsoft for product feedback and improvement.",
            SettingsPrivacy_DataCollection_LearnMore: "Learn more",
            SettingsGeneral_Error_FailedToLoad: "Failed to load settings",
            SettingsGeneral_Error_FailedToSave: "Failed to update settings",
            SettingsDashboards_Error_FailedToLoadDashboards: "Failed to load dashboards",
            SettingsDashboards_Error_FailedToSaveDashboards: "Failed to update dashboard",
            SettingsDashboard_Title: "Settings for {0}",
            SettingsDashboard_QnA_Title: "Q&A",
            SettingsDashboard_QnA_Info1: "Q&A allows users to find data and create charts using natural language for datasets used on a dashboard.",
            SettingsDashboard_QnA_Info2: "Q&A capabilities are not available for datasets using direct connections to data that does not reside in Power BI.",
            SettingsDashboard_QnA_LearnMore: "Learn more",
            SettingsDashboard_QnA_QnaEnabledMessage: "Show the Q&A search box on this dashboard",
            SettingsDashboard_QnA_QnaUnavailableWarning: "There are no datasets used on this dashboard for which Q&A is available.",
            SettingsDatasets_Title: "Datasets",
            SettingsWorkbooks_Title: "Workbooks",
            SettingsDataset_Title: "Settings for ",
            SettingsDataset_Welcome_Before_Configuration: "Before you can setup a refresh schedule, you'll need to configure a few things.",
            SettingsDataset_Install_OnPrem_Gateway: "1. Install the Power BI Personal Gateway on a computer that is always on.",
            SettingsDataset_OnPrem_Gateway_InstallNow: "Install Now",
            SettingsDataset_OnPrem_Gateway_LearnMore: "Learn More",
            SettingsDataset_OnPrem_Gateway_InstallPage: "You can install the Gateway from: ",
            SettingsDataset_OnPrem_Gateway_InstallPage_EmailToYou: ". This link has been emailed to you.",
            SettingsDataset_Install_OnPrem_Gateway_Succeed: "1. The Gateway is installed and running on ",
            SettingsDataset_Provide_Credential: "2. Provide credentials in Manage Data Sources.",
            SettingsDataset_Provide_Credential_Valid: "2. Your data sources are valid.",
            SettingsDataset_SetScheduleRefresh: "3. Specify a schedule in Schedule Refresh.",
            SettingsDataset_SetScheduleRefresh_Done: "3. Your refresh schedule has been set.",
            SettingsDataset_Gateway_Title: "Gateway",
            SettingsDataset_GatewayErrorMessage_NoGatewayInstalled: "Please install the Gateway first.",
            SettingsDataset_Gateway_Location: "The on-premise Gateway on ",
            SettingsDataset_Gateway_Location2: " is online.",
            SettingsDataset_GatewayErrorMessage_GatewayOffline2: " appears to be offline. Make sure ",
            SettingsDataset_GatewayErrorMessage_GatewayOffline3: " is turned on and the service is running. Then try refreshing your report in PowerBI.com.",
            SettingsDataset_GatewayIsRunning: "Gateway is running and connected on ",
            SettingsDataset_ScheduleRefresh_Title: "Schedule Refresh",
            SettingsDataset_ScheduleRefresh_NextRefresh: "Next refresh: ",
            SettingsDataset_ScheduleRefresh_EnableRefresh_Title: "Keep your data up-to-date",
            SettingsDataset_ScheduleRefresh_EnableRefresh_Yes: "Yes",
            SettingsDataset_ScheduleRefresh_EnableRefresh_No: "No",
            SettingsDataset_ScheduleRefresh_RefreshFrequency_Title: "Refresh frequency",
            SettingsDataset_ScheduleRefresh_RefreshFrequency_Daily: "Daily",
            SettingsDataset_ScheduleRefresh_RefreshFrequency_Weekly: "Weekly",
            SettingsDataset_ScheduleRefresh_RefreshFrequency_Days_Monday: "Monday",
            SettingsDataset_ScheduleRefresh_RefreshFrequency_Days_Tuesday: "Tuesday",
            SettingsDataset_ScheduleRefresh_RefreshFrequency_Days_Wednesday: "Wednesday",
            SettingsDataset_ScheduleRefresh_RefreshFrequency_Days_Thursday: "Thursday",
            SettingsDataset_ScheduleRefresh_RefreshFrequency_Days_Friday: "Friday",
            SettingsDataset_ScheduleRefresh_RefreshFrequency_Days_Saturday: "Saturday",
            SettingsDataset_ScheduleRefresh_RefreshFrequency_Days_Sunday: "Sunday",
            SettingsDataset_ScheduleRefresh_TimeWindow: "Refresh between",
            SettingsDataset_ScheduleRefresh_TimeWindow_1: "12 AM - 6 AM",
            SettingsDataset_ScheduleRefresh_TimeWindow_2: "6 AM - 12 PM",
            SettingsDataset_ScheduleRefresh_TimeWindow_3: "12 PM - 6 PM",
            SettingsDataset_ScheduleRefresh_TimeWindow_4: "6 PM - 12 AM",
            SettingsDataset_ScheduleRefresh_TimeZone: "Time Zone",
            SettingsDataset_ScheduleRefresh_TimeProWindow: "Time",
            SettingsDataset_ScheduleRefresh_Timezone_Afghanistan_Standard_Time: "(UTC+04:30) Kabul",
            SettingsDataset_ScheduleRefresh_Timezone_Alaskan_Standard_Time: "(UTC-09:00) Alaska",
            SettingsDataset_ScheduleRefresh_Timezone_Arab_Standard_Time: "(UTC+03:00) Kuwait, Riyadh",
            SettingsDataset_ScheduleRefresh_Timezone_Arabian_Standard_Time: "(UTC+04:00) Abu Dhabi, Muscat",
            SettingsDataset_ScheduleRefresh_Timezone_Arabic_Standard_Time: "(UTC+03:00) Baghdad",
            SettingsDataset_ScheduleRefresh_Timezone_Argentina_Standard_Time: "(UTC-03:00) Buenos Aires",
            SettingsDataset_ScheduleRefresh_Timezone_Atlantic_Standard_Time: "(UTC-04:00) Atlantic Time (Canada)",
            SettingsDataset_ScheduleRefresh_Timezone_AUS_Central_Standard_Time: "(UTC+09:30) Darwin",
            SettingsDataset_ScheduleRefresh_Timezone_AUS_Eastern_Standard_Time: "(UTC+10:00) Canberra, Melbourne, Sydney",
            SettingsDataset_ScheduleRefresh_Timezone_Azerbaijan_Standard_Time: "(UTC+04:00) Baku",
            SettingsDataset_ScheduleRefresh_Timezone_Azores_Standard_Time: "(UTC-01:00) Azores",
            SettingsDataset_ScheduleRefresh_Timezone_Bangladesh_Standard_Time: "(UTC+06:00) Dhaka",
            SettingsDataset_ScheduleRefresh_Timezone_Cabo_Verde_Standard_Time: "(UTC-01:00) Cabo Verde Is.",
            SettingsDataset_ScheduleRefresh_Timezone_Canada_Central_Standard_Time: "(UTC-06:00) Saskatchewan",
            SettingsDataset_ScheduleRefresh_Timezone_Caucasus_Standard_Time: "(UTC+04:00) Yerevan",
            SettingsDataset_ScheduleRefresh_Timezone_Cen_Australia_Standard_Time: "(UTC+09:30) Adelaide",
            SettingsDataset_ScheduleRefresh_Timezone_Central_America_Standard_Time: "(UTC-06:00) Central America",
            SettingsDataset_ScheduleRefresh_Timezone_Central_Asia_Standard_Time: "(UTC+06:00) Astana",
            SettingsDataset_ScheduleRefresh_Timezone_Central_Brazilian_Standard_Time: "(UTC-04:00) Cuiaba",
            SettingsDataset_ScheduleRefresh_Timezone_Central_Europe_Standard_Time: "(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",
            SettingsDataset_ScheduleRefresh_Timezone_Central_European_Standard_Time: "(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",
            SettingsDataset_ScheduleRefresh_Timezone_Central_Pacific_Standard_Time: "(UTC+11:00) Solomon Is., New Caledonia",
            SettingsDataset_ScheduleRefresh_Timezone_Central_Standard_Time: "(UTC-06:00) Central Time (US and Canada)",
            SettingsDataset_ScheduleRefresh_Timezone_Central_Standard_Time_Mexico: "((UTC-06:00) Guadalajara, Mexico City, Monterrey",
            SettingsDataset_ScheduleRefresh_Timezone_China_Standard_Time: "(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",
            SettingsDataset_ScheduleRefresh_Timezone_Dateline_Standard_Time: "(UTC-12:00) International Date Line West",
            SettingsDataset_ScheduleRefresh_Timezone_E_Africa_Standard_Time: "(UTC+03:00) Nairobi",
            SettingsDataset_ScheduleRefresh_Timezone_E_Australia_Standard_Time: "(UTC+10:00) Brisbane",
            SettingsDataset_ScheduleRefresh_Timezone_E_Europe_Standard_Time: "(UTC+02:00) Minsk",
            SettingsDataset_ScheduleRefresh_Timezone_E_South_America_Standard_Time: "(UTC-03:00) Brasilia",
            SettingsDataset_ScheduleRefresh_Timezone_Eastern_Standard_Time: "(UTC-05:00) Eastern Time (US and Canada)",
            SettingsDataset_ScheduleRefresh_Timezone_Egypt_Standard_Time: "(UTC+02:00) Cairo",
            SettingsDataset_ScheduleRefresh_Timezone_Ekaterinburg_Standard_Time: "(UTC+06:00) Ekaterinburg",
            SettingsDataset_ScheduleRefresh_Timezone_Fiji_Standard_Time: "(UTC+12:00) Fiji",
            SettingsDataset_ScheduleRefresh_Timezone_FLE_Standard_Time: "(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",
            SettingsDataset_ScheduleRefresh_Timezone_Georgian_Standard_Time: "(UTC+04:00) Tbilisi",
            SettingsDataset_ScheduleRefresh_Timezone_GMT_Standard_Time: "(UTC) Dublin, Edinburgh, Lisbon, London",
            SettingsDataset_ScheduleRefresh_Timezone_Greenland_Standard_Time: "(UTC-03:00) Greenland",
            SettingsDataset_ScheduleRefresh_Timezone_Greenwich_Standard_Time: "(UTC) Monrovia, Reykjavik",
            SettingsDataset_ScheduleRefresh_Timezone_GTB_Standard_Time: "(UTC+02:00) Athens, Bucharest",
            SettingsDataset_ScheduleRefresh_Timezone_Hawaiian_Standard_Time: "(UTC-10:00) Hawaii",
            SettingsDataset_ScheduleRefresh_Timezone_India_Standard_Time: "(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",
            SettingsDataset_ScheduleRefresh_Timezone_Iran_Standard_Time: "(UTC+03:30) Tehran",
            SettingsDataset_ScheduleRefresh_Timezone_Israel_Standard_Time: "(UTC+02:00) Jerusalem",
            SettingsDataset_ScheduleRefresh_Timezone_Jordan_Standard_Time: "(UTC+02:00) Amman",
            SettingsDataset_ScheduleRefresh_Timezone_Kaliningrad_Standard_Time: "(UTC+03:00) Kaliningrad",
            SettingsDataset_ScheduleRefresh_Timezone_Korea_Standard_Time: "(UTC+09:00) Seoul",
            SettingsDataset_ScheduleRefresh_Timezone_Magadan_Standard_Time: "(UTC+12:00) Magadan",
            SettingsDataset_ScheduleRefresh_Timezone_Mauritius_Standard_Time: "(UTC+04:00) Port Louis",
            SettingsDataset_ScheduleRefresh_Timezone_Mid_Atlantic_Standard_Time: "(UTC-02:00) Mid-Atlantic",
            SettingsDataset_ScheduleRefresh_Timezone_Middle_East_Standard_Time: "(UTC+02:00) Beirut",
            SettingsDataset_ScheduleRefresh_Timezone_Montevideo_Standard_Time: "(UTC-03:00) Montevideo",
            SettingsDataset_ScheduleRefresh_Timezone_Morocco_Standard_Time: "(UTC) Casablanca",
            SettingsDataset_ScheduleRefresh_Timezone_Mountain_Standard_Time: "(UTC-07:00) Mountain Time (US and Canada)",
            SettingsDataset_ScheduleRefresh_Timezone_Mountain_Standard_Time_Mexico: "(UTC-07:00) Chihuahua, La Paz, Mazatlan",
            SettingsDataset_ScheduleRefresh_Timezone_Myanmar_Standard_Time: "(UTC+06:30) Yangon (Rangoon)",
            SettingsDataset_ScheduleRefresh_Timezone_N_Central_Asia_Standard_Time: "(UTC+07:00) Novosibirsk",
            SettingsDataset_ScheduleRefresh_Timezone_Namibia_Standard_Time: "(UTC+01:00) Windhoek",
            SettingsDataset_ScheduleRefresh_Timezone_Nepal_Standard_Time: "(UTC+05:45) Kathmandu",
            SettingsDataset_ScheduleRefresh_Timezone_New_Zealand_Standard_Time: "(UTC+12:00) Auckland, Wellington",
            SettingsDataset_ScheduleRefresh_Timezone_Newfoundland_Standard_Time: "(UTC-03:30) Newfoundland",
            SettingsDataset_ScheduleRefresh_Timezone_North_Asia_East_Standard_Time: "(UTC+09:00) Irkutsk",
            SettingsDataset_ScheduleRefresh_Timezone_North_Asia_Standard_Time: "(UTC+08:00) Krasnoyarsk",
            SettingsDataset_ScheduleRefresh_Timezone_Pacific_SA_Standard_Time: "(UTC-04:00) Santiago",
            SettingsDataset_ScheduleRefresh_Timezone_Pacific_Standard_Time: "(UTC-08:00) Pacific Time (US and Canada)",
            SettingsDataset_ScheduleRefresh_Timezone_Pacific_Standard_Time_Mexico: "(UTC-08:00) Baja California",
            SettingsDataset_ScheduleRefresh_Timezone_Pakistan_Standard_Time: "(UTC+05:00) Islamabad, Karachi",
            SettingsDataset_ScheduleRefresh_Timezone_Paraguay_Standard_Time: "(UTC-04:00) Asuncion",
            SettingsDataset_ScheduleRefresh_Timezone_Romance_Standard_Time: "(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",
            SettingsDataset_ScheduleRefresh_Timezone_Russian_Standard_Time: "(UTC+04:00) Moscow, St. Petersburg, Volgograd",
            SettingsDataset_ScheduleRefresh_Timezone_SA_Eastern_Standard_Time: "(UTC-03:00) Cayenne, Fortaleza",
            SettingsDataset_ScheduleRefresh_Timezone_SA_Pacific_Standard_Time: "(UTC-05:00) Bogota, Lima, Quito",
            SettingsDataset_ScheduleRefresh_Timezone_SA_Western_Standard_Time: "(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",
            SettingsDataset_ScheduleRefresh_Timezone_Samoa_Standard_Time: "(UTC-11:00) Samoa",
            SettingsDataset_ScheduleRefresh_Timezone_SE_Asia_Standard_Time: "(UTC+07:00) Bangkok, Hanoi, Jakarta",
            SettingsDataset_ScheduleRefresh_Timezone_Singapore_Standard_Tim: "(UTC+08:00) Kuala Lumpur, Singapore",
            SettingsDataset_ScheduleRefresh_Timezone_South_Africa_Standard_Time: "(UTC+02:00) Harare, Pretoria",
            SettingsDataset_ScheduleRefresh_Timezone_Sri_Lanka_Standard_Time: "(UTC+05:30) Sri Jayawardenepura",
            SettingsDataset_ScheduleRefresh_Timezone_Syria_Standard_Time: "(UTC+02:00) Damascus",
            SettingsDataset_ScheduleRefresh_Timezone_Taipei_Standard_Time: "(UTC+08:00) Taipei",
            SettingsDataset_ScheduleRefresh_Timezone_Tasmania_Standard_Time: "(UTC+10:00) Hobart",
            SettingsDataset_ScheduleRefresh_Timezone_Tokyo_Standard_Time: "(UTC+09:00) Osaka, Sapporo, Tokyo",
            SettingsDataset_ScheduleRefresh_Timezone_Tonga_Standard_Time: "(UTC+13:00) Nuku'alofa",
            SettingsDataset_ScheduleRefresh_Timezone_Turkey_Standard_Time: "(UTC+02:00) Istanbul",
            SettingsDataset_ScheduleRefresh_Timezone_Ulaanbaatar_Standard_Time: "(UTC+08:00) Ulaanbaatar",
            SettingsDataset_ScheduleRefresh_Timezone_US_Eastern_Standard_Time: "(UTC-05:00) Indiana (East)",
            SettingsDataset_ScheduleRefresh_Timezone_US_Mountain_Standard_Time: "(UTC-07:00) Arizona",
            SettingsDataset_ScheduleRefresh_Timezone_UTC: "(UTC) Coordinated Universal Time",
            SettingsDataset_ScheduleRefresh_Timezone_UTC_Plus_12: "(UTC+12:00) Coordinated Universal Time +12",
            SettingsDataset_ScheduleRefresh_Timezone_UTC_Minus_11: "(UTC-11:00) Coordinated Universal Time -11",
            SettingsDataset_ScheduleRefresh_Timezone_UTC_Minus_2: "(UTC-02:00) Coordinated Universal Time -02",
            SettingsDataset_ScheduleRefresh_Timezone_Venezuela_Standard_Time: "(UTC-04:30) Caracas",
            SettingsDataset_ScheduleRefresh_Timezone_Vladivostok_Standard_Time: "(UTC+11:00) Vladivostok",
            SettingsDataset_ScheduleRefresh_Timezone_W_Australia_Standard_Time: "(UTC+08:00) Perth",
            SettingsDataset_ScheduleRefresh_Timezone_W_Central_Africa_Standard_Time: "(UTC+01:00) West Central Africa",
            SettingsDataset_ScheduleRefresh_Timezone_W_Europe_Standard_Time: "(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",
            SettingsDataset_ScheduleRefresh_Timezone_West_Asia_Standard_Time: "(UTC+05:00) Tashkent",
            SettingsDataset_ScheduleRefresh_Timezone_West_Pacific_Standard_Time: "(UTC+10:00) Guam, Port Moresby",
            SettingsDataset_ScheduleRefresh_Timezone_Yakutsk_Standard_Time: "(UTC+10:00) Yakutsk",
            SettingsDataset_ScheduleRefresh_AmPmWindows_Am: "AM",
            SettingsDataset_ScheduleRefresh_AmPmWindows_Pm: "PM",
            SettingsDataset_ScheduleRefresh_TimeHourWindows_1: "1",
            SettingsDataset_ScheduleRefresh_TimeHourWindows_10: "10",
            SettingsDataset_ScheduleRefresh_TimeHourWindows_11: "11",
            SettingsDataset_ScheduleRefresh_TimeHourWindows_12: "12",
            SettingsDataset_ScheduleRefresh_TimeHourWindows_2: "2",
            SettingsDataset_ScheduleRefresh_TimeHourWindows_3: "3",
            SettingsDataset_ScheduleRefresh_TimeHourWindows_4: "4",
            SettingsDataset_ScheduleRefresh_TimeHourWindows_5: "5",
            SettingsDataset_ScheduleRefresh_TimeHourWindows_6: "6",
            SettingsDataset_ScheduleRefresh_TimeHourWindows_7: "7",
            SettingsDataset_ScheduleRefresh_TimeHourWindows_8: "8",
            SettingsDataset_ScheduleRefresh_TimeHourWindows_9: "9",
            SettingsDataset_ScheduleRefresh_TimeMinuteWindos_00: "00",
            SettingsDataset_ScheduleRefresh_TimeMinuteWindos_30: "30",
            SettingsDataset_Add_Refresh_Time: "Add another time",
            SettingsDataset_DuplicateTime: "Duplicate times are not allowed.",
            SettingsDataset_IncompleteTime: "A complete time must be specified.",
            SettingsDataset_ScheduleRefresh_SendRefreshFailureEmail: "Send refresh failure notification email to me",
            SettingsDataset_ScheduleRefresh_FlyoutMessage_RefreshNotEnabled: "Refresh Schedule not enabled",
            SettingsDataset_ScheduleRefresh_FlyoutMessage_NextRefresh: "Next refresh : ",
            SettingsDataset_ScheduleRefresh_FlyoutMessage_LastRefreshFailed: "Last refresh failed: ",
            SettingsDataset_ScheduleRefresh_FlyoutMessage_LastRefreshSucceeded: "Last refresh succeeded : ",
            SettingsDataset_ScheduleRefresh_FlyoutMessage_LastPackagePublishFailed: "Package publish failed",
            SettingsDataset_ScheduleRefresh_FlyoutMessage_RefreshFailed: "The last refresh failed because we couldn’t connect to the data sources in your dataset. Make sure the data sources are configured correctly.",
            SettingsDataset_ManageDataSources_Title: "Manage Data Sources",
            SettingsDataset_ManageDataSources_EditButtonText: "Edit credentials",
            SettingsDataset_ApplyButtonText: "Apply",
            SettingsDataset_DiscardButtonText: "Discard",
            SettingsDataset_RefreshHistoryText: "Refresh History",
            SettingsDataset_ShowDetails: "Show details",
            SettingsDataset_HideDetails: "Hide details",
            SettingsDataset_ManageDataSources_Warning_YouNeedToProvideCredentials: "Your data source cannot be kept up to date because the credentials are incorrect.",
            SettingsDataset_Notification_RefreshScheduleUpdated_Title: " refresh schedule updated",
            SettingsDataset_Notification_RefreshScheduleUpdated_Message_Part1: "Your updates to the ",
            SettingsDataset_Notification_RefreshScheduleUpdated_Message_Part2: " Refresh Schedule have been applied",
            SettingsDataset_Notification_RefreshScheduleCannotBeUpdated_Title: " refresh schedule cannot be updated",
            SettingsDataset_Notification_RefreshScheduleCannotBeUpdated_Message: "When 'Refresh frequency' is 'Weekly' you have to select at least one day.",
            SettingsDataset_Notification_RefreshScheduleCannotBeUpdatedTimeFormat_Message: "Please verify all refresh times are valid.",
            SettingsDataset_Notification_DatasourceUpdated_Title: " Data Source Updated",
            SettingsDataset_Notification_DatasourceUpdated_Message_Part1: "Your updates to the ",
            SettingsDataset_Notification_DatasourceUpdated_Message_Part2: " data source have been applied",
            SettingsDataset_Notification_RefreshNow_Scheduled_Title: "",
            SettingsDataset_Notification_RefreshNow_Scheduled_Message: " dataset will be refreshed soon",
            SettingsDataset_Notification_RefreshNow_NotScheduled_Title: "",
            SettingsDataset_Notification_RefreshNow_NotScheduled_Message_Part1: "We couldn’t schedule refresh for ",
            SettingsDataset_Notification_RefreshNow_NotScheduled_Message_Part2: ". Be sure to check your refresh settings.",
            SettingsDataset_AreYouSureYouWantToLeaveThisDataset_Title: "Are you sure you want to leave this Dataset",
            SettingsDataset_AreYouSureYouWantToLeaveThisWorkbook_Title: "Are you sure you want to leave this Workbook",
            SettingsDataset_AreYouSureYouWantToLeaveThisDataset_Message: "Your changes will be lost!",
            SettingsDataset_DisableEntireRefreshPageErrorMessage_ModelNotSupported: "We don’t support scheduled refresh for this dataset.",
            SettingsDataset_DisableEntireRefreshPageErrorMessage_DataSourcesNotSupported: "You cannot schedule refresh for this dataset because it gets data from sources that currently don’t support refresh.",
            SettingsDataset_Error_FailedToLoadModelForRefresh: "Failed to load model for Refresh",
            SettingsDataset_Error_FailedToLoadDatasets: "Failed to load datasets",
            SettingsDataset_Error_FailedToLoadDatasources: "Failed to load Datasources",
            SettingsDataset_Error_FailedToTestConnection: "Failed to test connection",
            SettingsDataset_Error_FailedToRetrieveGateway: "Failed to retrieve gateway",
            SettingsDataset_Error_FailedToLoadRefreshHistory: "Failed to load refresh history",
            SettingsDataset_Error_DatasourceCredentialsIncorrectTitle: "You cannot refresh yet because you need to provide valid credentials for your data sources in the dataset.",
            SettingsDataset_Error_DatasourceCredentialsIncorrect: "You can update the credentials for the data sources in the Manage Data Sources section on the Schedule Refresh settings page.",
            SettingsDataset_Error_GatewayOfflineTitle: "You cannot refresh yet because your Personal Gateway is offline",
            SettingsDataset_Error_GatewayOffline: "Make sure the computer where the Gateway is installed is turned on and the Gateway is running.  Also make sure the credentials provided in the Manage Data Sources section in the refresh settings are up-to-date.",
            SettingsDataset_Error_GatewayNotExistTitle: "You cannot refresh now because your on-premise gateway is not installed.",
            SettingsDataset_Error_GatewayNotExist: "An on-premise gateways is not found. Please install the Gateway before refreshing the model.",
            SettingsDataset_Error_FailedDuringTestConnection: "Failed during TestConnection call",
            SettingsDataset_Error_FailedToSaveRefreshSettings: "Failed to Update Refresh Schedule",
            SettingsDataset_Error_InvalidDataFromServer_RefreshSettings_ExecutionTimeNull: "We received invalid data from server: RefreshSchedule.ExecutionTime is NULL. Assumed default value (0)",
            SettingsDataset_Error_InvalidDataFromServer_RefreshSettings_ExecutionTimeInvalidHour: "We received invalid data from server: RefreshSchedule.ExecutionTime.Hour < 0 or > 23. Assumed default value (0)",
            SettingsDataset_Error_InvalidDataFromServer_RefreshSettings_ExecutionTimesHourlyInvalidJsonFormat: "We received invalid data from server: RefreshSchedule.executionTimesHourly has invalid format",
            SettingsDataset_Error_InvalidDataFromServer_RefreshSettings_ExecutionTimesHourlyInvalidHour: "We received invalid data from server: RefreshSchedule.executionTimesHourly.Hour < 0 or > 23. Assumed default value (0)",
            SettingsDataset_Error_InvalidDataFromServer_RefreshSettings_ExecutionTimesHourlyInvalidMinute: "We received invalid data from server: RefreshSchedule.executionTimesHourly.Minute < 0 or > 59. Assumed default value (0)",
            SettingsDataset_Error_InvalidDataFromServer_NextRefreshOrLastRefreshNaN: "We received invalid data from server: NextRefresh or LastRefresh is NaN. Assumed default value (0)",
            SettingsDataset_TakeOverButton_CancelTakeOver: "Cancel Takeover",
            SettingsDataset_TakeOverButton_TakeOver: "Take Over",
            SettingsDataset_TakeOverStatusText_Before: "This schedule has been set by {0}. Would you like to take over the schedule?",
            SettingsDataset_TakeOverStatusText_After: "You have chosen to take over this schedule.",
            SettingsDataset_TakeOverDetailsText: "Changes will take affect once the schedule has been applied. You can cancel out at any time.",
            DatasetParametersDialog_NextButtonText: "Next",
            DatasetParametersDialog_CancelButtonText: "Cancel",
            DatasetParametersDialog_HelpButtonText: "Help",
            DatasetParametersDialog_Configure: "Configure",
            DatasetParametersDialog_ValidationError: "Parameter validation failed, please make sure all parameters are valid.",
            DatasetParametersDialog_Error_FailedToUpdateModelParameters: "Failed to update model parameters",
            HistoryDialog_Title: "Refresh History",
            HistoryDialog_TableHeader_Type: "Type",
            HistoryDialog_TableHeader_Start: "Start",
            HistoryDialog_TableHeader_End: "End",
            HistoryDialog_TableHeader_Status: "Status",
            HistoryDialog_TableHeader_FailMessage: "Fail Message",
            HistoryDialog_TableHeader_Details: "Details",
            HistoryDialog_RefreshType_Scheduled: "Scheduled",
            HistoryDialog_RefreshType_OnDemand: "On demand",
            HistoryDialog_RefreshStatus_Completed: "Completed",
            HistoryDialog_RefreshStatus_Failed: "Failed",
            HistoryDialog_RefreshStatus_InProgress: "In Progress",
            HistoryDialog_RefreshDetail_Show: "Show",
            HistoryDialog_RefreshDetail_Hide: "Hide",
            HistoryDialog_CloseButtonText: "Close",
            AuthDialog_ApplyButtonText: "Apply",
            AuthDialog_CancelButtonText: "Cancel",
            AuthDialog_Configure: "Configure",
            AuthDialog_FieldName_Authentication: "Authentication Method:",
            AuthDialog_FieldName_Username: "Username",
            AuthDialog_FieldName_Password: "Password",
            AuthDialog_FieldName_AccountKey: "Account key",
            AuthDialog_LinkText_GetYourMarketplaceAccountKey: "Get your marketplace account key",
            AuthDialog_LinkText_SignUpForWindowsAzureMarketplace: "Sign up for windows azure marketplace",
            AuthDialog_DisablePopupBlocker_OAuth: "Ensure pop-ups are not being blocked by your browser",
            AuthDialog_LinkText_SignIn: "Sign In",
            AuthDialog_LinkText_Edit: "Edit",
            AuthDialog_LinkMessage_YouAreSignedIn: "You are signed in",
            AuthDialog_Error_LoginFailed: "Login failed.",
            AuthDialog_Error_FailedToUpdateDatasource: "Failed to update the datasource",
            Dashboard_AddFeaturedQuestion: "Add Featured Question...",
            DashboardTaskPane_Title: "Welcome to Power BI",
            ContentProvider_Title: "Bring your own data",
            ContentProvider_GetConfigurationFailed: "Failed to retrieve configuration page for content provider.",
            ContentProvider_LoadingConfigurationPage: "Loading configuration page",
            DashboardContainer_Ok: "OK",
            TileEditor_PaneTitle_Details: "Tile Details",
            TileEditor_PaneSubtitle_Title: "Tile Title",
            TileEditor_EmptyTitleWarning: "Title cannot be empty",
            TileEditor_EmptySubtitleWarning: "Subtitle cannot be empty",
            TileEditor_SetCustomLink: "Set custom link",
            TileEditor_UseDefaultText: "Restore Default",
            TileEditor_UpdateFailed: "Failed to update tile",
            TileHeadings_By: "by {0}",
            ListJoin_Separator: ", ",
            TileEditor_Action_Url_WarningInvalidUrl: "Please provide a valid URL beginning with http:// or https://",
            TileEditor_ApplyButtonText: "Apply",
            TileEditor_DiscardButtonText: "Discard",
            UploadExcel_BrowserPopUpDisabled: "Browser pop-up is disabled. Please verify browser settings.",
            UploadExcel_Cancel: "Cancel",
            UploadExcel_ConfigureFileFailed: "Failed to configure selected file",
            UploadExcel_Error_WorkbookAlreadyExists: "Workbook already exists",
            UploadExcel_ConfirmButtonText: "upload",
            UploadExcel_DropBox: "DropBox",
            UploadExcel_DropboxSignIn: "Sign in to access your files",
            UploadExcel_Description: "Add Excel data to your dashboard",
            UploadExcel_GetAuthEndpointFailed: "Unable to retrieve authorization endpoint",
            UploadExcel_GetUserPropertiesFailed: "Failed to retrieve user properties",
            UploadExcel_GetFileMetadataFailed: "Failed to retrieve file metadata",
            UploadExcel_GetServicePropertiesFailed: "Failed to retrieve service properties",
            UploadExcel_LocalBrowse: "Browse",
            UploadExcel_LocalDevice: "upload from device",
            UploadExcel_LoadingFiles: "Loading files ...",
            UploadExcel_Connect: "Connect",
            UploadExcel_ChooseFormatDescription: "Choose how to connect to your Excel workbook",
            UploadExcel_ChooseFormat_Or: "or",
            UploadExcel_ChooseFormat_ViewExcel: "Connect, Manage and View Excel in Power BI",
            UploadExcel_ChooseFormat_ViewExcelDescription: "Connect to your workbook and see it exactly as it is in Excel Online -- charts, PivotTables, worksheets, Power View sheets, and all.",
            UploadExcel_ChooseFormat_ImportData: "Connect Power BI to data in Excel",
            UploadExcel_ChooseFormat_ImportDataDescription: "Connect to the data in your workbook on OneDrive so you can create Power BI reports and dashboards for it. Data is automatically refreshed from OneDrive.",
            UploadExcel_ChooseFormat_Get: "Connect",
            UploadExcel_Connecting_Toast: "Connecting to your Excel workbook...",
            UploadExcel_Success_Toast: "Your Excel workbook is ready in your list of reports.",
            UploadExcel_Success_Toast_MetaText: "Take a look: {0}",
            UploadExcel_OfflineAccessRequest: "Please provide offline access to the document",
            UploadExcel_OneDrive: "OneDrive - Personal",
            UploadExcel_OneDriveDescription: "Use OneDrive to access your files from anywhere and share with anyone.",
            UploadExcel_OneDriveFileName: "Name",
            UploadExcel_OneDriveFileModifiedDate: "Modified Date",
            UploadExcel_OneDriveFileSize: "Size",
            UploadExcel_OneDriveSignIn: "Sign in",
            UploadExcel_OneDriveSignOut: "Sign out",
            UploadExcel_OneDrivePersonal: "OneDrive - Personal",
            UploadExcel_OneDrivePro: "OneDrive for Business",
            UploadExcel_OneDriveProDescription: "Save your work files to OneDrive for Business so they're always with you.",
            UploadExcel_OneDriveProNoSharePointError: "It looks like you don't have OneDrive for Business. Try using OneDrive - Personal.",
            UploadExcel_OneDriveProNoPowerBiForO365Error: "In order to use Power BI with OneDrive for Business you need to sign up for Power BI for Office 365.",
            UploadExcel_OneDriveProNoPowerBiForO365Error2: "If you have already signed up for Power BI for Office 365 please try again in 1 hour.",
            UploadExcel_OneDriveProConnecting: "Connecting ...",
            UploadExcel_OneDriveProSignUp: "Sign up",
            UploadExcel_OneDriveProSignUpForPowerBIForOffice365: "Sign up for Power BI for Office 365",
            UploadExcel_OneDriveBusiness: "OneDrive - Business",
            UploadExcel_NoOneDriveEmail: "Unspecified account address",
            UploadExcel_ProcessingInProgress: "Processing selected file, please wait ...",
            UploadExcel_ProgressDescriptionLoading: "Loading ...",
            UploadExcel_PublishInProgress: "Publishing selected file, please wait ...",
            UploadExcel_PublishWorkbookCanceled: "Excel workbook publishing has been canceled",
            UploadExcel_PublishWorkbookFailed: "Failed to publish Excel workbook",
            UploadExcel_ResolveAccessTokenFailed: "Failed to resolve access token",
            UploadExcel_Title: "Excel Workbook",
            UploadExcel_TitleUpload: "Excel Workbook Upload",
            UploadExcel_UploadLimit: "Only Excel workbooks up to 250 MB are supported.",
            UploadExcel_UploadLimit_ViewExcelMode: "Power BI supports workbooks up to 250 MB, and the non-model part of the workbook must be less than 10MB. Get tips for ways to reduce workbook size.",
            UploadExcel_UnsupportedFileType: "Only Excel 2007 or newer workbooks are supported",
            UploadExcel_WatermarkDescription: "Drop file here",
            UploadExcel_Computer: "Computer",
            UploadExcel_PlaceholderText: "Choose file",
            ReportOptStatus_Idle: "",
            ReportOptStatus_Saving: "SAVING...",
            ReportOptStatus_Saved: "SAVED",
            ReportOptStatus_SaveFailed: "FAILED",
            ReportOptStatus_Default: "",
            Landing_DashboardConnectionsButtonText: "CONNECTIONS: ",
            Landing_DashboardConnectionsTitleText: "Dashboard Connections",
            Landing_DashboardConnectionsLastUpdatedText: "Last updated: ",
            Landing_DashboardConnectionsNoDataAvailableText: "No Data Connection Available",
            ModalDialog_Save: "Save",
            ModalDialog_Send: "Send",
            ModalDialog_Cancel: "Cancel",
            PowerViewError_Reload: "Reload",
            PowerViewError_Close: "Close",
            PowerViewError_DefaultTitle: "oops, something went wrong",
            RenameService_Success: "Rename Successful",
            RenameService_Error: "Unable to rename tile group",
            RenameService_Reason: "Could not contact service",
            ErrorBar_ConnectionErrorText: "Connection Error",
            ErrorBar_FixItText: "Fix it",
            ErrorBar_YesText: "YES",
            ErrorBar_NoText: "NO",
            ExternalContentViewer_BackToDashboard: "Back to Dashboard",
            ExternalContentViewer_Title: "Get data",
            ExternalContentViewer_GiveFeedback: "Suggest a data source",
            ExternalContentViewer_UploadInProgress: "Upload in Progress",
            ExternalContentViewer_Upload: "Uploading your file to Power BI...",
            ExternalContentViewer_Cancel: "Cancel",
            ShareView_Invite: "Invite",
            ShareView_SharedWith: "Shared With",
            ActivityPane_Tooltip: "Activity Pane",
            ActivityPane_ConnectAction: "Connect",
            ActivityPane_ShareAction: "Share Dashboard",
            ActivityPane_SettingsAction: "Settings",
            ActivityPane_AddTileAction: "Add Tile",
            DashboardTaskPane_ReportsSectionHeader: "Reports",
            DashboardTaskPane_DateSourcesSectionHeader: "Data Sources",
            DashboardContextMenu_Open: "OPEN",
            DashboardContextMenu_Explore: "EXPLORE",
            DashboardContextMenu_ManageRefresh: "SCHEDULE REFRESH",
            DashboardContextMenu_RefreshNow: "REFRESH NOW",
            DashboardContextMenu_Rename: "RENAME",
            DashboardContextMenu_Remove: "REMOVE",
            DashboardContextMenu_Delete: "DELETE",
            DashboardContextMenu_Settings: "SETTINGS",
            DashboardContextMenu_Share: "SHARE",
            DashboardContextMenu_Export: "EXPORT",
            DashboardContextMenu_AllPermissionMessage: "You can access, edit and reshare this dashboard",
            DashboardContextMenu_NonePermissionMessage: "You don't have any permission on this dashboard",
            DashboardContextMenu_ReadPermissionMessage: "You can access this dashboard",
            DashboardContextMenu_ReadResharePermissionMessage: "You can access and reshare this dashboard",
            DashboardContextMenu_ReadWritePermissionMessage: "You can access and edit this dashboard",
            DashboardContextMenu_ReSharePermissionMessage: "You can reshare this dashboard",
            DashboardContextMenu_WritePermissionMessage: "You can edit this dashboard",
            DashboardContextMenu_UnknownPermissionMessage: "Cannot identify your permission on this dashboard",
            Model_FailToDeleteModelMessage: "We failed to delete the dataset. Please try again later.",
            Model_FailToRenameModelMessage: "We failed to rename the dataset. Please try again later.",
            Model_NoPermissionToDeleteMessage: "You don't have permission to delete this dataset.",
            Model_NoPermissionToRenameMessage: "You don't have permission to rename this dataset.",
            Report_NoPermissionToDeleteMessage: "You don't have permission to delete this report.",
            Workbook_NoPermissionToRemoveMessage: "You don't have permission to remove this workbook.",
            Report_NoPermissionToRenameMessage: "You don't have permission to rename this report.",
            Workbook_NoPermissionToRenameMessage: "You don't have permission to rename this workbook.",
            Report_FailToDeleteReportMessage: "We failed to delete the report. Please try again later.",
            Workbook_FailToRemoveMessage: "We failed to remove the workbook. Please try again later.",
            Report_FailToRenameReportMessage: "We failed to rename the report. Please try again later.",
            Workbook_FailToRenameWorkbookMessage: "We failed to rename the workbook. Please try again later.",
            Dashboard_FailToCreateDashboardMessage: "We failed to create the dashboard. Please try again later.",
            Dashboard_FailToDeleteDashboardMessage: "We failed to delete the dashboard. Please try again later.",
            Dashboard_FailToExportDashboardMessage: "We failed to export the dashboard. Please try again later.",
            Dashboard_FailToRenameDashboardMessage: "We failed to rename the dashboard. Please try again later.",
            Dashboard_FailToRemoveDashboardMessage: "We failed to remove the dashboard. Please try again later.",
            DashboardDoesNotExistMessage: "It may have been deleted or you may not have access to view it.",
            DashboardDoesNotExistTitle: "Sorry, we couldn't find that dashboard",
            NotificationMessage_ExportingPackage: "Exporting package",
            DashboardReadOnlyExportWarning_Message: "This dashboard is read only, export is not allowed.",
            Dashboard_DeleteConfirmationMessage: "Are you sure you want to permanently delete this dashboard?",
            Dashboard_DeleteConfirmationTitle: "Delete Dashboard",
            Dashboard_RemoveConfirmationTitle: "Remove Dashboard",
            Dashboard_RemoveConfirmationMessage: "Are you sure you want to remove this dashboard?",
            Report_DeleteConfirmationMessage: "Are you sure you want to permanently delete this report?",
            Workbook_RemoveConfirmationMessage: "Are you sure you want to permanently remove this workbook?",
            Report_DeleteConfirmationTitle: "Delete Report",
            Workbook_RemoveConfirmationTitle: "Remove Workbook",
            Report_ExitOnDeletionConfirmationMessage: "Another user has deleted this report.",
            Report_ExitOnDeletionConfirmationTitle: "Report deleted",
            Report_ExitOnDeletionConfirmationButtonText: "Close report",
            Model_DeleteConfirmationMessage: "Are you sure you want to permanently delete this dataset?",
            Model_DeleteConfirmationTitle: "Delete Dataset",
            Tile_LoadingText: "LOADING...",
            Tile_ErrorText: "We can’t load the content of this tile now. Please try again later.",
            PinTile_Error: "Sorry, can't pin this visualization yet",
            PinTile_Error_DefaultDetails: "We're working on this feature. Please send us any other feedback about Power BI.",
            PinTile_Success: "Pinned to Dashboard",
            PinTile_Success_DefaultDetails: "The visualization has been pinned to your dashboard.",
            SaveReport_Success: "Report successfully saved.",
            SaveReport_Success_DefaultDetails: "This report has been saved.",
            SaveReport_Error: "An error occured during save.",
            SaveReport_Error_DefaultDetails: "This report currently cannot be saved.",
            DashboardReadOnlyWarning_Title: "Warning",
            DashboardReadOnlyWarning_Message: "This dashboard is read only, your changes will not be saved.",
            BingSearchMetricsContentProvider_EnterUrl: "Please enter a URL.",
            BingSearchMetricsContentProvider_SelectVisual: "Please select at least one visual.",
            BingSearchMetricsContentProvider_Title: "Bing Search Metrics",
            BingSearchMetricsContentProvider_Description: "Track and explore search trends from Bing for the topics, search terms, or websites that matter most to you.",
            BingSearchMetricsContentProvider_UrlPrompt: "Get metrics for URL:",
            BingSearchMetricsContentProvider_AddButtonText: "Add",
            BingNewsContentProvider_EnterSearchTerm: "Bing News Search:",
            BingNewsContentProvider_NoSearchTerm: "Please enter a search term.",
            BingNewsContentProvider_AddButtonText: "Add",
            BingNewsContentProvider_Title: "Bing News",
            BingNewsContentProvider_Description: "Track the latest news headlines on your dashboard with Bing News and stay up to date with news for the topics that matter most to you. Provide the search terms for topics you want to track and add a news tiles to the currently selected dashboard. Clicking on the listed news headlines opens the original articles so you can read further.",
            BingNewsTile_NoResults: "We didn't find any results",
            AdditionalErrorInfo_RequestIdText: "Request Id",
            AdditionalErrorInfo_ActivityIdText: "Activity Id",
            AdditionalErrorInfo_TimestampText: "Time",
            AdditionalErrorInfo_ErrorCodeText: "Status Code",
            AdditionalErrorInfo_VersionText: "Version",
            AdditionalErrorInfo_ClusterUriText: "Cluster URI",
            AdditionalErrorInfo_ecsCorrelationId: "ecsCorrelationId",
            ErrorMessage_FailedLoadGroup: "Failed to load group content",
            ErrorMessage_FailedLoadDashboards: "Failed to load all dashboards",
            ErrorMessage_FailedLoadContentProviders: "Failed to load content providers",
            ErrorTitle_FailedToStorePackage: "We couldn't import data from ",
            ErrorMessage_FailedToStorePackageExcel: "Your data might not be formatted properly. You'll need to edit your workbook in Excel and then import it again.",
            ErrorMessage_FailedToGetPackageModels: "Failed to store the data for new tile",
            ErrorMessage_DefaultTitle: "oops, something went wrong",
            ErrorMessage_FailedToOpenExcelFile: "This is not an Excel file or it is a password protected Excel file. If that's the case, try removing the password and uploading the file again.",
            ErrorMessage_NoConnectorAssociatedWithModel: "This workbook connects to an Analysis Services server, but the server has not yet been connected to Power BI. Contact your administrator to configure a Analysis Services Connector to connect the server and Power BI.",
            ErrorTitle_FailedToStorePackageExcel: "We couldn't find any data in your Excel workbook",
            NotificationMessage_ImportingPackage: "Importing data",
            NotificationMessage_ImportingMashUpPackage: "Connecting to data sources, please stay on this page",
            NotificationMessage_RetrievingAggregatedDataSourcesFromModel: "Retrieving data sources, please stay on this page",
            NotificationMessage_NewDashboardCreatedTitle: "Your new dashboard is ready",
            NotificationMessage_NewDashboardCreatedLinkDescription: "Take a look",
            DisplayUnitSystem_E3_LabelFormat: "{0}K",
            DisplayUnitSystem_E3_Title: "Thousands",
            DisplayUnitSystem_E6_LabelFormat: "{0}M",
            DisplayUnitSystem_E6_Title: "Millions",
            DisplayUnitSystem_E9_LabelFormat: "{0}bn",
            DisplayUnitSystem_E9_Title: "Billions",
            DisplayUnitSystem_E12_LabelFormat: "{0}T",
            DisplayUnitSystem_E12_Title: "Trillions",
            Percentage: "#,0.##%",
            ResyncSessionTile_Warning: "Warning",
            ResyncSessionToPreviousState_WarningMessage: "We were unable to restore your session to the latest state. We have restored your session to a previously saved state.",
            NewDashboard_Placeholder: "New Dashboard",
            NewDashboard_AddDashboardLabelText: "Add Dashboard",
            DashboardName_InvalidNameNotificationTitle: "Dashboard name invalid",
            DashboardName_EmptyWhitespaceErrorMessage: "Dashboard name cannot be empty or whitespaces.",
            DashboardName_DuplicatedNameErrorMessage: "Duplicate name exists.",
            SalesforceContentProvider_Landing_Title: "Salesforce",
            SalesforceContentProvider_Landing_Description_Top1: "With the Salesforce connector, you import and analyze your Salesforce data in Power BI. After connecting to your Salesforce account, you import a variety of data to explore and monitor in your Power BI dashboards.",
            SalesforceContentProvider_Landing_Description_Top2: "Based on the persona you select, Power BI automatically creates a dashboard with customized visualizations of your data. This dashboard provides immediate insights into your data.",
            SalesforceContentProvider_Landing_Description_Bottom: "You can also customize the dashboard, adding metrics that are important to you. All of your Salesforce data is updated automatically, ensuring you have the latest information available.",
            SalesforceContentProvider_Landing_MetricsHeading: "Sample metrics include:",
            SalesforceContentProvider_Landing_Metrics_OpportunitiesValue: "Value of opportunities in each stage",
            SalesforceContentProvider_Landing_Metrics_OpportunitiesCount: "Number of open opportunities",
            SalesforceContentProvider_Landing_Metrics_Accounts: "Top accounts by the total amount",
            SalesforceContentProvider_Landing_More1: "More about",
            SalesforceContentProvider_Landing_More2: " connecting to Salesforce data",
            SalesforceContentProvider_Landing_ConnectButton: "Connect",
            SalesforceContentProvider_Landing_Error_BrowserPopUpDisabled: "Browser pop-up is disabled. Please verify browser settings.",
            SalesforceContentProvider_Landing_Error_GetAuthEndpointFailed: "Unable to resolve Salesforce authentication endpoint. Please try again later.",
            SalesforceContentProvider_Landing_Error_ConfigurationOptionsUnavailable: "Unable to log in to Salesforce with provided credentials. Please make sure your Salesforce account allows API access and try again.",
            SalesforceContentProvider_Configuration_Title: "Import from Salesforce",
            SalesforceContentProvider_Configuration_Type_Templates: "Dashboards",
            SalesforceContentProvider_Configuration_Type_Reports: "Reports",
            SalesforceContentProvider_Configuration_OKButtonText: "OK",
            SalesforceContentProvider_Configuration_CancelButtonText: "Cancel",
            SalesforceContentProvider_Configuration_ConnectButton: "Connect",
            SalesforceContentProvider_Configuration_Dashboards_Title: "Select an out of box dashboard customized by persona:",
            SalesforceContentProvider_Configuration_Embedded_Title: "Salesforce",
            SalesforceContentProvider_Configuration_Embedded_Dashboards_Title: "Select an out of box dashboard designed to get the most of your Salesforce data",
            SalesforceContentProvider_Configuration_Embedded_Dashboards_Preview_Title: "Preview",
            SalesforceContentProvider_Configuration_Embedded_Dashboards_Preview_Description_SalesManager: "Sales Manager Dashboard contains lots of info that may be relevant to you if you were a sales manager. Included tiles:",
            SalesforceContentProvider_Configuration_Embedded_Dashboards_Preview_Description_SalesRep: "Sales Rep Dashboard contains lots of info that may be relevant to you if you were a sales representative. Included tiles:",
            SalesforceContentProvider_Configuration_Embedded_Dashboards_Preview_Metric_SaleOverTime: "Sale over time",
            SalesforceContentProvider_Configuration_Embedded_Dashboards_Preview_Metric_CustomerRepsInLocation: "Customer Reps in Location",
            SalesforceContentProvider_Configuration_Embedded_Dashboards_Preview_Metric_TrendingSales: "Trending Sales",
            SalesforceContentProvider_Configuration_Embedded_Reports_Title: "Choose any Salesforce reports you would like to import into PowerBI.com.",
            SalesforceContentProvider_Configuration_Embedded_Reports_DateTime_Never: "Never",
            SalesforceContentProvider_Configuration_Dashboards_SalesManager: "Sales Manager Dashboard",
            SalesforceContentProvider_Configuration_Dashboards_SalesRep: "Sales Rep Dashboard",
            SalesforceContentProvider_Configuration_Embedded_Dashboards_SalesManager: "Sales Manager",
            SalesforceContentProvider_Configuration_Embedded_Dashboards_SalesRep: "Sales Rep",
            SalesforceContentProvider_Configuration_Reports_NameHeader: "Name",
            SalesforceContentProvider_Configuration_Reports_LastViewedHeader: "Last Viewed",
            SalesforceContentProvider_Configuration_Reports_LastEditied: "Last Edited",
            SalesforceContentProvider_Configuration_Reports_Loading: "Loading your Salesforce reports...",
            SalesforceContentProvider_Configuration_Reports_NoneAvailable: "We didn’t find any reports in your Salesforce account. Please add some and then try again.",
            SalesforceContentProvider_Configuration_ReportsSelectionInfo_Single: "You've selected {0} report.",
            SalesforceContentProvider_Configuration_ReportsSelectionInfo_Multiple: "You've selected {0} reports.",
            SalesforceContentProvider_Configuration_Error_UnableToAccessSalesforceAccount: "Sorry, we weren't able to access your account. Please contact your administrator.",
            SalesforceContentProvider_Configuration_Error_ReportsLoadFailedGeneric: "Sorry, something went wrong while retrieving the list of your reports. Please try again later.",
            SalesforceContentProvider_Configuration_Error_Unknown: "Sorry, something went wrong. Please try again later.",
            MashUpContentProvider_Title: "MashUp Content Provider",
            MashUpContentProvider_Description: "Third party content providers for PowerBI.",
            MashUpContentProvider_ImportButtonText: "Connect",
            MashUpContentProvider_Error_MissingModelFromPackage: "Missing model from the package",
            MashUpContentProvider_RetailSalesSample_Title: "Retail Sales Sample",
            MashUpContentProvider_RetailSalesSample_Description1: "This industry sample dashboard and underlying report analyzes retail sales data of items sold across multiple stores and districts. The metrics compare this year's performance to last year's in these areas: sales, units, gross margin, and variance, as well as new store analysis. This is real data that has been anonymized.",
            MashUpContentProvider_Sample_Usage: "How to use this sample",
            MashUpContentProvider_Sample_DataReportDashboard: "This sample contains a dashboard, a report, and data.",
            MashUpContentProvider_NFL2014SeasonRecap_Description1: "Explore statistics from National Football League regular season and playoff games for the 2014 season. Statistics and key measures are provided game by game for each team and player, with additional data for fan attendance, game day weather, and player backgrounds. ",
            MashUpContentProvider_NFL2014SeasonRecap_GetStarted: "To get you started with the data, the sample provides these reports:",
            MashUpContentProvider_NFL2014SeasonRecap_GetStarted1: "Team weekly scoring recap with statistical leaders",
            MashUpContentProvider_NFL2014SeasonRecap_GetStarted2: "Game by game recap",
            MashUpContentProvider_NFL2014SeasonRecap_GetStarted3: "Passing, rushing, receiving, and defensive stat recaps",
            MashUpContentProvider_NFL2014SeasonRecap_GetStarted4: "Outcomes against the spread",
            MashUpContentProvider_NFL2014SeasonRecap_GetStarted5: "Player demographics",
            MashUpContentProvider_NFL2014SeasonRecap_ExploreFurtherDesc1: "Want to explore the data further? Go ahead! Ever wondered… ",
            MashUpContentProvider_NFL2014SeasonRecap_ExploreFurther1: "Which draft round produced the players who scored most touchdowns in the playoffs?",
            MashUpContentProvider_NFL2014SeasonRecap_ExploreFurther2: "How colleges rank based on the number of snaps their former players were on the field for?",
            MashUpContentProvider_NFL2014SeasonRecap_ExploreFurther3: "The average QB rating for quarterbacks playing in domed stadiums, when favored? ",
            MashUpContentProvider_NFL2014SeasonRecap_ExploreFurtherDesc2: "If so, then this data set is for you. The answers to these and many other questions are waiting in this data.",
            MashUpContentProvider_NFL2014SeasonRecap_Description2: "This copy of the sample is yours to experiment with. You can always connect to the sample again for a fresh copy.",
            MashUpContentProvider_Sample_Click: "Click ",
            MashUpContentProvider_Sample_Connect: "Connect ",
            MashUpContentProvider_Sample_ConnectSuffix: "above to get started. Power BI automatically creates a dashboard with visualizations based on the sample data.",
            MashUpContentProvider_Sample_InDashboard: "In the dashboard:",
            MashUpContentProvider_Sample_InDashboard1: "Try typing natural-language questions to explore the data. Pin the resulting visualizations and metrics to your dashboard.",
            MashUpContentProvider_Sample_InDashboard2: "Click a tile to explore the underlying data and reports.",
            MashUpContentProvider_Sample_InReport: "In the report:",
            MashUpContentProvider_Sample_Report1: "Change visualizations from one type to another.",
            MashUpContentProvider_Sample_Report2: "Move visualizations and add new ones.",
            MashUpContentProvider_Sample_Report3: "Pin interesting visualizations to the dashboard. ",
            MashUpContentProvider_Sample_Report4: "See what insights you can discover in the data.",
            MashUpContentProvider_Sample_Description3: "This copy of the sample is yours to experiment with. You can always connect to the sample again for another copy.",
            MashUpContentProvider_Sample_More: "About the sample",
            MashUpContentProvider_Sample_LearnMore: "More about the specifics of this sample",
            MashUpContentProvider_Sample_LearnMoreDescription: "and how you can enhance it.",
            MashUpContentProvider_GitHub_Description1: "Visualize different types of repository activity in Power BI by connecting to your GitHub data. You get a Power BI dashboard and reports with insights about how many commits, who contributes most, and at what time of day. Use the dashboard and reports provided, or customize them to highlight the information you care about most.",
            MashUpContentProvider_GitHub_Description2: "The data in Power BI is updated daily from GitHub according to a schedule that you control.",
            MashUpContentProvider_GitHub_More1: "More about",
            MashUpContentProvider_GitHub_More2: " connecting to GitHub Data",
            MashUpContentProvider_GoogleAnalytics_Description1: "Visualize data from your Google Analytics account directly in Power BI. Connect using your Google credentials and immediately gain insights from the sites that you’re tracking, such as the site traffic over the last 30 days or the days of the week your site is most popular. Data from the last 180 days is included and will automatically refresh each day. Existing reports provide a view of trends over time and can be customized based on the metrics important to you.",
            MashUpContentProvider_Marketo_Description1: "Bring rich marketing analytics directly into Power BI by connecting to Marketo. Extend the power of your Power BI dashboards with reports that provide rich insights into your buyer profiles, marketing campaign success rates, email engagement, and more. Use the dashboard and reports provided, or customize them to highlight the information you care about most.",
            MashUpContentProvider_Marketo_Description2: "The data in Power BI is automatically updated from Marketo, so you always see the latest data.",
            MashUpContentProvider_Marketo_More1: "More about",
            MashUpContentProvider_Marketo_More2: " connecting to Marketo Data",
            MashUpContentProvider_QuickBooks_Description1: "Get insights into your business by connecting Power BI with QuickBooks Online.  Connect Power BI to QuickBooks Online using you QuickBooks Online admin credentials to get a dashboard with insights to your business cash flow, profitability, customers, and more.  Use the default dashboard and reports, or customize them to highlight the information you care most about.",
            MashUpContentProvider_QuickBooks_Description2: "The data that appears in Power BI will be updated daily from QuickBooks Online based on the schedule that you set.",
            MashUpContentProvider_QuickBooks_Description3: "With the current version of the Power BI and QuickBooks Online integration, one QuickBooks Online admin user can connect and create the Power BI dashboard, which can then be shared with other Power BI users.",
            MashUpContentProvider_QuickBooks_More1: "More about",
            MashUpContentProvider_QuickBooks_More2: " connecting to QuickBooks Online data",
            MashUpContentProvider_Zendesk_Description1: "Analyze your Zendesk data in Power BI by connecting with your Zendesk admin account credentials. Power BI creates a dashboard with reports that provide insights about your ticket volumes and agent performance. Use the dashboard and reports provided, or customize them to highlight the information you care about most.",
            MashUpContentProvider_Zendesk_Description2: "Your data in the Zendesk service is transmitted to Power BI so that you can perform business analytics. This data is updated daily from Zendesk according to a schedule that you control.",
            MashUpContentProvider_Zendesk_More1: "More about",
            MashUpContentProvider_Zendesk_More2: " connecting to Zendesk data",
            MashUpContentProvider_VisualStudioOnline_Description1: "Visualize your source code activity in Power BI by connecting to Microsoft Visual Studio Online. The default dashboard and report provide at-a-glance views of git, pull request, and version control activity across the projects you configure for your account.  You can customize the dashboard and report to highlight the deeper insights you care about most.",
            MashUpContentProvider_VisualStudioOnline_Description2: "The data that appears in Power BI will be updated from Microsoft Visual Studio Online according to a schedule that you control.",
            MashUpContentProvider_VisualStudioOnline_More1: "More about",
            MashUpContentProvider_VisualStudioOnline_More2: " connecting to Visual Studio Online data",
            MashUpContentProvider_Sage_Description1: "The Sage One Accounting application allows you to import and analyze your financial and sales data in Power BI. After connecting to your Sage One account, you'll be able to import your data and view your company's performance using flexible Power BI dashboards. You’ll have immediate insight into your data to make informed business decisions.",
            MashUpContentProvider_Sage_Description2: "Customize the dashboards to include metrics that provide you with the information you need for your business, then slice, dice and analyze the data any way you like using the variety of tools available in Power BI. All your latest Sage One Accounting information will be updated automatically, ensuring you always have your finger on the pulse.",
            MashUpContentProvider_Sage_Title: "Sample metrics include:",
            MashUpContentProvider_Sage_Top4Sales: "Top 5 Items by Sales",
            MashUpContentProvider_Sage_Top5Customers: "Top 5 Customers by Sales",
            MashUpContentProvider_Sage_AndMore: "And More.",
            MashUpContentProvider_Sage_More1: "More about",
            MashUpContentProvider_Sage_More2: " connecting to Sage data",
            MashUpContentProvider_SendGrid_Description1: "With the SendGrid connector, monitor all your important email metrics in one dashboard using Power BI. After you connect with your SendGrid credentials, Power BI imports your email metrics into a single dashboard. From there, you can customize your dashboard and drill down for greater detail.",
            MashUpContentProvider_SendGrid_Description2: "With SendGrid advanced statistics enabled, you can monitor your most important metrics at a glance and measure user engagement for the emails you send.",
            MashUpContentProvider_SendGrid_Title: "Sample metrics include:",
            MashUpContentProvider_SendGrid_AggregatedStats: "Trend data for specified periods of time including requests, delivered, opens, clicks, unsubscribes, bounces, and spam reports",
            MashUpContentProvider_SendGrid_EmailMetricsByCategory: "By client, device, ISP, and browser",
            MashUpContentProvider_SendGrid_EmailMetricsByGeography: "By geographical location including country, state, and city",
            MashUpContentProvider_SendGrid_EmailMetricsByISP: "By email category (for example, user alerts, welcome emails, confirmations, or newsletters)",
            MashUpContentProvider_SendGrid_More1: "More about",
            MashUpContentProvider_SendGrid_More2: " connecting to SendGrid data",
            MashUpContentProvider_DynamicCRM_Description1: "Connect to your Microsoft Dynamics CRM account for immediate access to insights about your opportunities, accounts, and more. This connector is designed specifically for sales managers, providing details on sales performance, pipeline, and activities. The dashboard and report are built on top of a fully featured model, so you can explore and analyze your data as you need. Automatic refresh ensures you always see the latest data.",
            MashUpContentProvider_DynamicCRM_More1: "More about",
            MashUpContentProvider_DynamicCRM_More2: " connecting to Microsoft Dynamics CRM data",
            MashUpContentProvider_DynamicMarketing_Description1: "Use the Microsoft Dynamics Marketing Content Pack for Power BI to quickly build your marketing performance analytics. The content pack is designed specifically for marketing managers who focus on demand generation. Its components draw directly from your marketing database to provide reports on topics that include: marketing contacts and companies; territory analysis; campaign ownership and ROMI; lead pipeline, scoring and generation over time; segment analysis; and the performance of landing pages, marketing emails and tracked web pages. The reports and dashboards are built on top of a model that focuses on demand generation. The out-of-box reports and dashboards give you a great starting point for exploring and analyzing your marketing data.",
            MashUpContentProvider_PBIExecutionReview_Title: "PowerBI Execution Review",
            MashUpContentProvider_PBIExecutionReview_Description1: "Power BI enables your organization to publish sources of data that are relevant to your business. This sample includes a collection of data, reports and a dashboard.",
            MashUpContentProvider_PBIExecutionReview_Description2: "Click on the Connect button to get started. You will see a new dashboard automatically created with a collection of visuals based on the sample data. From the dashboard, you can click on a tile to explore the underlying data and reports. You will also be able to pin interesting visuals to the dashboard, that you can continue to monitor. Additionally you can use natural language to explore the data and pin interesting visuals and metrics to your dashboard.",
            MashUpContentProvider_MSITNTA_Title: "IT New Technology Adoption",
            MashUpContentProvider_MSITNTA_Description1: "Connect to Microsoft’s organizational data to gain insights into Microsoft IT Applications’ adoption of latest technologies across the portfolio of solutions Microsoft employees use. You will get a dashboard with a report backed by data from an on premise SQL Server Analysis Services instance.  You will be able to customize the dashboard adding metrics that are important to you.",
            MashUpContentProvider_MSITNTA_Support: "Questions on data and reports: ntacore@microsoft.com",
            MashUpContentProvider_WinUserVoice_Title: "Windows UserVoice",
            MashUpContentProvider_WinUserVoice_Description1: "Windows and Windows Phone UserVoice are feedback portals where Windows and Windows Phone users can submit feature suggestions, vote and/comment on those suggestions, and be heard! Through the portals, engineering teams can identify innovative features that our users crave.",
            MashUpContentProvider_WinUserVoice_Description2: "Connect to Microsoft’s organizational data of Windows and Windows Phone UserVoice feedback to get a quick and up-to-date view of the total users, total suggestions and total votes for both Windows UserVoice and Windows Phone UserVoice. You will get a dashboard with a report backed by data from an on premise SQL Server Analysis Services instance.  The reports include top categories for both portals, and trends in suggestions, votes and comments, during a given period of time. You will be able to customize the dashboard adding metrics that are important to you.",
            MashUpContentProvider_WinUserVoice_Support: "Questions on data and reports: winuservoice@microsoft.com",
            MashUpContentProvider_DCU_Title: "Digital Crimes Unit",
            MashUpContentProvider_DCU_Description1: "The Digital Crimes Unit (DCU) is an international legal and technical team working with partners, to help create a safe digital world. The DCU operates in conjunction with Internet Service Providers and Computer Emergency Response Teams to disrupt botnets from cybercriminals. These botnets can be involved in activities ranging from e-mail spam and click fraud to financial fraud and privacy invasion. After Microsoft disrupts these botnets, affected devices continue to call into Digital Crimes Unit allowing reporting and to notify those still affected by malware.",
            MashUpContentProvider_DCU_Description2: "Connect to Microsoft’s organizational data to gain insights into the summary of calls that are made to the DCU every day by devices still affected by several of the botnets that the Digital Crimes Unit has disrupted. You will get a dashboard with a report backed by data from an on premise SQL Server Analysis Services instance.  You will be able to customize the dashboard adding metrics that are important to you.",
            MashUpContentProvider_DCU_Support: "Questions on data and reports: DCU_BI_Status@microsoft.com",
            MashUpContentProvider_HR_Title: "People View",
            MashUpContentProvider_HR_Description1: "Connect to Microsoft’s organizational data to gain insights into Headcount, Average Directs and Anniversaries. You will get a dashboard with a report backed by data from an on premise SQL Server Analysis Services instance.  You will be able to customize the reports and dashboard adding metrics that are important to your group.",
            MashUpContentProvider_HR_Support: "Questions on data and reports: hrreport@microsoft.com",
            MashUpContentProvider_OrgApps_Legal: "This dataset is based on Microsoft confidential information and cannot be shared with external non-Microsoft parties under any circumstances",
            DashboardInvitationInvalid: "This invitation is invalid",
            DashboardInvitationRevoked: "The dashboard owner has removed access to this dashboard",
            DashboardInvitationExpired: "This invitation has expired",
            DashboardInvitationRemoteTenant: "The data for the invitation is not currently available",
            DashboardInvitationUnverifiedEmail: "This invitation was not intended for the current signed in user. Only the intended recipient can access this dashboard",
            DashboardInvitationInvalidTenant: "This invitation contains dashboards, reports or data outside your organization which cannot be viewed",
            DashboardInvitationInvalidParameters: "Invalid parameters specified",
            DashboardInvitationInvalidRequest: "There was an error processing the invitation",
            DashboardInvitationErrorTitle: "You do not have access to this dashboard",
            Sharing_WrongEmailAddresses: "Invalid list of email addresses. Please correct them",
            Sharing_EmailAddressExceeded: "You can only share to {{maxEmails}} contacts at a time, please remove some",
            Sharing_NoEmailAddressSpecified: "Please specify one or more e-mail addresses",
            Sharing_InvalidEntry: "Invalid entry",
            Sharing_MessageSizeExceeded: "Message is too long",
            Sharing_FailedToLoadInvitedUsers: "Failed to load invited users",
            Sharing_FailedToLoadUsers: "Failed to load dashboard users",
            Sharing_FailedToInvitedUsers: "Failed to send email to invite users",
            Sharing_FailedToCancelInvitation: "Failed to cancel invite",
            Sharing_FailedToDeleteDashboardUser: "Failed to delete dashboard user",
            Sharing_Status: "Status",
            Sharing_Success: "Success!",
            Sharing_Failure: "Failure",
            Sharing_EditDashboardUsersSuccess: "Your changes were successfully saved",
            Sharing_SendEmailSuccess: "Your dashboard has been shared successfully.",
            Sharing_UsersCanReshare: "Allow recipients to share your dashboard",
            Sharing_CancelInvite: "Cancel Invite",
            Sharing_StopSharing: "Stop Sharing",
            Sharing_InviteWillBeCancelled: "Invite will be cancelled",
            Sharing_UserDeleted: "Sharing will be removed",
            Sharing_Owner: "Owner",
            Sharing_DashboardOwner: "Dashboard owner is ",
            Sharing_OnlyWithYou: "Not shared with anyone",
            Sharing_SharedWith: "Shared with ",
            Sharing_EmailText: "Check out this dashboard I created to track our data.",
            Sharing_EnterEmailText: "Enter email addresses separated by ; or ,",
            Sharing_UsersCannotReshare: "You do not have sufficient permissions to share this dashboard",
            Sharing_SharedWithNOthers: " and {{numberOthers}} others",
            Sharing_FailedToEditPermissions: "Unable to edit permissions",
            Sharing_PermissionDisplay_CanView: "Can view",
            Sharing_PermissionDisplay_CanEdit: "Can edit",
            Sharing_PermissionOptions_StopSharing: "Stop sharing",
            Sharing_PermissionOptions_DisableReshares: "Disable reshares",
            Sharing_PermissionOptions_EnableReshares: "Enable reshares",
            Sharing_EmailDomainNotInTenant: "One or more e-mail addresses are outside your organization: {{invalidDomains}}",
            Sharing_DataAccessNotification: "Recipients will have access to the same data and reports as you have in this dashboard.",
            Sharing_DataAccessNotificationLink: "Learn more",
            Publish_SuccessMessage: 'The content pack "{0}" has been published to the organization content gallery.',
            Publish_Success: "Success!",
            Publish_Failure: "Failure",
            ActivityPane_ErrorMessage_FailedLoadPaneContent: "Failed to load activity pane data.",
            ActivityPane_ConnectionOptionsText: "Connection Options",
            ActivityPane_Explore: "EXPLORE",
            ActivityPane_CuratedContentReportTitle: "REPORTS",
            ActivityPane_CuratedContentDashboardTitle: "DASHBOARDS",
            ActivityPane_CuratedContentTileTitle: "TILES",
            ConnectionsSettingsDialog_Title_Text: "Connection Settings",
            ConnectionsSettingsDialog_Load_Content_Error_Text: "An error occured during getting data for connection settings dialog.",
            ConnectionsSettingsDialog_Refresh_Settings_Title_Text: "Refresh Settings",
            ConnectionsSettingsDialog_Refresh_Settings_Last_Updated_Title_Text: "Last updated: ",
            ConnectionsSettingsDialog_Delete_Connection_Title_Text: "Delete Connection",
            ConnectionsSettingsDialog_Delete_Connection_Content_Text: "Deleteing a connection cannot be undone.",
            ConnectionsSettingsDialog_Delete_Connection_Link_Text: "Delete Connection",
            ConnectionsSettingsDialog_Delete_Done_Button_Text: "Done",
            ConnectionsSettingsDialog_Delete_Confirmation_Text: "Are you sure you want to delete this connection?",
            ConnectionsSettingsDialog_Delete_Error_Text: "An error happened during deleting the package.",
            TableTotalLabel: "Total",
            ExpiredTokenError_Title: "Session has expired",
            ExpiredTokenError_Text: "Your login session has expired. Please refresh the page.",
            ExcelContentProvider_Landing_Title: "Excel Workbook",
            ExcelContentProvider_Landing_Description: "Unlocking the insights stored in your Excel workbooks couldn't be easier. By either directly uploading or connecting Power BI to your OneDrive account, you can begin to track your most important metrics on an interactive, real-time dashboard. Data is automatically refreshed from OneDrive, ensuring you have the latest information as you make decisions and take actions.",
            ExcelContentProvider_Landing_SupportedObjectsHeading: "Supported Excel objects:",
            ExcelContentProvider_Landing_Supported_1: "Worksheet tables",
            ExcelContentProvider_Landing_Supported_2: "Excel Data Model tables",
            ExcelContentProvider_Landing_Supported_3: "Power View sheets",
            ExcelContentProvider_Landing_WorksWellHeading: "Works well with:",
            ExcelContentProvider_Landing_WorksWell_1: "Excel 2007 workbooks and later (.xlsx and .xlsm files)",
            ExcelContentProvider_Landing_DownloadSample_1: "Need a workbook to try?",
            ExcelContentProvider_Landing_DownloadSample_2: "Download this one",
            ExcelContentProvider_Landing_LearnMore1: "More about",
            ExcelContentProvider_Landing_LearnMore2: " connecting to Excel data",
            ExcelContentProvider_Landing_ConnectButton: "Connect",
            QnAVisualization_ModelDetailsTitle: "Showing data from",
            QnAVisualization_ModelDetailsExploreLink: "explore more...",
            ModalDialogButtonText_Yes: "Yes",
            ModalDialogButtonText_No: "No",
            PowerBICompanionProvider_Landing_Title: "Power BI Designer File",
            PowerBICompanionContentProvider_Landing_Description1: "Upload reports and data created with Power BI Designer. With the Designer app, you unleash the full power of Power BI: easily create reports based on data from a wide range of data sources, shape and combine the data to fit your needs, and create stunning visualizations to make your data speak for itself.",
            PowerBICompanionContentProvider_Landing_Description2: "If you haven't tried it yet, ",
            PowerBICompanionContentProvider_Landing_Description3: "download Power BI Designer today",
            PowerBICompanionContentProvider_Landing_Description4: " and bring your Power BI reports and dashboards to the next level.",
            PowerBICompanionContentProvider_Landing_PowerBIDesignerData_1: "More about",
            PowerBICompanionContentProvider_Landing_PowerBIDesignerData_2: " connecting to Power BI Designer data",
            PowerBICompanionContentProvider_Landing_ConnectButton: "Connect",
            UploadPowerBICompanion_YourComputer: "Computer",
            UploadPowerBICompanion_Connect: "Connect",
            UploadPowerBICompanion_Cancel: "Cancel",
            UploadPowerBICompanion_LocalBrowse: "Browse",
            UploadPowerBICompanion_PlaceholderText: "Choose file",
            UploadPowerBICompanion_UnsupportedFileType: "Only .pbix files are supported",
            UploadPowerBICompanion_PublishInProgress: "Publishing selected file, please wait ...",
            UploadPowerBICompanion_PublishFileCanceled: ".pbix file publishing has been canceled",
            UploadPowerBICompanion_PublishFileFailed: "Failed to publish .pbix file",
            UploadPowerBICompanion_UploadLimit: "Only .pbix files up to 250 MB are supported.",
            UploadPowerBICompanion_TitleUpload: ".pbix file Upload",
            QnAVisualization_ModelsListDescription: "Here's the data used on this dashboard. To ask questions about this data try starting with words that appear in the data (such as column names or row values). Or, open any of the data sources to explore on your own...",
            QnAVisualization_NoModelMessage: "It looks like you haven't added any data to this dashboard.",
            QnAVisualization_NoSupportedModelMessage: "You're connected to data sources that are not supported by Q&A. Open any of the data sources to explore on your own...",
            QnAVisualization_NoModelDescription1: "Get data",
            QnAVisualization_NoModelDescription2: "or add tiles to this dashboard from data sources you've already connected to and Q&A will allow you to ask questions about this data.",
            QnAVisualization_DataSources: "Data sources",
            AddDashboard_ToolTip: "Add a dashboard",
            SettingsGroupsNames_General: "General",
            SettingsGroupsNames_Dashboards: "Dashboards",
            SettingsGroupsNames_Datasets: "Datasets",
            SettingsGroupsNames_Workbooks: "Workbooks",
            QnaTextBoxPlaceholder: "Ask a question about the data on this dashboard",
            QnaTextBoxLoadingPlaceholder: "LOADING...",
            InterpretRetryMaxCountExceededMessageText: "There was a timeout executing your query. Please try again later.",
            WorkbooksLoadingTimeoutTitle: "Please wait",
            WorkbooksLoadingTimeoutText: "Contacting Power BI Q&A service...",
            UtteranceFeedbackTooltip: "Help improve Q&A",
            UtteranceFeedbackDialogTitle: "Q&A Feedback",
            UtteranceFeedbackDialogPrompt: "Please rate how well Q&A helped find data to answer your question.",
            UtteranceFeedbackResultBad: "Way Off",
            UtteranceFeedbackResultMedium: "Got Close",
            UtteranceFeedbackResultGood: "Great",
            PackageOperationBlocked: "We can’t perform this operation right now because another delete or refresh is in progress. Try again later.",
            PackageRefreshUnknownFailure: "There was an unknown error while refreshing your data.",
            DataRefreshBlocked: "We cannot refresh your workbook right now. Try again after five minutes.",
            RefreshingData: "Refreshing data",
            PreparingForRefresh: "Preparing for refresh",
            TutorialPopup_GetStarted: "Get started",
            TutorialPopup_GotIt: "Got it",
            TutorialPopup_WelcomeButtonLabel: "Get Data",
            TutorialPopup_WelcomeTitle: "Welcome to Power BI",
            TutorialPopup_WelcomeText: "You're on your way to exploring your data and monitoring what matters. \\n Let's start by getting some data.",
            TutorialPopup_WelcomeTutorialLinkText: "View a Tutorial",
            TutorialPopup_WelcomeLearnMoreText: "Want to learn more first?",
            TutorialPopup_FindContentTitle: "Find your content",
            TutorialPopup_FindContentText: "Notice that your new dashboards, reports and datasets show up in this pane. Click one to take a look.",
            TutorialPopup_ConnectDataTitle: "Connect to your data",
            TutorialPopup_ConnectDataText: "Start by connecting your own data to Power BI. Click Get Data and select your source.",
            TutorialPopup_PinVisualTitle: "Pin to the dashboard",
            TutorialPopup_PinVisualText: "Want to monitor this chart? Click this button to pin the chart to your dashboard so you can easily monitor it.",
            TutorialPopup_CreateFirstChartTitle: "Create your first chart",
            TutorialPopup_CreateFirstChartText: "Drag a field onto the screen to start building a new chart.",
            TutorialPopup_CustomizeChartTitle: "Customize your chart",
            TutorialPopup_CustomizeChartText: "Drag fields to or from these buckets to customize your chart.",
            Role_DisplayName_Axis: "Axis",
            Role_DisplayName_Category: "Category",
            Role_DisplayName_Color: "Color",
            Role_DisplayName_Columns: "Columns",
            Role_DisplayName_Details: "Details",
            Role_DisplayName_Field: "Field",
            Role_DisplayName_Fields: "Fields",
            Role_DisplayName_Group: "Group",
            Role_DisplayName_Latitude: "Latitude",
            Role_DisplayName_Legend: "Legend",
            Role_DisplayName_Location: "Location",
            Role_DisplayName_Longitude: "Longitude",
            Role_DisplayName_MaxValue: "Maximum Value",
            Role_DisplayName_MinValue: "Minimum Value",
            Role_DisplayName_Rows: "Rows",
            Role_DisplayName_Series: "Series",
            Role_DisplayName_Size: "Size",
            Role_DisplayName_Slices: "Slices",
            Role_DisplayName_TargetValue: "Target Value",
            Role_DisplayName_Value: "Value",
            Role_DisplayName_Values: "Values",
            Role_DisplayName_X: "X Axis",
            Role_DisplayName_Y: "Y Axis",
            Role_DisplayName_Y2: "Y2",
            Aggregate_Sum: "Sum",
            Aggregate_Avg: "Average",
            Aggregate_Min: "Minimum",
            Aggregate_Max: "Maximum",
            Aggregate_CountNonNull: "Count",
            Aggregate_Count: "Count (Distinct)",
            FieldWell_Remove: "Remove Field",
            FieldWell_RemoveAggregate: "Do Not Summarize",
            DisplayName_Sum: "Sum of {0}",
            DisplayName_Avg: "Average of {0}",
            DisplayName_Count: "Count of {0}",
            DisplayName_Min: "Min of {0}",
            DisplayName_Max: "Max of {0}",
            DisplayName_CountNonNull: "Count of {0}",
            TaskPane_Fields: "Fields",
            TaskPane_Format: "Format",
            VisualizationPane_Title: "Visualizations",
            VisualizationPane_Filters: "Filters",
            VisualizationPane_Section_Fields: "Fields",
            VisualizationPane_Section_Format: "Format",
            VisualizationPane_Watermark: "Drag data fields here",
            AnalysisServerContentProvider_Title: "SQL Server Analysis Services Servers in your organization",
            AnalysisServerContentProvider_Description: "With Power BI, you can create dynamic reports and mashups with data and metrics you already have in your on-premises SQL Server Analysis Services solutions. To get started, click Connect, select a server, then select a data model.",
            AnalysisServerContentProvider_SupportedObjectsHeading: "Supported Analysis Services Servers: ",
            AnalysisServerContentProvider_Landing_Supported_1: "SQL Server 2012 and later Analysis Services Tabular models",
            AnalysisServerContentProvider_Landing_More_1: "More about",
            AnalysisServerContentProvider_Landing_More_2: " connecting to Analysis Services data",
            AnalysisServerContentProvider_ConnectButtonText: "Connect",
            AnalysisServer_ResourceName: "Name",
            AnalysisServer_ResourceDescription: "Description",
            AnalysisServer_ServerName: "Server Name",
            AnalysisServer_PublishedBy: "Published By",
            AnalysisServer_PublishedDate: "Published Date",
            AnalysisServer_DatabaseName: "Name",
            AnalysisServer_DatabaseType: "Type",
            AnalysisServer_ResourceDatabaseType_Model: "Model",
            AnalysisServer_ResourceDatabaseType_Perspective: "Perspective",
            AnalysisServer_Loading: "Loading...",
            AnalysisServer_LoadResourcesFailed: "Could not load list of resources.",
            AnalysisServer_LoadDatabasesFailed: "Could not load list of databases.",
            AnalysisServer_ResourcesEmpty: "No resources found.",
            AnalysisServer_DatabasesEmpty: "No databases found.",
            LearnMore_Title: "Learn to add your own data",
            LearnMore_Designer_Title: "Excel + Power BI Designer",
            LearnMore_Designer_Description: "Is Excel your go-to tool for working with data? Leverage your Excel expertise and investments by uploading your Excel workbooks to Power BI. Don't have the latest version of Excel? Download the optional, dedicated Power BI Designer to begin building your reports for Power BI.",
            LearnMore_Excel1: "More about",
            LearnMore_Excel2: " Excel 2013",
            LearnMore_PowerBI_Designer1: "More about",
            LearnMore_PowerBI_Designer2: " Power BI Designer",
            LearnMore_OrganizationalData_Title: "Organizational Data",
            LearnMore_OrganizationalData_Description: "Are you looking for your organization's data? With Power BI you can securely and easily connect to a wide range of data sources like SQL Server and SQL Server Analysis Services tabular models, both on premises and in the cloud.",
            LearnMore_OrganizationalData_Link1: "More about",
            LearnMore_OrganizationalData_Link2: " Organizational Data",
            LearnMore_DataAnywhere_Title: "Data From Anywhere",
            LearnMore_DataAnywhere_Description: "Are you a developer? Do you want to partner with us to extend Power BI to your data source? Use our developer APIs and tools to connect to your data sources with Power BI.",
            LearnMore_PowerBI_Developer_Center: "Power BI Developer Center",
            LearnMore_DataAnywhere_Link1: "More about",
            LearnMore_DataAnywhere_Link2: " Data From Anywhere",
            AnalysisServer_CustomErrorTechnicalDetails: "Technical details:",
            AnalysisServer_CustomErrorTechnicalDetails_ActivityId: "Activity Id: {0}",
            AnalysisServer_CustomErrorTechnicalDetails_RequestId: "Request Id: {0}",
            AnalysisServer_CustomErrorTechnicalDetails_Date: "Date: {0}",
            AnalysisServer_CustomErrorTechnicalDetails_ErrorText: "Error Text: {0}",
            AnalysisServer_CustomErrorTechnicalDetails_ClusterUriText: "Cluster URI: {0}",
            CollapsibleSectionControl_Title_More: "More",
            CollapsibleSectionControl_Title_Less: "Less",
            PinTile_SaveReportFirstDialog_CancelButtonText: "Cancel",
            PinTile_SaveReportFirstDialog_Message: "We'll need to point this tile to a report that has been saved at least once so it exists in our system.",
            PinTile_SaveReportFirstDialog_SaveButtonText: "Save, then pin",
            PinTile_SaveReportFirstDialog_Title: "Please save before pinning",
            Tile_LoseReportConnection: "Looks like the report no longer exists.",
            OAuth_Security_Error: "You need to use SSL (HTTPS) when you use OAuth 2.0 authentication.",
            ErrorDescription_StillSettingUpAccount: "We are still setting up your account. Please refresh the page in a few minutes. If this persists, please {0}contact us{1}.",
            ErrorTitle_StillSettingUpAccount: "Almost there",
            FieldListMenuItem_AddFilter: "Add Filter",
            FieldListMenuItem_Rename: "Rename",
            FieldListMenuItem_Delete: "Delete",
            FieldListMenuItem_Hide: "Hide",
            FieldListMenuItem_ViewHidden: "View Hidden",
            FieldListMenuItem_UnHideAll: "Unhide All",
            Field_Tooltip: "'{0}'[{1}]",
            AdvancedFilter_ApplyFilter: "Apply Filter",
            AdvancedFilter_Description: "Show items when the value:",
            FilterOperator_Is: "is",
            FilterOperator_GreaterThan: "is greater than",
            FilterOperator_GreaterThanOrEqual: "is greater than or equal to",
            FilterOperator_LessThan: "is less than",
            FilterOperator_LessThanOrEqual: "is less than or equal to",
            FilterOperator_IsNot: "is not",
            Logical_And_Operator: "And",
            Logical_Or_Operator: "Or",
            FilterPane_Page: "Page Level Filters",
            FilterPane_Visual: "Visual Level Filters",
            FilterPane_Advanced: "Advanced Filtering",
            TileEditor_DeleteTile: "Delete Tile",
            QueryFailed: "Query Failed",
            VisualContainer_UnableToFindVisualKey: "Visual not supported.",
            NavigationPane_DashboardsTitle: "Dashboards",
            NavigationPane_DatasetsTitle: "Datasets",
            NavigationPane_ReportsTitle: "Reports",
            PowerBI_Landing_Title: "Power BI",
            ShareView_ShareButtonText: "Share",
            ShareView_ShareDashboard: "Share Dashboard",
            ExplorationContainer_FailedToLoadReport: "Unable to load report",
            ExplorationContainer_FailedToLoadReport_DefaultDetails: "The requested report failed to load",
            FilterRestatement_All: "(All)",
            FilterRestatement_CompoundAnd: "{0} and {1}",
            FilterRestatement_CompoundOr: "{0} or {1}",
            FilterRestatement_Equal: "is {0}",
            FilterRestatement_GreaterThan: "is greater than {0}",
            FilterRestatement_GreaterThan_DT: "is after {0}",
            FilterRestatement_GreaterThanOrEqual: "is greater than or equal to {0}",
            FilterRestatement_GreaterThanOrEqual_DT: "is on or after {0}",
            FilterRestatement_LessThan: "is less than {0}",
            FilterRestatement_LessThan_DT: "is before {0}",
            FilterRestatement_LessThanOrEqual: "is less than or equal to {0}",
            FilterRestatement_LessThanOrEqual_DT: "is on or before {0}",
            FilterRestatement_NotEqual: "is not {0}",
            FilterOperator_Contains: "contains",
            FilterOperator_DoesNotContain: "does not contain",
            FilterOperator_DoesNotStartWith: "does not start with",
            FilterOperator_GreaterThanOrEqual_DT: "is on or after",
            FilterOperator_GreaterThan_DT: "is after",
            FilterOperator_IsBlank: "is blank",
            FilterOperator_IsNotBlank: "is not blank",
            FilterOperator_LessThanOrEqual_DT: "is on or before",
            FilterOperator_LessThan_DT: "is before",
            FilterOperator_StartsWith: "starts with",
            FilterRestatement_Contains: "contains '{0}'",
            FilterRestatement_DoesNotContain: "does not contain '{0}'",
            FilterRestatement_DoesNotStartWith: "does not start with '{0}'",
            FilterRestatement_StartWith: "starts with '{0}'",
            ErrorDialogOption_FailedToStorePackageExcel: "Learn how to solve this problem",
            ExternalContentViewer_Search: "Search",
            FilterPane_ClearFilter: "Clear filter",
            FilterPane_DeleteFilter: "Delete filter",
            ExplorationContainer_FailedToSaveReport: "Unable to save the report",
            ExplorationContainer_FailedToSaveReportDefaultDetails: "The server failed to save the report",
            MobileLandingPage_ContinueToPbiCom: "continue to powerbi.com",
            MobileLandingPage_DownloadApp: "Download the app",
            MobileLandingPage_SubTitle: "Bring your data to life",
            MobileLandingPage_Title: "Power BI",
            DataSourceSupport_LearnMore: "Learn More",
            DataSourceSupport_LearnMoreMessage: "about data sources that currently support refresh.",
            OnPremises_Admin_Error: "Power BI can't connect to the On-Premises Analysis Services Server {0}. The administrator of the server provided the following message : {1}.",
            ServerError_OnPremises_Admin_Error: "Power BI can't connect to the On-Premises Analysis Services Server {resourceName}. The administrator of the server provided the following message : {adminMessage}.",
            ServerError_HRESULT_0x82040136: "SQL Server Analysis Services Connector appears to be offline(error code: 0x82040136). Please contact your Server Administrator.",
            ServerError_HRESULT_0x82070BC4: "SQL Server Analysis Services Connector appears to be offline(error code: 0x82070BC4). Please contact your Server Administrator.",
            ServerError_HRESULT_0x82031772: "SQL Server Analysis Services Connector is unable to connect to the Analysis Server. Please make sure that the password in the Connector is up to date and the Analysis Server is running.",
            FilterRestatement_Comma: "{0}, {1}",
            QnAVisualization_EmptyResultTitleText: "Sorry, I wasn't able to find a good answer.",
            Visualization_NoData: "This result returned no data.",
            SettingsDataset_DisableEntireRefreshPageErrorMessage_OnPremAnalysisServicesScheduleInfo: "This dataset connects to a SQL Server Analysis Services Tabular database & is always up-to-date. You do not have to schedule a refresh on this dataset.",
            SettingsDataset_DisableEntireRefreshPageErrorMessage_SalesforceScheduleRefreshInfo: "Your Salesforce dataset is updated daily. You do not need to schedule a periodic refresh for this dataset.",
            ExplorationContainer_FailedToLoadModel: "Unable to Load the Model",
            ExplorationContainer_FailedToLoadModel_DefaultDetails: "Unable to retrieve the model information at this time",
            Dataset_Mashup_Desc_DynamicsCRM_0: "Dynamics CRM OData Service URL",
            Dataset_Mashup_Desc_DynamicsMarketing_0: "Dynamics Marketing OData Service URL (case sensitive)",
            Dataset_Mashup_Desc_GitHub_0: "Owner or organization of the GitHub repository",
            Dataset_Mashup_Desc_GitHub_1: "GitHub repository name",
            Dataset_Mashup_Desc_GoogleAnalytics_0: "Account Name (case sensitive) configured for your Google Analytics account",
            Dataset_Mashup_Desc_GoogleAnalytics_1: "Property Name (case sensitive)",
            Dataset_Mashup_Desc_GoogleAnalytics_2: "View Name (case sensitive)",
            Dataset_Mashup_Desc_Zendesk_0: "Enter the web address for your account",
            Dataset_Mashup_Name_DynamicsCRM_0: "Service URL",
            Dataset_Mashup_Name_DynamicsMarketing_0: "Service URL",
            Dataset_Mashup_Name_GitHub_0: "Repository Owner",
            Dataset_Mashup_Name_GitHub_1: "Repository",
            Dataset_Mashup_Name_GoogleAnalytics_0: "Account",
            Dataset_Mashup_Name_GoogleAnalytics_1: "Property",
            Dataset_Mashup_Name_GoogleAnalytics_2: "View",
            Dataset_Mashup_Name_Zendesk_0: "Zendesk URL",
            ServerError_HRESULT_0x82030FA4: "User name and password provided to the SQL Server Analysis Services Connector is no longer correct.",
            ServerError_HRESULT_0x82031774: "SQL Server Analysis Services Connector is unable to connect to the Analysis Server instance. Please make sure the Analysis Server instance is up and running.",
            ServerError_OnPremisesNoConnectorError: "Power BI service requires SQL Server Analysis Services Connector installed on-premises in order to be able to access the server {resourceName}.",
            ServerError_OnPremisesTechnicalDetailsOpenConnectionError: "Power BI service is unable to connect to SQL Server Analysis Services Connector. Please make sure the Connector is up and running.",
            ServerError_OnPremisesTechnicalDetailsConnectorError: "Connector Error Message",
            ServerError_OnPremisesTechnicalDetailsConnectorErrorCode: "Connector Error Code",
            ServerError_OnPremisesTechnicalDetailsDataSourceError: "Analysis Services Error",
            PBIDesigner_ContentProvider_LandingTitle: "Power BI Designer",
            DatasetParametersDialog_HelpMessage: "Need help entering this information? ",
            DatasetParametersDialog_LearnMore: "Learn More",
            ErrorDialogOption_FailedToStorePackage: "Learn More",
            ErrorMessage_FailedToStorePackage: "Make sure you're entering the information correctly.",
            SR_GatewayOffline_Details: "Ensure that the computer on which the gateway is installed is turned on and the gateway is running",
            SR_GatewayOffline_Heading: "! {0} failed to refresh. Your gateway on {1} is offline or can not be reached.",
            SR_Failure_Subject: "Refresh failed: {0} has failed to refresh",
            SR_Failure_DebugClusterName: "Cluster Name: {0}",
            SR_Failure_DebugCorrelationId: "Correlation ID: {0}",
            SR_Failure_DebugStartTimeStamp: "Refresh Start Time: {0}",
            SR_Failure_NextRefreshTime: "Next refresh for {0} is scheduled for {1}.",
            SR_Failure_DebugEndTimeStamp: "Refresh End Time: {0}",
            Explore_Section_Page: "Page {0}",
            MashUpContentProvider_Sample_Origin: "This sample is part of a series that illustrates how you can use Power BI with business-oriented data, reports, and dashboards. This is real data from Obvience (",
            MashUpContentProvider_Sample_OriginSuffix: ") that has been anonymized.",
            MashUpContentProvider_SupplierQualityAnalysisSample_Description1: "This industry sample dashboard and underlying report focus on one of the typical supply chain challenges — supplier quality analysis. Two primary metrics are at play in this analysis: total number of defects and the total downtime that these defects caused. This sample has two main objectives:",
            MashUpContentProvider_SupplierQualityAnalysisSample_Description2: "Understand who the best and worst suppliers are, with respect to quality.",
            MashUpContentProvider_SupplierQualityAnalysisSample_Description3: "Identify which plants do a better job finding and rejecting defects, to minimize downtime.",
            MashUpContentProvider_SupplierQualityAnalysisSample_Title: "Supplier Quality Analysis Sample",
            MashUpContentProvider_CustomerProfitabilitySample_Description1: "This industry sample dashboard and underlying report analyze a company that manufactures marketing materials.  This dashboard was created by a CFO to see key metrics about her 5 business unit managers (aka executives), products, customers, and gross margins (GM). At a glance she can see what factors are impacting profitability.",
            MashUpContentProvider_HumanResourcesSample_Description1: "This industry sample dashboard and underlying report analyze HR information. The HR department has the same reporting model across different companies, even when they differ by industry or size. This sample looks at new hires, active employees, and employees who left and tries to uncover any trends in the hiring strategy. Our main objectives are to understand:",
            MashUpContentProvider_HumanResourcesSample_Description2: "Who we hire.",
            MashUpContentProvider_HumanResourcesSample_Description3: "Biases in our hiring strategy.",
            MashUpContentProvider_HumanResourcesSample_Description4: "Trends in voluntary separations.",
            MashUpContentProvider_ITSpendAnalysisSampleSample_Description1: "This industry sample dashboard and underlying report analyze the planned vs. actual costs of the IT department of a company. This comparison helps us understand how well the company planned for the year and allows us to investigate areas with huge deviations from the plan. The company in this example goes through a yearly planning cycle, and then quarterly it produces a new Latest Estimate (LE) to help analyze changes in IT spend over the fiscal year.",
            MashUpContentProvider_OpportunityTrackingSample_Description1: "This industry sample dashboard and underlying report analyze a software company that has 2 sales channels: direct and partner.  The Sales Manager created this dashboard to track opportunities and revenue by region, deal size, and channel. The Sales Manager relies on 2 measures of revenue:",
            MashUpContentProvider_OpportunityTrackingSample_Description2: "Revenue – this is a salesperson’s estimate of what the company’s revenue will be.",
            MashUpContentProvider_OpportunityTrackingSample_Description3: "Factored Revenue – this is calculated as Revenue X Probability % and is generally accepted as being a more-accurate predictor of actual sales revenue.  Probability is determined by the deal’s current Sales Stage.",
            MashUpContentProvider_ProcurementAnalysisSample_Description1: "This industry sample dashboard and underlying report analyze a manufacturing company’s spending on vendors by category and location, and lets us explore the following areas:",
            MashUpContentProvider_ProcurementAnalysisSample_Description2: "Who the top vendors are",
            MashUpContentProvider_ProcurementAnalysisSample_Description3: "What categories we spend most on",
            MashUpContentProvider_ProcurementAnalysisSample_Description4: "Which vendors give us the highest discount and when",
            MashUpContentProvider_SalesAndMarketingSample_Description1: "This industry sample dashboard and underlying report analyze a manufacturing company named VanArsdel Ltd.  This dashboard was created by the VanArsdel Chief Marketing Officer (CMO) to keep an eye on the industry and his company’s market share, product volume, sales, and sentiment.",
            FeedbackTicket_Message: "Microsoft uses third-party services to deliver a great feedback experience. By clicking Next, you agree to the {{startLink}} UserVoice Terms of Service and Privacy Policy {{endLink}} and Microsoft will contact you by email associated with your organizational account",
            PowerBI_Build_Version_Text: "Version",
            PowerBI_Copyright_Text: "Microsoft Corporation {{year}}. All rights reserved.",
            SupportTicket_Message: "Microsoft uses third-party services to deliver a great support experience. By clicking Next, you agree to the {{startLink}} UserVoice Terms of Service and Privacy Policy {{endLink}} and Microsoft will contact you by email associated with your organizational account",
            Sort_SortBy: "Sort By",
            Remove_visual: "Remove",
            VisualTitle_By_Template: "{0} by {1}",
            VisualTitle_And_Template: "{0} and {1}",
            BarChart_ToolTip: "Bar Chart",
            Card_ToolTip: "Card",
            ClusteredBarChart_ToolTip: "Clustered Bar Chart",
            ClusteredColumnChart_ToolTip: "Clustered Column Chart",
            ColumnChart_ToolTip: "Column Chart",
            Funnel_ToolTip: "Funnel",
            Gauge_ToolTip: "Gauge",
            HundredPercentStackedBarChart_ToolTip: "100% Stacked Bar Chart",
            HundredPercentStackedColumnChart_ToolTip: "100% Stacked Column Chart",
            LineChart_ToolTip: "Line Chart",
            Map_ToolTip: "Map",
            Matrix_ToolTip: "Matrix",
            MultiRowCard_ToolTip: "Multi Row Card",
            PieChart_ToolTip: "Pie Chart",
            ScatterChart_ToolTip: "Scatter Chart",
            Table_ToolTip: "Table",
            Treemap_ToolTip: "Treemap",
            Delete_ToolTip: "Delete",
            Remove_ToolTip: "Remove Visual",
            PinVisual_ToolTip: "Pin Visual",
            ShowConversionOptions_ToolTip: "Show Conversion Options",
            Sort_ToolTip: "Sort",
            NavigationPane_GroupsTitle_HasGroups: "GROUPS",
            NavigationPane_CreateGroup: "Create Group",
            NavigationPane_NoGroupText: "You have no groups",
            Waterfall_TotalLabel: "Total",
            Visual_DataPoint: "Data Points Colors",
            GeotaggingString_Address: "Address",
            GeotaggingString_Addresses: "Addresses",
            GeotaggingString_Cities: "Cities",
            GeotaggingString_City: "City",
            GeotaggingString_Code: "Code",
            GeotaggingString_Continent: "Continent",
            GeotaggingString_Continents: "Continents",
            GeotaggingString_Counties: "Counties",
            GeotaggingString_Countries: "Countries",
            GeotaggingString_Country: "Country",
            GeotaggingString_County: "County",
            GeotaggingString_Latitude: "Latitude",
            GeotaggingString_Longitude: "Longitude",
            GeotaggingString_Place: "Place",
            GeotaggingString_Places: "Places",
            GeotaggingString_Post: "Post",
            GeotaggingString_Province: "Province",
            GeotaggingString_Provinces: "Provinces",
            GeotaggingString_State: "State",
            GeotaggingString_States: "States",
            GeotaggingString_Street: "Street",
            GeotaggingString_Streets: "Streets",
            GeotaggingString_Town: "Town",
            GeotaggingString_Towns: "Towns",
            GeotaggingString_Village: "Village",
            GeotaggingString_Villages: "Villages",
            GeotaggingString_Zip: "Zip",
            GeotaggingString_Latitude_Short: "Lat",
            GeotaggingString_Longitude_Short: "Lon",
            GeotaggingString_PostalCode: "Postal Code",
            GeotaggingString_PostalCodes: "Postal Codes",
            GeotaggingString_ZipCode: "Zip Code",
            GeotaggingString_ZipCodes: "Zip Codes",
            GeotaggingString_Territories: "Territories",
            GeotaggingString_Territory: "Territory",
            Visual_Legend: "Legend",
            Visual_CategoryAxis: "Category Axis",
            Visual_CategoryAxis_Scalar: "Scalar Axis",
            Visual_Fill: "Fill",
            Visual_LegendPosition: "Legend Position",
            Visual_Show: "Show",
            NavigationPane_Groups_MyWorkspace: "My Workspace",
            NavigationPane_GroupIconTitle: "Group",
            Landing_DefaultReportName: "Untitled",
            Slicer_ToolTip: "Slicer",
            WaterfallChart_ToolTip: "Waterfall Chart",
            SqlAzureDbContentProvider_DatabaseName: "Database:",
            SqlAzureDbContentProvider_Description1: "Azure SQL Database is a fully managed relational database-as-a-service that makes tier-1 capabilities easily accessible. SQL Database supports massive scale-out, predictable performance, flexible manageability and includes built-in high availability and self-management for near-zero maintenance.",
            SqlAzureDbContentProvider_Description2: "With Power BI, you can create dynamic reports, mashups with data and metrics you already have in your Azure SQL Database. To get started, we need some information to connect to your database.",
            SqlAzureDbContentProvider_Description3: 'NOTE: To allow Power BI to connect to your Azure SQL Database, please make sure firewall rules for the database are configured to "Allow access to Azure services".',
            SqlAzureDbContentProvider_Description4: "More about",
            SqlAzureDbContentProvider_Error1: "Please enter Server.",
            SqlAzureDbContentProvider_Error2: "Please enter Database.",
            SqlAzureDbContentProvider_Error3: "Please enter User.",
            SqlAzureDbContentProvider_Error4: "Please enter Password.",
            SqlAzureDbContentProvider_Landing_ConnectButton: "Connect",
            SqlAzureDbContentProvider_Password: "Password:",
            SqlAzureDbContentProvider_ServerName: "Server:",
            SqlAzureDbContentProvider_Title: "Azure SQL Database",
            SqlAzureDbContentProvider_UserName: "User:",
            SqlAzurePdwContentProvider_DatabaseName: "Database:",
            SqlAzurePdwContentProvider_Description1: "Drive immediate insight from all of your data using the elastic scale SQL Data Warehouse with Direct Connect. Seamlessly combine a petabyte or more of relational data with non-relational Hadoop data using Polybase for a full view of your data. To get started, simply click Connect.",
            SqlAzurePdwContentProvider_Description3: "More about",
            SqlAzurePdwContentProvider_Description2: "With Power BI, you can create dynamic reports, mashups with data and metrics you already have in your Azure SQL Data Warehouse. To get started, we need some information to connect to your database.",
            SqlAzurePdwContentProvider_Error1: "Please enter Server.",
            SqlAzurePdwContentProvider_Error2: "Please enter Database.",
            SqlAzurePdwContentProvider_Error3: "Please enter User.",
            SqlAzurePdwContentProvider_Error4: "Please enter Password.",
            SqlAzurePdwContentProvider_Password: "Password:",
            SqlAzurePdwContentProvider_ServerName: "Server:",
            SqlAzurePdwContentProvider_Title: "Azure SQL Data Warehouse",
            SqlAzurePdwContentProvider_UserName: "User:",
            SqlAzurePdwontentProvider_Landing_ConnectButton: "Connect",
            ComboChart_ToolTip: "Combo Chart",
            Role_ComboChart_Category: "Shared Axis",
            Role_ComboChart_Series: "Column Series",
            Role_ComboChart_Y: "Column Values",
            Role_ComboChart_Y2: "Line Values",
            Dataset_Mashup_Desc_Marketo_0: "Marketo REST API endpoint",
            Dataset_Mashup_Name_Marketo_0: "Endpoint",
            TopNav_Download: "Download",
            TopNav_Feedback: "Feedback",
            TopNav_Help: "Help & Support",
            Tooltip_HighlightedValueDisplayName: "Highlighted",
            ReportAppBar_SwitchModeButton: "PRESENTATION MODE",
            SqlAzureDbContentProvider_Description5: "direct connect with Azure SQL Database",
            SqlAzurePdwContentProvider_Description4: "direct connect with Azure SQL Data Warehouse",
            MashupContentProvider_SQLDBAuditing_More2: " connecting to SQL Database Auditing data",
            MashupContentProvider_Moreabout: "More about",
            MashUpContentProvider_SQLDBAuditing_Description1: "Azure SQL Database Auditing",
            MashUpContentProvider_SQLDBAuditing_Description2: " tracks database events and writes audited events to an audit log in your Azure Storage account. Auditing is generally available for Basic, Standard, and Premium service tiers.",
            MashUpContentProvider_SQLDBAuditing_Description3: "This content pack can help maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            MashUpContentProvider_SQLDBAuditing_Description4: "The content pack imports data from all tables that contain “AuditLogs” in their name and append it to a single data model table named “AuditLogs”.",
            MashUpContentProvider_Twilio_Description1: "Visualize data from your Twilio account directly in Power BI. Connect using your Twilio credentials and immediately gain insights from your Twilio usage, such as your calls and messages over time, your most active Twilio phone numbers, amount of messages and calls sent and received and many more. A full dashboard will be created for you to monitor your data as well as a rich report to further explore your data.",
            MashUpContentProvider_Twilio_More2: " connecting to Twilio data",
            Publish_ChooseContentPackAccess: "Choose who will have access to this content pack:",
            Publish_ContentPack: "Publish Content Packs",
            Publish_ContentPackCancelButton: "Cancel",
            Publish_ContentPackName: "Name",
            Publish_ContentPackPublishButton: "Publish",
            Publish_ContentPackPublishedTo: "Published To",
            Publish_CreateContentPack: "Create Content Pack",
            Publish_DataAccessNotification: "The content pack will be available in your organization's content gallery.",
            Publish_DataAccessNotificationLink: "Learn more",
            Publish_DeleteContentPack: "Delete",
            Publish_Description: "Description",
            Publish_EditContentPack: "Edit",
            Publish_Group: "Specific Groups",
            Publish_Organization: "My Entire Organization",
            Publish_Title: "Title",
            Publish_ViewContentPack: "View Content Packs",
            TopNav_SettingsMenu_CreateContentPack: "Create Content Pack",
            Publish_DescriptionText: "This is the People View content pack created for anyone in the company and get business insights. If you need help, contact hrbisupport.com.",
            Publish_EnterTitleText: "People View",
            Publish_Dashboards: "Dashboards",
            TopNav_Settings: "Settings",
            Publish_Datasets: "Datasets",
            Publish_ImageText: "Image:",
            Publish_ItemsToPublish: "Select items to publish",
            Publish_Reports: "Reports",
            Publish_UpdateContentPackInfo: "You've made changes to a dashboard or report from this content pack that's published to 'My Entire Organization'. In order for others to see your changes, click here to update",
            Publish_UploadImage: "Upload",
            Publish_UploadText: "an image or company logo",
            Publish_UseDefaultImage: "Use Default",
            Publish_GroupsText: "Enter group names separated by ; or ,",
            GroupNavigationPaneContextMenuItem_Calendar: "Calendar",
            GroupNavigationPaneContextMenuItem_Conversations: "Conversations",
            GroupNavigationPaneContextMenuItem_EditGroup: "Edit Group",
            GroupNavigationPaneContextMenuItem_Files: "Files",
            GroupNavigationPaneContextMenuItem_LeaveGroup: "Leave Group",
            GroupNavigationPaneContextMenuItem_Members: "Members",
            GroupNavigationPaneContextMenuItem_Notebook: "Notebook",
            GroupNavigationPaneContextMenuItem_Subscribe: "Subscribe",
            Groups_LessButtonText: "Less",
            Groups_MoreButtonText: "More",
            NotificationMessage_ImportingPackage_AdditionalMessage: "This could take a little while.",
            GetData_Connect: "Connect",
            GetData_SelectAFileFromYourOneDrivePersonalAccount: "Select a file from your OneDrive Personal account",
            GetData_SignInToYourOneDrivePersonalAccount: "Sign in to your OneDrive personal account",
            GetData_Cancel: "Cancel",
            GetData_Uploading: "Uploading",
            GetData_SalesforceEmbeddedConfigurationDescription: "Get the most from your Salesforce data by letting Power BI build a custom dashboard. You also have the option to import your Salesforce reports.",
            GetData_SelectADashboardBasedOnYourRoleInYourOrganization: "Select a dashboard based on your role in your organization.",
            GetData_SelectYourSalesforceData: "Select Your Salesforce Data",
            GetData_SignInToYourSalesforceAccount: "Sign in to your Salesforce account",
            GetData_ConnectTo: "Connect to",
            GetData_DataInPowerBIFollowThePromptsBelow: "data in Power BI, follow the prompts below.",
            GetData_LearnMore: "Learn More",
            GetDataSeeMoreOptions: "See more options.",
            GetData_LearnToAddTileCategoryDescription: "Select your role within your organization to learn more about getting your data into Power BI.",
            GetData_ToStartUsingYour: "To start using your",
            MashUpContentProvider_AppFigures_Description1: "Connect and explore your appFigures data in Power BI. The out of box dashboard allows you to monitor and explore data about all your apps in a single place. For each app you can track the number of downloads, including how they’re being rated and which countries are using your app. You can also track in-app purchases and ad clicks, to fully understand the revenue from your apps.",
            MashUpContentProvider_AppFigures_More2: " connecting to appFigures data",
            GetData_ChooseDataSource: "Choose a Data Source",
            GetData_ConnectYourData: "Connect Your Data",
            GetData_Dashboard: "Dashboard",
            GetData_Files: "Files",
            GetData_FilesDesc: "Import data from Excel workbooks or Power BI Designer files.",
            GetData_Get: "Get",
            GetData_HelpfulLinks: "Explore other options:",
            GetData_AddYourContent: "Add Your Content",
            GetData_MyOrganization: "My Organization",
            GetData_Or: "or",
            GetData_Samples: "Samples",
            GetData_Services: "Services",
            GetData_ServicesDesc: "Connect to online services you use and we’ll create dashboards and reports for you.",
            GetData_ViewTutorial: "Tutorial",
            GetData_WelcomeDescLine1: "You’re on your way to exploring your data and monitoring what matters.",
            GetData_WelcomeDescLine2: "Let's start by getting some data.",
            GetData_WelcomeTitle: "Welcome to Power BI",
            GetData_MyOrganizationDesc: "Get content that other people in your organization have published.",
            GetData_ConnectData: "Connect your data",
            GetData_NeedHelpConnecting: "Need help connecting?",
            GetData_BigDataAndMore: "Databases & More",
            GetData_LearnToAddData: "Learn to Add Data",
            GetData_SubmitAnIdea: "Submit an Idea",
            GetData_DontSeeWhatYoureLookingFor: "Don't see what you're looking for?",
            GetData_ConnectToPartner: "Connect to a partner",
            GetData_ConnectToPartnerBlurb: "Don’t see the data you care most about in Power BI? We have a global network of Power BI partners ready to help. ",
            GetData_MyWorkspace: "My Workspace",
            GetData_GetData: "Get Data",
            GetData_MsftDigitalCrimesUnit: "The Digital Crimes Unit is an international legal and technical team working with partners, to help create a safe digital world. The DCU operates in conjunction with Internet Service Providers and Computer Emergency Response Teams to disrupt botnets from cybercriminals. These botnets can be involved in activities ranging from e-mail spam and click fraud to financial fraud and privacy invasion. This dashboard shows a summary of the calls that are made every day by devices still affected by several of the botnets that the Digital Crimes Unit has disrupted.",
            GetData_AzureSqlDatabaseWithLiveConnect: "Azure SQL Database is a fully managed relational database-as-a-service that makes tier-1 capabilities easily accessible. SQL Database supports massive scale-out, predictable performance, flexible manageability and includes built-in high availability and self-management for near-zero maintenance. With Power BI, you can create dynamic reports, mashups with data and metrics you already have in your Azure SQL Database.",
            GetData_AzureSqlDatawarehouseLiveConnect: "Gain immediate insights from your data using the elastic scale SQL Data Warehouse with direct connect. Seamlessly combine a petabyte or more of relational data with non-relational Hadoop data using Polybase for a full view of your data. To get started, simply click Connect.",
            GetData_BingNews: "Track the latest news headlines on your dashboard with Bing News and stay up to date with news for the topics that matter most to you. Provide the search terms for topics you want to track and add a news tiles to the currently selected dashboard. Clicking on the listed news headlines opens the original articles so you can read further.",
            GetData_GitHub: "Visualize different types of repository activity in Power BI by connecting to your GitHub data. With the GitHub content pack, you get a Power BI dashboard and reports with insights about how many commits, who contributes most, and at what time of day. Use the dashboard and reports as provided, or customize them to highlight the information you care about most.<br/><br/>The data in Power BI is updated daily from GitHub according to a schedule that you control.",
            GetData_GoogleAnalytics: "Visualize data from your Google Analytics account directly in Power BI. Gain insights from the sites that you’re tracking, such as the site traffic over the last 30 days, or the days of the week when your site is most popular. The content pack includes data from the last 180 days. Use the reports that Power BI creates as is, or customize them for the metrics important to you.",
            GetData_HideDetails: "Hide details.",
            GetData_Marketo: "Bring rich marketing analytics directly into Power BI with the Marketo content pack. Your Marketo dashboards and reports in Power BI provide rich insights into your buyer profiles, marketing campaign success rates, email engagement, and more. Use the dashboard and reports as provided, or customize them to highlight the information you care about most.",
            GetData_MicrosoftDynamicsCrm: "Connect to your Microsoft Dynamics CRM account for access to insights about your opportunities, accounts, and more. This content pack is designed specifically for sales managers, providing details on sales performance, pipeline, and activities. The dashboard and report are built on top of a fully featured model, so you can explore and analyze your data as you need.",
            GetData_MicrosoftDynamicsMarketing: "With the Microsoft Dynamics Marketing content pack for Power BI, quickly build your marketing performance analytics. The content pack is designed specifically for marketing managers who focus on demand generation. Its components draw directly from your marketing database to provide reports on marketing contacts, lead pipeline, segment analysis, and more. Power BI automatically creates reports and dashboards that give you a great starting point for exploring and analyzing your marketing data.",
            GetData_MsftItNewTechnologyAdoption: "This dashboard and report provides a glimpse into the complexity of adopting the latest technologies across more than 50k servers across the world, managed by IT to run the Application Portfolios that Microsoft employees use every day. These technologies span OnPrem, Azure (IaaS & PaaS), Cloud SaaS, Marketplaces, and modern UIs (across phones, tablets, and the browser). You can explore the data model and add your own analytic charts while you explore for insights. The data refreshes daily.",
            GetData_MsftPeopleView: "People View provides a collection of data, reports and a dashboard around people at Microsoft, including such topics as Headcount, Average Directs and Anniversaries. From the dashboard, you can explore the underlying data model and add new interesting visuals while you gain deeper insights. The data refreshes daily.",
            GetData_MsftWindowsUservoice: "This dashboard provides a quick and up-to-date view of the total users, suggestions and votes for both Windows and Windows Phone UserVoice.  It also lists the top categories, trends in suggestions, votes and comments, during any given period of time.  The data refreshes daily.  This is for internal Microsoft use only and cannot be shared outside of Microsoft without written approval from OSG. For more information, please contact winuservoice@microsoft.com.",
            GetData_QuickbooksOnline: "Get insights into your business by connecting to QuickBooks Online with this Power BI content pack. With your QuickBooks Online admin credentials, Power BI automatically creates a dashboard with insights into your business cash flow, profitability, customers, and more. Use the default dashboard and reports, or customize them to highlight the information you care about most.",
            GetData_Salesforce: "Import and analyze your Salesforce data in Power BI. After connecting to your Salesforce account, you import a variety of data to explore and monitor in your Power BI dashboards. Based on the persona you select, Power BI automatically creates a dashboard with customized visualizations of your data.",
            GetData_SeeDetails: "See details.",
            GetData_Sendgrid: "With the SendGrid content pack, monitor all your important email metrics in one dashboard using Power BI. Drill into detailed reports that you can customize as needed. With SendGrid advanced statistics enabled, monitor your most important metrics at a glance and measure user engagement for the emails you send.",
            GetData_SqlServerAnalysisServices: "With Power BI, you can create dynamic reports and mashups with data and metrics you already have in your on-premises SQL Server Analysis Services solutions. To get started, click Connect, select a server, then select a data model.<br/><br/>Supported Analysis Services Servers:<br/>	- SQL Server 2012 and later Analysis Services Tabular models",
            GetData_VisualStudioOnline: "Visualize your source code activity in Power BI by connecting to Microsoft Visual Studio Online. The Power BI content pack automatically creates a dashboard and report with at-a-glance views of Git, pull request, and version control activity across the projects you configure for your account.  You can customize the dashboard and report to highlight the deeper insights you care about most.<br/><br/>The data that appears in Power BI will be updated from Microsoft Visual Studio Online according to a schedule that you control.",
            GetData_Zendesk: "Analyze your Zendesk data in Power BI with the Zendesk content pack. Connect with your Zendesk admin account credentials, and Power BI creates a dashboard with reports that provide insights about your ticket volumes and agent performance. Use the dashboard and reports provided, or customize them to highlight the information you care about most.",
            GetData_Appfigures: "Connect and explore your appFigures data in Power BI. The appFigures content pack automatically creates a dashboard where you can monitor and explore data about all your apps in a single place. For each app you can track the number of downloads, including how they’re being rated and which countries are using your app. You can also track in-app purchases and ad clicks, to fully understand the revenue from your apps.",
            GetData_SqlDbAuditing: "Azure SQL Database Auditing tracks database events and writes audited events to an audit log in your Azure Storage account. The Power BI content pack reports over the audit log data, and can help you maintain regulatory compliance and understand database activity. Gain insights into discrepancies and anomalies that could indicate business concerns or suspected security violations,  using the dashboard and reports that Power BI creates automatically.",
            GetData_Twilio: "Visualize data from your Twilio account directly in Power BI. Connect using your Twilio credentials and immediately gain insights from your Twilio usage, such as your calls and messages over time, your most active Twilio phone numbers, amount of messages and calls sent and received and much more. The Power BI content pack creates a full dashboard for you to monitor your data, plus a rich report to explore your data further.",
            GetData_NoSearchResultsFound: "No search results found.",
            GetData_CustomerProfitabilitySample: "This industry sample dashboard and underlying report analyze a company that manufactures marketing materials. This dashboard was created by a CFO to see key metrics about her 5 business unit managers (aka executives), products, customers, and gross margins (GM). At a glance she can see what factors are impacting profitability. This is real data from obviEnce (www.obvience.com) that has been anonymized.",
            GetData_HumanResourcesSample: "This industry sample dashboard and underlying report analyze HR information. The HR department has the same reporting model across different companies, even when they differ by industry or size. This sample looks at new hires, active employees, and employees who left and tries to uncover any trends in the hiring strategy. Our main objectives are to understand who we hire, biases in our hiring strategy, and trends in voluntary separations. This is real data from obviEnce (www.obvience.com) that has been anonymized.",
            GetData_ITSpendAnalysisSample: "This industry sample dashboard and underlying report analyze the planned vs. actual costs of the IT department of a company. This comparison helps us understand how well the company planned for the year and allows us to investigate areas with huge deviations from the plan. The company in this example goes through a yearly planning cycle, and then quarterly it produces a new Latest Estimate (LE) to help analyze changes in IT spend over the fiscal year. This is real data from obviEnce (www.obvience.com) that has been anonymized.",
            GetData_OpportunityAnalysisSample: "This industry sample dashboard and underlying report analyze a software company that has 2 sales channels: direct and partner. The Sales Manager created this dashboard to track opportunities and revenue by region, deal size, and channel. The Sales Manager relies on 2 measures of revenue, revenue and factored revenue. Revenue is a salesperson’s estimate of what the company’s revenue will be. Factored Revenue is calculated as Revenue X Probability % and is generally accepted as being a more-accurate predictor of actual sales revenue. Probability is determined by the deal’s current Sales Stage. This is real data from obviEnce (www.obvience.com) that has been anonymized.",
            GetData_ProcurementAnalysisSample: "This industry sample dashboard and underlying report analyze a manufacturing company’s spending on vendors by category and location, and lets us explore the following areas: who the top vendors are, what categories we spend most on, which vendors give us the highest discount, and when those discounts occur. This is real data from obviEnce (www.obvience.com) that has been anonymized.",
            GetData_Retail_Analysis_Sample: "This industry sample dashboard and underlying report analyzes retail sales data of items sold across multiple stores and districts. The metrics compare this year's performance to last year's in sales, units, gross margin, and variance, as well as new store analysis. This is real data from obviEnce (www.obvience.com) that has been anonymized.",
            GetData_SalesAndMarketingSample: "This industry sample dashboard and underlying report analyze a manufacturing company named VanArsdel Ltd. This dashboard was created by the VanArsdel Chief Marketing Officer (CMO) to keep an eye on the industry and his company’s market share, product volume, sales, and sentiment. This is real data from obviEnce (www.obvience.com) that has been anonymized.",
            GetData_SupplierQualityAnalysisSample: "This industry sample dashboard and underlying report focus on one of the typical supply chain challenges — supplier quality analysis. Two primary metrics are at play in this analysis: total number of defects and the total downtime that these defects caused. This sample has two main objectives. The first is to understand who the best and worst suppliers are, with respect to quality. The second is to identify which plants do a better job finding and rejecting defects, to minimize downtime. This is real data from obviEnce (www.obvience.com) that has been anonymized.",
            ToggleSwitchOff: "Off",
            ToggleSwitchOn: "On",
            NavigationPane_GroupsTitle_CreateGroup: "CREATE A GROUP",
            Visual_DisplayUnits: "Display Units",
            Visual_LabelsFill: "Color",
            Visual_DataPointsLabels: "Data Points Labels",
            Visual_Precision: "Precision",
            Visual_Position: "Position",
            Role_DisplayName_Gradient: "Gradient",
            Visual_Gradient: "Gradient",
            Visual_Axis_End: "End",
            Visual_Axis_Intersection: "Intersection",
            Visual_Axis_Start: "Start",
            Visual_Axis_Style: "Style",
            Visual_Axis_Title: "Title",
            Visual_Axis_Type: "Type",
            Visual_Axis_Scalar: "Continuous",
            Visual_Axis_Categorical: "Categorical",
            Visual_CategoryLabels: "Category Labels",
            Visual_Axis_ShowBoth: "Show Both",
            Visual_Axis_ShowTitleOnly: "Show title only",
            Visual_Background: "Background",
            Visual_Background_Color: "Color",
            Visual_Background_Transparency: "Transparency",
            Visual_DataPoint_Show_All: "Show All",
            Visual_LegendShowTitle: "Title",
            Visual_LegendTitleText: "Text",
            Visual_RevertToDefault: "Revert To Default",
            Visual_Title: "Title",
            Visual_Title_Alignment: "Alignment",
            Visual_Title_BackgroundColor: "Background Color",
            Visual_Title_FontColor: "Font Color",
            Visual_Title_Text: "Text",
            Visual_XAxis: "X-Axis",
            Visual_YAxis: "Y-Axis",
            Visual_YAxis_ColumnTitle: "Y-Axis (Column)",
            Visual_YAxis_LineTitle: "Y-Axis (Line)",
            Visual_YAxis_Position: "Position",
            Visual_YAxis_ShowSecondery: "Show Secondery",
            ColorPicker_CustomColor: "Custom color",
            ColorPicker_RecentColors: "Recent Colors",
            ColorPicker_RevertToDefault: "Revert to default",
            ColorPicker_ThemeColors: "Theme Colors",
            ColorWheel_Cancel: "Cancel",
            Publish_ContentPackActions: "Actions",
            Publish_ContentPackDatePublished: "Date Published",
            Publish_ViewContentPacks: "View Content Packs",
            TopNav_SettingsMenu_ViewContentPack: "View Content Pack",
            TaskPane_Toggle: "Toggle Task Pane",
            VisualizationPane_Toggle: "Toggle Visualization Pane",
            MashUpContentProvider_MailChimp_Description1: "Use MailChimp’s analytics to quickly identify trends within your campaigns, reports, and individual subscribers. Find out who your most engaged subscribers are, which countries open the most campaigns, or how trends have changed over time. Power BI lets users drill down into their MailChimp data without any coding knowledge, and automatic data updates help you make the most informed decisions possible.",
            MashUpContentProvider_MailChimp_More2: " connecting to MailChimp data",
            MashUpContentProvider_SQLSentry_Bullet1: "Server Health",
            MashUpContentProvider_SQLSentry_Bullet2: "Server Availability",
            MashUpContentProvider_SQLSentry_Bullet3: "Disk Utilization",
            MashUpContentProvider_SQLSentry_Bullet4: "CPU Utilization",
            MashUpContentProvider_SQLSentry_Bullet5: "Memory Utilization",
            MashUpContentProvider_SQLSentry_Description1: "Use Power BI to analyze and share performance and operational data collected by SQL Sentry. Get insights into the health of your SQL Server and Windows environment. This content pack includes powerful visualizations to help you to better evaluate and manage resources for several key areas, including:",
            MashUpContentProvider_SQLSentry_Description2: "To use this dashboard, you must have SQL Sentry installed and monitoring at least one server, and cloud synchronization must be enabled.",
            MashUpContentProvider_SQLSentry_More2: " connecting to SQL Sentry data to the cloud",
            QuotaManagement_FreeUser: "Free User",
            QuotaManagement_ManageAccount: "Manage Account",
            QuotaManagement_ModelAssociatedWith: "Associated With",
            QuotaManagement_ModelLastRefreshedTime: "Last Refreshed",
            QuotaManagement_ModelName: "Name",
            QuotaManagement_ModelSize: "Size",
            QuotaManagement_ModelType: "Type",
            QuotaManagement_ModelType_Report: "Report",
            QuotaManagement_ModelType_Dataset: "Dataset",
            QuotaManagement_OwnedByMe: "Owned By Me",
            QuotaManagement_OwnedByOthers: "Owned By Others",
            QuotaManagement_OwnedByUs: "Owned By Us",
            QuotaManagement_PaidUser: "Paid User",
            QuotaManagement_UpgradeAccount: "Upgrade Account",
            QuotaManagement_ManageStorage: "Manage Storage",
            QuotaManagement_ManagePersonalStorage: "Manage Personal Storage",
            QuotaManagement_ManageGroupStorage: "Manage Group Storage",
            QuotaManagement_AssociatedDashboards: "Associated Dashboards",
            QuotaManagement_AssociatedReports: "Associated Reports",
            QuotaManagement_AssociatedWorkbooks: "Associated Workbooks",
            QuotaManagement_DeleteButtonText: "Delete",
            QuotaManagement_DeleteConfirmationTitle: "Delete Item",
            QuotaManagement_DeleteConfirmationMessage: "Are you sure you want to delete this item? This action may affect some of your dashboards and reports, and anyone with whom those dashboards and reports are shared.",
            QuotaManagement_RemoveConfirmationTitle: "Remove Item",
            QuotaManagement_RemoveConfirmationMessage: "Are you sure you want to remove the link to this item? This action may affect some of your dashboards, reports, and shared datasets.",
            QuotaExceedDialogButtonText_DismissMessage: "Dismiss Message",
            QuotaExceedDialogButtonText_ManageAccount: "Manage Account",
            QuotaExceedDialogButtonText_ManageStorage: "Manage Storage",
            QuotaExceedDialogButtonText_UpgradeAccount: "Upgrade Account",
            QuotaExceedDialogTitle: "Over your storage limit",
            QuotaExceedDialogMessage_FreeUser: "You are over your storage limit. To get data, pin tiles or share your dashboards, upgrade your account to Power BI Pro or manage your storage.",
            QuotaExceedDialogMessage_TrialAndPaidUser: "You are over your storage limit. To get data, pin tiles or share your dashboards, you need to manage your storage.",
            QuotaExceedBannerMessage_FreeUser: "You are over your storage limit. To get data or share your dashboards, upgrade your account to Power BI Pro or manage your storage.",
            QuotaExceedBannerMessage_TrialAndPaidUser: "You are over your storage limit. To get data or share your dashboards, you need to manage your storage.",
            QuotaManagement_UsageDescription: "{0} of {1} used",
            QuotaManagement_CancelButtonText: "Cancel",
            QuotaManagement_RemoveButtonText: "Remove",
            QuotaUsage_SizeInMB: "{0} MB",
            QuotaUsage_SizeInGB: "{0} GB",
            InfoNav_SourceLabel: "Source: {0}",
            UserMetadata_FailedRefresh: "We failed to refresh user metadata. Please try again later.",
            Visual_DefaultColor: "Default Color",
            FieldListMenuItem_NewColumn: "New Column",
            FieldListMenuItem_NewMeasure: "New Measure",
            Visual_ColumnTotals: "Column Totals",
            Visual_General: "General",
            Visual_RowTotals: "Row Totals",
            Visual_Totals: "Totals",
            NavigationPane_ExcelWorkbook: "Excel Workbook",
            WorkbookContextMenu_Edit: "EDIT",
            WorkbookContextMenu_RefreshNow: "REFRESH NOW",
            WorkbookContextMenu_Remove: "REMOVE",
            WorkbookContextMenu_Rename: "RENAME",
            WorkbookContextMenu_ScheduleRefresh: "SCHEDULE REFRESH",
            WorkbookContextMenu_View: "VIEW",
            WorkbookReadyNotificationTitle: "Your workbook is ready",
            WorkbookReadyNotificationMessage: "Your Excel workbook is now in your list of reports. Take a look: {0}",
            UpgradeDialogButtonText_Trial: "Try Power BI Pro",
            UpgradeDialogButtonText_UpgradeAccount: "Upgrade Account",
            UpgradeDialogMessage: "Want to use Power BI with {0}? Try Power BI Pro for free or upgrade your account today.",
            UpgradeDialogTitle: "Need Power BI Pro for {0}",
            UpgradeReasonText_Groups: "Groups",
            ServiceError_CannotLoadVisual: "Can't display this visual.",
            ServiceError_ExecuteSemanticQueryErrorKey: "Can't display this visual",
            ServiceError_ExecuteSemanticQueryErrorValue: "Couldn’t retrieve the data for this visual. Please try again later.",
            ServiceError_ExecuteSemanticQueryInvalidStreamFormatKey: "Can't display this visual",
            ServiceError_ExecuteSemanticQueryInvalidStreamFormatValue: "Power BI couldn’t load the data for this visual because it isn’t in the right format. Please contact the dashboard owner.",
            ServiceError_GeneralError: "An unexpected error occurred.",
            ServiceError_GeneralErrorKey: "An unexpected error occurred",
            ServiceError_GeneralErrorValue: "An unexpected error occurred. Please try again later.",
            ServiceError_ModelCannotLoad: "Couldn’t load the model schema.",
            ServiceError_ModelConvertFailureKey: "Internal error prevented loading the schema",
            ServiceError_ModelConvertFailureValue: "An internal error prevented loading the model schema associated with this report. Please try again later. If the issue persists, contact Power BI support.",
            ServiceError_ModelCreationFailureKey: "Internal error prevented preparing the schema",
            ServiceError_ModelCreationFailureValue: "An internal error prevented preparing the model schema associated with this report. Please try again later. If the issue persists, contact Power BI support.",
            ServiceError_ModelFetchingFailureKey: "Couldn’t load the schema for the database model",
            ServiceError_ModelFetchingFailureValue: "Couldn’t load the model schema associated with this report. Make sure you have a connection to the server, and try again.",
            VisualContainer_FailedToLoadVisual: "Can't display this visual.",
            VisualContainer_ShowErrorDetails: "See details",
            ClientError_UnknownClientErrorKey: "Unknown error",
            ClientError_UnknownClientErrorValue: "An unexpected script error occurred.",
            VisualContainer_UnableToFindVisualValue: "Support for this type of visual is coming soon.",
            DsrError_LoadingModelKey: "The model could not be loaded",
            DsrError_InvalidDataShapeValue: "Data shapes must contain at least one group or calculation that outputs data. Please contact the dashboard owner.",
            DsrError_InvalidUnconstrainedJoinKey: "Can’t determine relationships between the fields",
            DsrError_InvalidUnconstrainedJoinValue: "Can’t display the data because Power BI can’t determine the relationship between two or more fields.",
            DsrError_Key: "Couldn't load the data for this visual",
            DsrError_LoadingModelValue: "Power BI encountered an unexpected error while loading the model. Please try again later.",
            DsrError_Message: "Can't display the visual.",
            DsrError_ModelGroupingInstructionsIgnoredKey: "Model grouping instructions ignored",
            DsrError_ModelGroupingInstructionsIgnoredValue: "The groups on a key should be grouped on another field.",
            DsrError_ModelUnavailableValue: "Couldn’t retrieve the data model. Please contact the dashboard owner to make sure the data sources and model exist and are accessible.",
            DsrError_MoreInfo: "More Details",
            DsrError_OverlappingKeysKey: "Data in the visual is structured incorrectly",
            DsrError_OverlappingKeysValue: "The groups in the primary axis and the secondary axis overlap. Groups in the primary axis can’t have the same keys as groups in the secondary axis.",
            DsrError_SuppressJoinPredicateValue: "The column included in the join predicate must refer to a measure. Please contact the dashboard owner.",
            DsrError_UnknownErrorValue: "Couldn’t retrieve the data for this visual. Please try again later.",
            Publish_DescriptionSizeExceeded: "Description is too long",
            Publish_GroupAddressExceeded: "You can only publish to {maxGroups} groups at a time, please remove some",
            Publish_InvalidEntry: "Invalid entry",
            Publish_NoGroupAddressSpecified: "Please specify one or more group addresses",
            Publish_TitleSizeExceeded: "Title is too long",
            Publish_WrongGrouplAddresses: "Invalid list of group addresses. Please correct them",
            Visual_LegendPosition_Bottom: "Bottom",
            Visual_LegendPosition_Left: "Left",
            Visual_LegendPosition_Right: "Right",
            Visual_LegendPosition_Top: "Top",
            Visual_yAxis_Left: "Left",
            Visual_yAxis_Right: "Right",
            DashboardReadOnly_Tooltip: "This is a read-only dashboard",
            GetData_BrowserPopUpDisabled: "Browser pop-up is disabled. Please verify browser settings.",
            GetData_AuthenticationError_Title: "Failed to show authentication dialog",
            GetData_OK: "OK",
            GetData_UnableToRetrieveTheAuthenticationEndpoint: "Unable to retrieve the authentication endpoint",
            GetData_Zendesk_FinePrint: "Your data in the Zendesk service is transmitted to Power BI so that you can perform business analytics.",
            DataDotClusteredColumnComboChart_ToolTip: "Data-Dot and Clustered Column Chart",
            DataDotStackedColumnComboChart_ToolTip: "Data-Dot and Stacked Column Chart",
            Visual_DisplayUnits_Auto: "Auto",
            Visual_LabelPosition_BottomCenter: "Bottom Center",
            Visual_LabelPosition_BottomLeft: "Bottom Left",
            Visual_LabelPosition_BottomRight: "Bottom Right",
            Visual_LabelPosition_InsideBase: "Inside Base",
            Visual_LabelPosition_InsideCenter: "Inside Center",
            Visual_LabelPosition_InsideEnd: "Inside End",
            Visual_LabelPosition_MiddleCenter: "Middle Center",
            Visual_LabelPosition_MiddleLeft: "Middle Left",
            Visual_LabelPosition_MiddleRight: "Middle Right",
            Visual_LabelPosition_OutsideBase: "Outside Base",
            Visual_LabelPosition_OutsideEnd: "Outside End",
            Visual_LabelPosition_TopCenter: "Top Center",
            Visual_LabelPosition_TopLeft: "Top Left",
            Visual_LabelPosition_TopRight: "Top Right",
            Visual_DisplayUnits_Billions: "B",
            Visual_DisplayUnits_Millions: "M",
            Visual_DisplayUnits_Thousands: "K",
            Visual_Card_Placeholder_Auto: "Automatic",
            AreaChart_ToolTip: "Area Chart",
            VisualContainer_UnableToFindVisualMessage: "This visual type is not yet supported.",
            Waterfall_DecreaseLabel: "Decrease",
            Waterfall_IncreaseLabel: "Increase",
            Waterfall_SentimentColors: "Sentiment Colors",
            GetData_StatsNFL2014SeasonRecap: "Explore statistics from National Football League regular season and playoff games for the 2014 season. Statistics and key measures are provided game by game for each team and player, with additional data for fan attendance, game day weather, and player backgrounds.<br>This copy of the sample is yours to experiment with. You can always connect to the sample again for a fresh copy.",
            ExploreCompatibility_ToggleExplore: "Explore the new Power BI report canvas",
            ExploreCompatibility_ToggleLegacy: "Go back to classic report",
            ExploreCompatibility_WarnMessage: 'Would you like to keep a copy of your report in the classic format? Selecting "No" will overwrite the file and you will be unable to go back.',
            ExploreCompatibility_WarnTitle: "You're about to save your report in the new format",
            ExploreCompatibility_PromptMessageLegacy: "Power BI is changing the way you view, interact with and create reports. Please {0}send us feedback{1} about the new experience.",
            ExploreCompatibility_PromptTitleLegacy: "New Power BI report canvas",
            ExploreCompatibility_TryNow: "Try it now",
            MashUpContentProvider_UserVoice_Description1: "Monitor and explore your UserVoice data in Power BI by simply connecting to UserVoice using your admin credentials. With Power BI, you will have your tickets, suggestions and user satisfaction data right at your fingertips. Use the dashboard and reports that are readily available for you to analyze your data, or customize your own to highlight the information you care about most. Power BI will refresh your User Voice data daily so your dashboards and reports are always up to date.",
            MashUpContentProvider_UserVoice_More2: " connecting to UserVoice data",
            GetData_Mailchimp: "With the MailChimp content pack for Power BI, quickly identify trends within your campaigns, reports, and individual subscribers. Find out who your most engaged subscribers are, which countries open the most campaigns, or how trends have changed over time. Drill down into your MailChimp data in Power BI without any coding knowledge. Automatic data updates help you make the most timely decisions.",
            FilledMap_ToolTip: "Filled Map",
            Visual_Gradient_Diverging: "Diverging",
            Visual_Gradient_MaxColor: "Maximum",
            Visual_Gradient_MaxValue: "Maximum",
            Visual_Gradient_MidColor: "Center",
            Visual_Gradient_MidValue: "Center",
            Visual_Gradient_MinColor: "Minimum",
            Visual_Gradient_MinValue: "Minimum",
            DonutChart_ToolTip: "Donut Chart",
            MashUpContentProvider_SweetIQ_Description1: "Easily track and analyze your local search ecosystem with the SweetIQ Power BI connector. Log in with your SweetIQ account to review search listings for all of your locations as well as analyze and monitor customer reviews. Use the dashboard and reports provided, or customize them to highlight the information you care about most. Data is automatically updated daily with the latest from SweetIQ based on a schedule that you set.",
            MashUpContentProvider_SweetIQ_More2: " connecting to SweetIQ data",
            DirectQueryContentProvider_Error1: "Please enter Server.",
            DirectQueryContentProvider_Error2: "Please enter Database.",
            DirectQueryContentProvider_Error3: "Please enter User.",
            DirectQueryContentProvider_Error4: "Please enter Password.",
            DirectQueryContentProvider_Error5: "Refresh Interval cannot be less than 15 minutes",
            DirectQueryContentProvider_InvalidConnectionString: "We are unable to establish connection, please check connection information.",
            DirectQueryContentProvider_UnableToReachService: "We are unable to reach our service to perform test connection, please retry.",
            DirectQueryContentProvider_RefreshInterval: "Refresh Interval in Minutes:",
            SettingsDataset_DisableEntireRefreshPageErrorMessage_DirectQueryScheduleInfo: "This dataset connects to a source with direct connect which is always up-to-date. You do not have to schedule a refresh on this dataset.",
            SettingsWorkbook_NoModel_workbookIsUpToDate: "This workbook is always up-to-date.",
            LineClusteredColumnComboChart_ToolTip: "Line and Clustered Column Chart",
            LineStackedColumnComboChart_ToolTip: "Line and Stacked Column Chart",
            ReportAppBar_InsertTextboxButton: "Insert Textbox",
            GetData_SweetIQ: "Easily track and analyze your local search ecosystem with the SweetIQ Power BI connector. Log in with your SweetIQ account to review search listings for all of your locations as well as analyze and monitor customer reviews. Use the dashboard and reports provided, or customize them to highlight the information you care about most. Data is automatically updated daily with the latest from SweetIQ based on a schedule that you set.",
            GetData_Acumatica: "Connecting to Acumatica directly from Power BI allows you to access powerful business insights. Log in to Power BI using Acumatica ERP credentials, and build valuable insights into the opportunity pipeline, opportunities in various stages, and opportunities won and lost. The out-of-the-box dashboard provides a set of views and this can be fully customized. You can ask a question about the data in Q&A, or click a tile to open the underlying report and change the tiles in the dashboard. Acumatica will continue to release additional dashboards for leads, support analysis, financials and more.",
            Clear: "Clear",
            DsrLimitWarning_RepresentativeSampleKey: "Showing representative sample.",
            DsrLimitWarning_RepresentativeSampleMessage: "Showing representative sample.",
            DsrLimitWarning_RepresentativeSampleVal: "Too many '{0}' values. Showing a representative sample. Filter the data or choose another field.",
            DsrLimitWarning_RepresentativeSampleValMultipleColumns: "Showing representative sample. Filter the data or choose another field.",
            DsrLimitWarning_TooMuchDataKey: "Too many values",
            DsrLimitWarning_TooMuchDataMessage: "Too many values. Not showing all data.",
            DsrLimitWarning_TooMuchDataVal: "Too many '{0}' values. Not displaying all data. Filter the data or choose another field.",
            DsrLimitWarning_TooMuchDataValMultipleColumns: "Too many values. Not showing all data. Filter the data or choose another field.",
            GroupEditor_DiscardButton_Text: "Discard",
            GroupEditor_SaveButton_Text: "Save",
            GroupEditor_Title_CreateGroup: "Create a Group",
            GroupEditor_Title_EditGroup: "Edit Group",
            GroupEditor_GroupNameLabel_Text_CreateGroup: "Name your group",
            GroupEditor_GroupNameLabel_Text_EditViewGroup: "Name",
            GroupEditor_PrivacyLabel_Text: "Privacy",
            GroupEditor_PrivacyOptions_Private: "Private - Only approved members can see what's inside",
            GroupEditor_PrivacyOptions_Public: "Public - Anyone can see what's inside",
            GroupEditor_AddGroupMembersLabel_Text: "Add group members",
            GroupEditor_AddButton_Text: "Add",
            GroupEditor_GroupIdLabel_Text: "Group ID",
            GroupEditor_CreateGroup_GroupId_Available_Text: "Available",
            GroupEditor_CreateGroup_GroupId_NotAvailable_Text: "Not available; please edit",
            EmailsListPlaceholder: "Enter email addresses separated by ; or ,",
            EmailsList_EmailAddressExceeded: "You can only email {{maxEmails}} contacts at a time, please remove some.",
            EmailsList_EmailDomainNotInTenant: "One or more email addresses are outside your organization: {{invalidDomains}}",
            EmailsList_FailureToValidateEmailsDomains_Message: "Couldn't validate the domains for these email addresses",
            EmailsList_FailureToValidateEmailsDomains_Title: "Couldn't validate",
            EmailsList_NoEmailAddressSpecified: "Specify at least one email address",
            EmailsList_WrongEmailAddresses: "These email addresses aren’t valid: {0}",
            GroupEditor_CreateGroup_GroupId_GroupIdEditing_NotAvailable_Text: "Not available",
            GroupEditor_CreateGroup_GroupId_HasInvalidCharacters: "The Group ID can't contain symbols",
            GroupEditor_AreYouSureYouWantToDiscard_Message: "Your changes will be lost.",
            GroupEditor_AreYouSureYouWantToDiscard_Title: "Are you sure you want to leave Group Editor?",
            GroupEditor_DeleteGroup_Text: "Delete Group",
            ServerError_PersonalGateway_DataSourceErrorLabel: "Data Source Error",
            ServerError_PersonalGateway_LongMessage_DataSource_Inaccessible: "Last refresh attempt failed. Cannot connect to the data source. Ensure the data source is accessible.",
            ServerError_PersonalGateway_LongMessage_DataSource_InvalidCredential: "Last refresh attempt failed. The data source has invalid credentials. Update the credentials & also ensure the rest of the data sources in the dataset have valid credentials.",
            ServerError_PersonalGateway_LongMessage_DataSource_MissingProvider: "Last refresh attempt failed. The right data provider must be installed on the computer on which the gateway is installed.",
            ServerError_PersonalGateway_LongMessage_Gateway_Offline: "Last refresh attempt failed. Your gateway is offline or could not be reached. Ensure the computer on which the gateway is installed is not switched off during the scheduled refresh period.",
            ServerError_PersonalGateway_LongMessage_Gateway_OfflineNonAdminUser: "Last refresh attempt failed. Your gateway is offline or could not be reached. Ensure the computer on which the gateway is installed is not switched off or logged off during the scheduled refresh period.",
            ServerError_PersonalGateway_LongMessage_Gateway_WindowsCredentialError: "Last refresh attempt failed. Power BI Personal Gateway cannot connect due to invalid windows credentials. Go to the machine where gateway was installed and update the windows credentials in the gateway. You can find the gateway in the tray or can search for 'Power BI Gateway' on your computer.",
            ServerError_PersonalGateway_LongMessage_ProcessingError: "Error during processing the data in the dataset",
            ServerError_PersonalGateway_LongMessage_ServiceError: "Last refresh attempt failed. An unexpected error happened in the service that prevented the refresh.",
            ServerError_PersonalGateway_ProcessingErrorLabel: "Processing Error",
            ServerError_PersonalGateway_ShortMessage_DataSource_Inaccessible: "Last refresh attempt failed. Cannot connect to the data source.",
            ServerError_PersonalGateway_ShortMessage_DataSource_InvalidCredential: "Last refresh attempt failed. Cannot connect to the data source.",
            ServerError_PersonalGateway_ShortMessage_DataSource_MissingProvider: "Last refresh attempt failed.",
            ServerError_PersonalGateway_ShortMessage_Gateway_Offline: "Last refresh attempt failed. Your gateway is offline or could not be reached.",
            ServerError_PersonalGateway_ShortMessage_Gateway_OfflineNonAdminUser: "Last refresh attempt failed. Your gateway is offline or could not be reached.",
            ServerError_PersonalGateway_ShortMessage_Gateway_WindowsCredentialError: "Last refresh attempt failed. Power BI Personal Gateway cannot start due to invalid windows credentials.",
            ServerError_PersonalGateway_ShortMessage_ProcessingError: "Error during processing the data in the dataset",
            ServerError_PersonalGateway_ShortMessage_ServiceError: "Last refresh attempt failed. Internal service error.",
            NavigationPane_ArchivedContent: "Archived Content",
            TutorialPopup_ViewArchivedContentText: "To view and interact with your archived content click on the button below.",
            TutorialPopup_ViewArchivedContentTitle: "View archived content",
            TutorialPopup_WelcomeArchivedContentGoingForward: "Going forward, create and share content in this new space managed by your administrator.",
            TutorialPopup_WelcomeArchivedContentLearnMoreLinkText: "Learn more about archived Power BI content",
            TutorialPopup_WelcomeArchivedContentParagraphOne: "An administrator has started managing Power BI for users at your organization. A new space has been created for all of your business data so it can be securely stored and shared with others in your organization.",
            TutorialPopup_WelcomeArchivedContentParagraphTwo: "As a part of this transition, we have archived all of the Power BI content you created before your administrator started managing Power BI. You can click the Archived Content button to view this  archive at any time. Data in your archive will continue to refresh. You and any existing users that your content is shared with will be able to continue viewing dashboards and reports. However, you can’t share your archived content with new users in your organization.",
            TutorialPopup_WelcomeArchivedContentTitle: "Say hello to the new Power BI for your organization",
            TutorialPopup_ArchivedContentText: "Your previously acquired content.",
            TutorialPopup_ArchivedContentTitle: "Archived<br/>Content",
            TutorialPopup_ForYourOrganizationText: "New content you create and share with others.",
            TutorialPopup_ForYourOrganizationTitle: "Power BI for your organization",
            ArchivedContent_BackToPowerBI: "Back to Power BI",
            ArchivedContent_HeaderLinkText: "Learn More",
            ArchivedContent_HeaderMessage: "This is your archived content. Some features, like sharing and access on mobile devices, are disabled.",
            ArchivedContent_ErrorMessageGroup: "Creating a group is not supported while you are in your archived content. Go back to Power BI to create a group with others in your organization.",
            ArchivedContent_ErrorMessageOneDrivePro: "OneDrive for Business is not supported while you are in your archived content. Go back to PowerBI to connect to your OneDrive for Business account.",
            ArchivedContent_ErrorMessageSharing: "Sharing with other members of your organization is not supported while you are in your archived content. Go to back to Power BI to share work.",
            ArchivedContent_ErrorOptionOneText: "Go back to Power BI",
            ArchivedContent_ErrorOptionTwoText: "Stay in Archived Content",
            ArchivedContent_ErrorTitle: "You're in Archived Content",
            CloseAccount_Description: "Didn't mean to close your account?",
            CloseAccount_ReopenYourAccount: "Reopen your account",
            CloseAccount_YourAccountIsClosed: "Your account is closed.",
            GetData_FindAPartner: "Find a Partner",
            Groups_Splash_Description1: "You're on your way to exploring your data and monitoring what matters with all your group members.",
            Groups_Splash_Description2: "Let's start by getting some data.",
            Groups_Splash_Title: "Welcome to the {0} group",
            GroupEditor_Email_Address_DoNotExist: "These email addresses don’t exist in your organization: {0}",
            GroupEditor_Email_Address_DoNotExistOrNotPowerBiUsers: "These email addresses don’t exist in your organization or aren’t Power BI users: {0}",
            Settings_CloseAccount: "Close Account",
            Settings_CloseAccount_Button: "Close Account",
            Settings_CloseAccount_Description: "You can close your Power BI account. You will no longer be able to access Power BI and any content you created will be deleted.",
            Settings_CloseAccount_Reason_DecidedToUseOtherSoftware: "Decided to use other software",
            Settings_CloseAccount_Reason_DidntNeedToUseIt: "Didn't need to use it",
            Settings_CloseAccount_Reason_ForgotAboutIt: "Forgot about it",
            Settings_CloseAccount_Reason_HardToUse: "Hard to use",
            Settings_CloseAccount_Reason_HaventHadTimeToUseIt: "Haven't had time to use it",
            Settings_CloseAccount_Reason_MissingFeatures: "Missing features",
            Settings_CloseAccount_Reason_NotValuableEnoughToMe: "Not valuable enough to me",
            Settings_CloseAccount_Reason_PlaceHolder: "Select Reason (optional)",
            Settings_CloseAccount_Reason_TooManyErrors: "Too many errors",
            Settings_CloseAccount_WhyAreYouClosingYourAccount: "Why are you closing your account?",
            AfterUpgradeDialogTitle: "After you upgrade",
            AfterUpgradeDialogMessage: "After you upgrade successfully to Power BI Pro, click Refresh to take advantage of new features.",
            AfterUpgradeDialogRefreshButton: "Refresh",
            UpgradeAccount_BrowseContentMessage: "You may browse through the gallery of your organizational content. To connect to them, upgrade your account to Power BI Pro.",
            UpgradeAccount_ConnectContentMessage: "To connect to your organizational content in Power BI, upgrade your account to Power BI Pro.",
            UpgradeAccount_ConnectContentTitle: "Organizational content in Power BI",
            UpgradeAccount_GroupsCollaborationMessage: "To collaborate with your team in Power BI, upgrade your account to Power BI Pro.",
            UpgradeAccount_GroupsCollaborationTitle: "Team Collaboration in Power BI",
            UpgradeAccount_ScheduleOnPremDataRefreshMessage: "This dataset contains on-premise data source. To schedule data refresh, upgrade your account to Power BI Pro.",
            UpgradeAccount_ScheduleDataRefreshMessage: "To schedule hourly data refresh, upgrade your account to Power BI Pro.",
            UpgradeAccount_ShareDashboardWarnMessage: "This dashboard contains {0}. Only users who have Power BI Pro can access this dashboard. {1}Learn more{2}",
            UpgradeAccount_ShareDashboardTitle: "{0} contains Power BI Pro content",
            UpgradeAccount_ShareDashboardMessage: "To see this dashboard, upgrade your account to Power BI Pro.",
            UpgradeAccount_TryfreeButton: "Try free for {0} days",
            UpgradeAccount_SuccessMessage: "After you have successfully upgraded to Power BI Pro, click reload to refresh this page and take advantage of new features.",
            UpgradeAccount_SuccessTitle: "Once you've upgraded..",
            GetData_UserVoice: "Monitor and explore your UserVoice data in Power BI by simply connecting to UserVoice using your admin credentials. With Power BI, you will have your tickets, suggestions and user satisfaction data right at your fingertips. Use the dashboard and reports that are readily available for you to analyze your data, or customize your own to highlight the information you care about most. Power BI will refresh your UserVoice data daily so your dashboards and reports are always up to date.",
            PublishContentPack_EmptyTitle: "Be sure to enter a title for your content pack.",
            PublishContentPack_EmptyDescription: "Be sure to enter a description for your content pack.",
            PublishContentPack_Changes: "You've made changes to this published content pack. Do you want others to see these changes?",
            PublishContentPack_NoItemsSelected: "Be sure to select a dashboard, report or dataset for your content pack.",
            PublishContentPack_PersonalizeDashboard_Desc: "You're making changes to a dashboard created from an organizational content pack. Click Save to create your own personal copy.",
            PublishContentPack_PersonalizeReport_Desc: "You're making changes to a report created from an organizational content pack. Click Save to create your own personal copy.",
            PublishContentPack_Personalize_Dashboard: "Personalize this dashboard",
            PublishContentPack_Personalize_DontSave: "Don't Save",
            PublishContentPack_Personalize_Save: "Save",
            PublishContentPack_UnsavedChanges: "You have unsaved changes",
            PublishContentPack_UnsavedChanges_Desc: "You've made changes to a content pack. Do you want to publish them or cancel?",
            PublishContentPack_Failed_Desc: "Failed to publish Organizational Apps",
            UploadReplace_DatasetExists: "You already have a dataset named {0} in Power BI. Do you want to replace the existing dataset with this one?",
            UploadReplace_MultipleDatasetExists: "You already have more than one dataset named {0} in Power BI. To replace an existing dataset make sure you have only one dataset with this name. Otherwise rename the file and try again.",
            UploadReplace_ReplaceButton: "Replace it",
            UploadReplace_DontImportButton: "Don't import",
            NewVisualThemeWelcomeNotificationText: "You might notice our new look and feel. We’ve optimized our visualization colors across dashboards and reports to make your Power BI experience even better.",
            NavigationPane_DevTools: "Dev Tools",
            Extensibility_DevTools: "Dev Tools",
            Error_PleaseWait: "Preparing Power BI",
            Error_PleaseWaitDescription: "Finishing set up...",
            ErrorDescription_TenantNotAllowed_RetryLimitReached: "We were not able to retrieve your tenant license within the allotted time limit.",
            ErrorDescription_UserNotLicensed_RetryLimitReached: "We were not able to retrieve your user license within the allotted time limit.",
            ServerError_ActivityIdText: "Activity Id",
            ServerError_ClusterUriText: "Cluster URI",
            ServerError_RequestIdText: "Request Id",
            ServerError_TimestampText: "Time",
            ServerError_VersionText: "Version",
            VisualContainer_Hide: "Hide",
            GetData_FindOneHere: "Find one here!",
            ExploreCompatibility_PromptMessageNew: "We encourage you to try out the new report canvas and {0}send us your feedback{1}.  Prefer the classic report canvas?  You can go back by clicking above.",
            ExploreCompatibility_PromptTitleNew: "Welcome to the new Power BI report canvas",
            ExploreCompatibility_TakeTour: "Take the tour",
            Error_PleaseWaitSubtext: "less than a minute remaining",
            GroupEditor_FailedCreateGroup_Message: "Couldn't create the group",
            GroupEditor_FailedValidateMembers_Message: "Couldn't validate group members",
            GroupEditor_FailedGetGroupMembers_Message: "Couldn't get group members",
            GroupEditor_AreYouSureYouWantToDeleteGroup_Message: "Power BI will delete all dashboards, reports, and models in this group.",
            GroupEditor_AreYouSureYouWantToDeleteGroup_Title: "Are you sure you want to delete this group?",
            GroupEditor_FailedDeleteGroup_Message: "Couldn't delete the group",
            GroupEditor_FailedUpdateGroup_Message: "Couldn't update the group",
            GroupEditor_FailedValidateGroupId_Message: "Unable to validate group ID, please try again later.",
            GroupEditor_WaitForSave: "Saving...",
            GroupEditor_WaitForAddingMembers: "Adding members...",
            GroupEditor_WaitLoadMembers: "Loading members...",
            GroupEditor_WaitDeleteGroup: "Deleting group...",
            GetData_Zuora: "Visualize important revenue, billing, and subscription data in Power BI by connecting your Zuora account. Use the default dashboard and reports to analyze usage trends, track billings and payments, and monitor recurring revenue, or customize them to meet your own unique dashboard and reporting needs. Different users in your organization can customize their own reports and dashboards, and these can be shared with other users if desired. Data is automatically updated daily, ensuring you have the latest information available.",
            GetData_BIProfessional_Title: "BI Professional",
            GetData_BusinessAnalyst_Title: "Business Analyst",
            GetData_BusinessUser_Title: "Business User",
            GetData_CustomerProfitabilitySample_Title: "Customer Profitability Sample",
            GetData_Developer_Title: "Developer",
            GetData_FilesTutorial_Title: "Learn about importing files",
            GetData_HumanResourcesSample_Title: "Human Resources Sample",
            GetData_ITSpendAnalysisSample_Title: "IT Spend Analysis Sample",
            GetData_LocalFile_Title: "Local File",
            GetData_OpportunityAnalysisSample_Title: "Opportunity Analysis Sample",
            GetData_ProcurementAnalysisSample_Title: "Procurement Analysis Sample",
            GetData_Retail_Analysis_Sample_Title: "Retail Analysis Sample",
            GetData_SalesAndMarketingSample_Title: "Sales and Marketing Sample",
            GetData_StatsNFL2014SeasonRecap_Title: "STATS NFL 2014 Season Recap",
            GetData_SupplierQualityAnalysisSample_Title: "Supplier Quality Analysis Sample",
            GetData_OneDriveBusiness_Title: "OneDrive - Business",
            GetData_OneDrivePersonal_Title: "OneDrive - Personal",
            NoMapLocationKey: "Need a location to place values on the map",
            NoMapLocationMessage: "Location is required to create a map.",
            NoMapLocationValue: "Add a field to the Location box that specifies the position of data points on the map. The field can contain either specific geographic names or longitude and latitude values.",
            GetData_AzureHDInsightSparkLiveConnect: "Apache Spark™ is a fast and general engine for large-scale data processing. Azure HDInsight offers a fully managed Spark service which allows for massive scale-out and interactive performance. HDInsight Spark can connect to any Blob storage in Azure Storage or Azure Data Lake. With the Spark on Azure HDInsight connector for Power BI, users can query and visualize the large volumes of unstructured data that have been modeled in Spark. The result is interactive data exploration and reporting in Power BI on a massive scale of data.",
            SparkContentProvider_Description: "With Power BI you can create dynamic reports mashups with data and metrics you already have in Spark on Azure HDInsight. To get started, we need some information to connect.",
            SparkContentProvider_Landing_ConnectButton: "Connect",
            SparkContentProvider_Password: "Password:",
            SparkContentProvider_ServerName: "Server:",
            SparkContentProvider_Title: "Spark on Azure HDInsight",
            SparkContentProvider_UserName: "User:",
            SparkContentProvider_Description2: "More about",
            SparkContentProvider_Description3: "direct connect with Spark on Azure HDInsight",
            PropertyPane_Unavailable: "Formatting options are unavailable for this visual",
            DesignerContainer_FailedToLoadReport: "Failed to load the report.",
            GetData_VisualStudioOnlineVNext: "Visualize your engineering activity in Power BI by connecting to Microsoft Visual Studio Online. The default dashboard and report provide at-a-glance views of work and code across the projects you configure for your account.  You can customize the dashboard and report to highlight the deeper insights you care about most. The data that appears in Power BI will be updated from Microsoft Visual Studio Online according to a schedule that you control.",
            GroupEditor_Title_ViewGroup: "View Group",
            GroupNavigationPaneContextMenuItem_ViewGroup: "View Group",
            GroupEditor_AddGroupMembers_ViewMode_Label_Text: "Group members",
            HistoryDialog_RefreshStatus_TimedOut: "Timed Out",
            GroupEditor_ViewMode_OkButton_Text: "Ok",
            GroupEditor_WaitForGroupIdValidation: "Validating...",
            PublishContentPack_Update: "Update",
            Publish_UpdateContentPack: "Update Content Pack",
            UpdateContentPack_NoChangesMade: "No content pack changes has been made.",
            PublishContentPack_GroupsValidationFailed: "Be sure to enter valid groups",
            PublishContentPack_InvalidGroupAddresses: "The following groups have failed validation : {0}",
            DashboardContentPackNewVersion: 'A new version of the "{0}" content pack is available.',
            Extensibility_Download: "Download",
            Extensibility_Import: "Import",
            Extensibility_Properties: "Properties",
            Extensibility_Run: "Run",
            Extensibility_Undo: "Undo",
            Extensibility_DeveloperTools: "Developer Tools",
            Extensibility_Extensibility: "Extensibility",
            FixReferences_ToolTip: "Fix References",
            Missing_References_Details_Title: "List of Missing References",
            Missing_References_Message: "This visual in broken due to missing references",
            Fix_This: "Fix This"
        };
    }(b = a.localization || (a.localization = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a() {
                    this.css = {};
                }
                return a.prototype.element = function(a) {
                    this.elem = a;
                }, a.prototype.position = function(a) {
                    var b = this.css;
                    b.WebkitTransform = b.transform = "translate(" + a.x + "px, " + a.y + "px)";
                }, a.prototype.viewport = function(a) {
                    var b = this.css;
                    b.height = a.height, b.width = a.width;
                }, a.prototype.zIndex = function(a) {
                    this.css.zIndex = a;
                }, a.prototype.apply = function() {
                    var a = this.elem;
                    a && (a.css(this.css), this.css = {});
                }, a;
            }();
            a.ApplyStyle = b;
        }(b = a.models || (a.models = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a() {
                    this.showAuthDialog = !1, this.showModalDialog = !1, this.showSpinner = !1, this.selectedAuthenticationIndex = 0, 
                    this.showError = !1;
                }
                return a;
            }();
            a.AuthDialogModel = b;
        }(b = a.models || (a.models = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            var b = function() {
                function a() {
                    this.showDatasetParametersDialog = !1, this.showSpinner = !1, this.showValidationError = !1;
                }
                return a;
            }();
            a.DatasetParametersDialogModel = b;
        }(b = a.models || (a.models = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            var c = function() {
                function a() {}
                return a.Confirm = "confirm", a.Prompt = "prompt", a.Custom = "custom", a;
            }();
            b.DialogType = c;
            var d = function() {
                function a() {}
                return a.Normal = "normal", a.Elevated = "elevated", a;
            }();
            b.ButtonImportance = d;
            var e = function() {
                function a(a, b) {
                    void 0 === a && (a = ""), void 0 === b && (b = ""), this.title = a, this.message = b, 
                    this.dialogType = c.Confirm;
                }
                return a;
            }();
            b.ConfirmDialogContentModel = e;
            var f = function() {
                function a(a, b) {
                    void 0 === a && (a = ""), void 0 === b && (b = ""), this.title = a, this.instructions = b, 
                    this.dialogType = c.Prompt, this.userInput = "";
                }
                return a;
            }();
            b.PromptDialogContentModel = f;
            var g = function() {
                function b(b, c, e, f, g) {
                    var h = this;
                    void 0 === f && (f = !1), void 0 === g && (g = !1), this.isConfirmButtonDisabled = b, 
                    this.confirmButtonText = c, this.autoCloseDialogOnConfirmButtonSelected = e, a.localize.ensureLocalization(function() {
                        return h.cancelButtonText = a.localize.get("ModalDialog_Cancel");
                    }), this.contentFilledDialog = f, this.hideActionsButtons = g, this.confirmButtonImportance = d.Normal, 
                    this.cancelButtonImportance = d.Normal;
                }
                return b;
            }();
            b.ModalDialogModel = g;
        }(b = a.models || (a.models = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            var c = function() {
                function c(c, d, e, f, g, h) {
                    var i = this;
                    void 0 === g && (g = !1), void 0 === h && (h = !1), this.isConfirmButtonDisabled = c, 
                    this.confirmButtonText = d, this.denyButtonText = e, this.autoCloseDialogOnConfirmButtonSelected = f, 
                    a.localize.ensureLocalization(function() {
                        return i.cancelButtonText = a.localize.get("ModalDialog_Cancel");
                    }), this.contentFilledDialog = g, this.hideActionsButtons = h, this.confirmButtonImportance = b.ButtonImportance.Normal, 
                    this.cancelButtonImportance = b.ButtonImportance.Normal, this.denyButtonImportance = b.ButtonImportance.Normal;
                }
                return c;
            }();
            b.ModalThreeButtonDialogModel = c;
        }(b = a.models || (a.models = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            var c = function() {
                function a() {}
                return a;
            }();
            b.IDatasource = c, function(a) {
                a[a.NotSpecified = 0] = "NotSpecified", a[a.NotStart = 1] = "NotStart", a[a.Progressing = 2] = "Progressing", 
                a[a.Failed = 3] = "Failed", a[a.Passed = 4] = "Passed";
            }(b.TestConnectionState || (b.TestConnectionState = {}));
            var d = (b.TestConnectionState, function() {
                function a() {}
                return a;
            }());
            b.ISettingsDataset = d;
            var e = function() {
                function b(a, b, c, d, e, g, h, i) {
                    this.modelId = a, this.name = b, this.description = c, this.lastRefreshFailed = d, 
                    this.lastRefreshFailedMessage = e, this.nextRefresh = g, this.refreshSettings = h, 
                    this.parameters = i, this.takenOver = !1, this.refreshStaticConstants = new f(), 
                    this.isDirty = !1, this.areDatasourcesDirty = !1;
                }
                return Object.defineProperty(b.prototype, "takeOverStatusText", {
                    get: function() {
                        return this.takenOver ? a.localize.get("SettingsDataset_TakeOverStatusText_After") : a.localize.format("SettingsDataset_TakeOverStatusText_Before", [ '<a href=mailto:"' + this.lastTakeoverEmailAddress + '">' + this.lastTakeoverEmailAddress + "</a>" ]);
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(b.prototype, "takeOverButtonText", {
                    get: function() {
                        return a.localize.get(this.takenOver ? "SettingsDataset_TakeOverButton_CancelTakeOver" : "SettingsDataset_TakeOverButton_TakeOver");
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(b.prototype, "enableRefreshControlLabel", {
                    get: function() {
                        return a.localize.get(this.refreshSettings.refreshEnabled ? "SettingsDataset_ScheduleRefresh_EnableRefresh_Yes" : "SettingsDataset_ScheduleRefresh_EnableRefresh_No");
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(b.prototype, "showWeekDays", {
                    get: function() {
                        return 1 === this.refreshSettings.refreshFrequencyIndex;
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(b.prototype, "hasDatasourceWithWrongCredentials", {
                    get: function() {
                        for (var a = void 0 !== this.datasources ? this.datasources.length : 0, b = 0; a > b; b++) if (0 === this.datasources[b].testConnectionState) return !0;
                        return !1;
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(b.prototype, "refreshFrequencies", {
                    get: function() {
                        return f.refreshFrequencies;
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(b.prototype, "refreshDays", {
                    get: function() {
                        return f.refreshDays;
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(b.prototype, "refreshTimeWindows", {
                    get: function() {
                        return f.refreshTimeWindows;
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(b.prototype, "refreshTimeHourWindows", {
                    get: function() {
                        return f.refreshTimeHourWindows;
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(b.prototype, "refreshTimeMinuteWindows", {
                    get: function() {
                        return f.refreshTimeMinuteWindows;
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(b.prototype, "refreshTimeAmPmWindows", {
                    get: function() {
                        return f.refreshTimeAmPmWindows;
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(b.prototype, "refreshTimeZones", {
                    get: function() {
                        return f.refreshTimeZones;
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(b.prototype, "refreshTimeZonesViewModel", {
                    get: function() {
                        return f.refreshTimeZonesViewModel;
                    },
                    enumerable: !0,
                    configurable: !0
                }), b;
            }();
            b.SettingsDataset = e;
            var f = function() {
                function b() {
                    this.initRefreshFrequencies(), this.initRefreshDays(), this.initTimeWindows(), this.initTimeHourWindows(), 
                    this.initTimeMinuteWindows(), this.initTimeAmPmWindow(), this.initTimeZones(), this.initTimeZonesViewModel();
                }
                return b.prototype.initRefreshFrequencies = function() {
                    b.refreshFrequencies = [ a.localize.get("SettingsDataset_ScheduleRefresh_RefreshFrequency_Daily"), a.localize.get("SettingsDataset_ScheduleRefresh_RefreshFrequency_Weekly") ];
                }, b.prototype.initRefreshDays = function() {
                    b.refreshDays = [ a.localize.get("SettingsDataset_ScheduleRefresh_RefreshFrequency_Days_Sunday"), a.localize.get("SettingsDataset_ScheduleRefresh_RefreshFrequency_Days_Monday"), a.localize.get("SettingsDataset_ScheduleRefresh_RefreshFrequency_Days_Tuesday"), a.localize.get("SettingsDataset_ScheduleRefresh_RefreshFrequency_Days_Wednesday"), a.localize.get("SettingsDataset_ScheduleRefresh_RefreshFrequency_Days_Thursday"), a.localize.get("SettingsDataset_ScheduleRefresh_RefreshFrequency_Days_Friday"), a.localize.get("SettingsDataset_ScheduleRefresh_RefreshFrequency_Days_Saturday") ];
                }, b.prototype.initTimeWindows = function() {
                    b.refreshTimeWindows = [ a.localize.get("SettingsDataset_ScheduleRefresh_TimeWindow_1"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeWindow_2"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeWindow_3"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeWindow_4") ];
                }, b.prototype.initTimeHourWindows = function() {
                    b.refreshTimeHourWindows = [ a.localize.get("SettingsDataset_ScheduleRefresh_TimeHourWindows_1"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeHourWindows_2"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeHourWindows_3"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeHourWindows_4"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeHourWindows_5"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeHourWindows_6"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeHourWindows_7"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeHourWindows_8"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeHourWindows_9"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeHourWindows_10"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeHourWindows_11"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeHourWindows_12") ];
                }, b.prototype.initTimeMinuteWindows = function() {
                    b.refreshTimeMinuteWindows = [ a.localize.get("SettingsDataset_ScheduleRefresh_TimeMinuteWindos_00"), a.localize.get("SettingsDataset_ScheduleRefresh_TimeMinuteWindos_30") ];
                }, b.prototype.initTimeAmPmWindow = function() {
                    b.refreshTimeAmPmWindows = [ a.localize.get("SettingsDataset_ScheduleRefresh_AmPmWindows_Am"), a.localize.get("SettingsDataset_ScheduleRefresh_AmPmWindows_Pm") ];
                }, b.prototype.initTimeZones = function() {
                    b.refreshTimeZones = {
                        "Dateline Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Dateline_Standard_Time"),
                        "UTC-11": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_UTC_Minus_11"),
                        "Hawaiian Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Hawaiian_Standard_Time"),
                        "Alaskan Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Alaskan_Standard_Time"),
                        "Pacific Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Pacific_Standard_Time"),
                        "Pacific Standard Time (Mexico)": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Pacific_Standard_Time_Mexico"),
                        "Mountain Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Mountain_Standard_Time"),
                        "Mountain Standard Time (Mexico)": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Mountain_Standard_Time_Mexico"),
                        "US Mountain Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_US_Mountain_Standard_Time"),
                        "Canada Central Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Canada_Central_Standard_Time"),
                        "Central America Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Central_America_Standard_Time"),
                        "Central Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Central_Standard_Time"),
                        "Central Standard Time (Mexico)": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Central_Standard_Time_Mexico"),
                        "Eastern Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Eastern_Standard_Time"),
                        "SA Pacific Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_SA_Pacific_Standard_Time"),
                        "US Eastern Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_US_Eastern_Standard_Time"),
                        "Venezuela Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Venezuela_Standard_Time"),
                        "Atlantic Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Atlantic_Standard_Time"),
                        "Central Brazilian Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Central_Brazilian_Standard_Time"),
                        "Pacific SA Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Pacific_SA_Standard_Time"),
                        "SA Western Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_SA_Western_Standard_Time"),
                        "Paraguay Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Paraguay_Standard_Time"),
                        "Newfoundland Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Newfoundland_Standard_Time"),
                        "E. South America Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_E_South_America_Standard_Time"),
                        "Greenland Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Greenland_Standard_Time"),
                        "Montevideo Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Montevideo_Standard_Time"),
                        "SA Eastern Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_SA_Eastern_Standard_Time"),
                        "Argentina Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Argentina_Standard_Time"),
                        "Mid-Atlantic Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Mid_Atlantic_Standard_Time"),
                        "UTC-2": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_UTC_Minus_2"),
                        "Azores Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Azores_Standard_Time"),
                        "Cabo Verde Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Cabo_Verde_Standard_Time"),
                        "GMT Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_GMT_Standard_Time"),
                        "Greenwich Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Greenwich_Standard_Time"),
                        "Morocco Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Morocco_Standard_Time"),
                        UTC: a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_UTC"),
                        "Central Europe Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Central_Europe_Standard_Time"),
                        "Central European Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Central_European_Standard_Time"),
                        "Romance Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Romance_Standard_Time"),
                        "W. Central Africa Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_W_Central_Africa_Standard_Time"),
                        "W. Europe Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_W_Europe_Standard_Time"),
                        "Namibia Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Namibia_Standard_Time"),
                        "E. Europe Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_E_Europe_Standard_Time"),
                        "Egypt Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Egypt_Standard_Time"),
                        "FLE Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_FLE_Standard_Time"),
                        "GTB Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_GTB_Standard_Time"),
                        "Israel Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Israel_Standard_Time"),
                        "Jordan Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Jordan_Standard_Time"),
                        "Middle East Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Middle_East_Standard_Time"),
                        "South Africa Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_South_Africa_Standard_Time"),
                        "Syria Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Syria_Standard_Time"),
                        "Turkey Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Turkey_Standard_Time"),
                        "Arab Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Arab_Standard_Time"),
                        "Arabic Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Arabic_Standard_Time"),
                        "E. Africa Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_E_Africa_Standard_Time"),
                        "Kaliningrad Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Kaliningrad_Standard_Time"),
                        "Iran Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Iran_Standard_Time"),
                        "Russian Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Russian_Standard_Time"),
                        "Arabian Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Arabian_Standard_Time"),
                        "Azerbaijan Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Azerbaijan_Standard_Time"),
                        "Caucasus Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Caucasus_Standard_Time"),
                        "Georgian Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Georgian_Standard_Time"),
                        "Mauritius Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Mauritius_Standard_Time"),
                        "Afghanistan Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Afghanistan_Standard_Time"),
                        "West Asia Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_West_Asia_Standard_Time"),
                        "Pakistan Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Pakistan_Standard_Time"),
                        "India Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_India_Standard_Time"),
                        "Sri Lanka Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Sri_Lanka_Standard_Time"),
                        "Nepal Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Nepal_Standard_Time"),
                        "Ekaterinburg Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Ekaterinburg_Standard_Time"),
                        "Central Asia Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Central_Asia_Standard_Time"),
                        "Bangladesh Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Bangladesh_Standard_Time"),
                        "Myanmar Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Myanmar_Standard_Time"),
                        "N. Central Asia Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_N_Central_Asia_Standard_Time"),
                        "SE Asia Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_SE_Asia_Standard_Time"),
                        "North Asia Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_North_Asia_Standard_Time"),
                        "China Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_China_Standard_Time"),
                        "Singapore Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Singapore_Standard_Tim"),
                        "Taipei Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Taipei_Standard_Time"),
                        "W. Australia Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_W_Australia_Standard_Time"),
                        "Ulaanbaatar Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Ulaanbaatar_Standard_Time"),
                        "North Asia East Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_North_Asia_East_Standard_Time"),
                        "Korea Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Korea_Standard_Time"),
                        "Tokyo Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Tokyo_Standard_Time"),
                        "AUS Central Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_AUS_Central_Standard_Time"),
                        "Cen. Australia Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Cen_Australia_Standard_Time"),
                        "Yakutsk Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Yakutsk_Standard_Time"),
                        "AUS Eastern Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_AUS_Eastern_Standard_Time"),
                        "E. Australia Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_E_Australia_Standard_Time"),
                        "Tasmania Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Tasmania_Standard_Time"),
                        "West Pacific Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_West_Pacific_Standard_Time"),
                        "Vladivostok Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Vladivostok_Standard_Time"),
                        "Central Pacific Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Central_Pacific_Standard_Time"),
                        "Magadan Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Magadan_Standard_Time"),
                        "Fiji Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Fiji_Standard_Time"),
                        "New Zealand Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_New_Zealand_Standard_Time"),
                        "UTC+12": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_UTC_Plus_12"),
                        "Tonga Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Tonga_Standard_Time"),
                        "Samoa Standard Time": a.localize.get("SettingsDataset_ScheduleRefresh_Timezone_Samoa_Standard_Time")
                    };
                }, b.prototype.initTimeZonesViewModel = function() {
                    b.refreshTimeZonesViewModel = new Array(), angular.forEach(b.refreshTimeZones, function(a, c) {
                        b.refreshTimeZonesViewModel.push({
                            key: c,
                            value: a
                        });
                    });
                }, b;
            }();
            b.RefreshStaticConstants = f;
        }(b = a.models || (a.models = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(a) {
            !function(a) {
                a[a.Dashboards = 0] = "Dashboards", a[a.Datasets = 1] = "Datasets", a[a.Workbooks = 2] = "Workbooks";
            }(a.SettingsGroupsType || (a.SettingsGroupsType = {}));
            var b = (a.SettingsGroupsType, function() {
                function a(a, b) {
                    this.type = a, this.name = b;
                }
                return a;
            }());
            a.SettingsGroup = b;
        }(b = a.models || (a.models = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        function c(a) {
            return new g(a);
        }
        function d(a, b) {
            var c = "Unknown";
            if (a) if (6 === b) c = "Excel Workbook"; else if (7 === b) c = "Power BI Designer File"; else {
                var d = _.filter(a, function(a) {
                    return a.id === b;
                });
                d && d.length > 0 && (c = d[0].displayText);
            }
            return c;
        }
        var e = a.common.contracts.contentProviderManifest, f = jsCommon.Utility;
        b.createContentProviderService = c, b.findContentProviderName = d;
        var g = function() {
            function a(a) {
                this.featureSwitchService = a;
            }
            return a.prototype.getBuiltInContentProviders = function() {
                var a = this;
                return e.filter(function(b) {
                    return !b.featureSwitch || b.featureSwitch && a.featureSwitchService.featureSwitches[b.featureSwitch];
                });
            }, a.prototype.getContentProviders = function(c) {
                var d = b.httpService.powerbiRequestOptions(c, "GetContentProviders"), e = a._baseUrlEndPoint, f = this.featureSwitchService.featureSwitches.includeFlightingContentProviders;
                return f && (e += "?includeFlightedContentProviders=true"), b.httpService.get(e, d);
            }, a.prototype.getOrganizationalContentProviders = function(c, d) {
                var e = b.httpService.powerbiRequestOptions(c, "GetContentProviders"), f = a._baseUrlEndPoint;
                return f += d ? "?category=Organizational&owned=true" : "?category=Organizational", 
                b.httpService.get(f, e);
            }, a.prototype.getConfiguration = function(c, d, e, g) {
                f.throwIfNullOrUndefined(c, this, "getConfiguration", "contentProviderId"), f.throwIfNullOrUndefined(d, this, "getConfiguration", "type");
                var h = f.urlCombine(a._baseUrlEndPoint, c + "/configuration");
                g && (h = f.urlCombine(h, g.toString())), h = f.urlCombine(h, "?type=" + d);
                var i = b.httpService.powerbiRequestOptions(e, "GetConiguration");
                return b.httpService.get(h, i);
            }, a.prototype.storeConfiguration = function(c, d, e, g, h, i) {
                f.throwIfNullOrUndefined(c, this, "storeConfiguration", "dashboardId"), f.throwIfNullOrUndefined(d, this, "storeConfiguration", "contentProviderId"), 
                f.throwIfNullOrUndefined(e, this, "storeConfiguration", "dataAccessInfo");
                var j = f.urlCombine(a._baseUrlEndPoint, "/" + d + "/configuration");
                h && (j = f.urlCombine(a._baseUrlEndPoint, "/" + h + "/configuration")), i && (j = f.urlCombine(j, i.toString())), 
                j = f.urlCombine(j, "?currentDashboardId=" + c);
                var k = {
                    dataAccessInfo: e
                }, l = b.httpService.powerbiRequestOptions(g, "StoreConfiguration");
                return l.retryCount = 0, b.httpService.put(j, k, l);
            }, a._baseUrlEndPoint = "/powerbi/content/providers/", a;
        }();
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b() {
            return new c();
        }
        a.createDatasetsService = b;
        var c = function() {
            function b() {}
            return b.prototype.updateDatasource = function(b, c, d, e, f) {
                var g = a.httpService.powerbiRequestOptions(f, "UpdateDataSource");
                return g.retryCount = 0, a.httpService.post("powerbi/dmm/datasources/" + b + (d ? "/v2" : "") + "?testOnSave=" + c, e, g);
            }, b.prototype.updateModelParameters = function(b, c, d) {
                var e = a.httpService.powerbiRequestOptions(d, "UpdateModelParameters");
                return a.httpService.post("powerbi/metadata/models/" + b + "/parameters", c, e);
            }, b.prototype.getAggregatedDatasourcesForOneModel = function(b, c, d) {
                var e = a.httpService.powerbiRequestOptions(d, "GetAggregatedDatasources");
                return a.httpService.get("powerbi/dmm/aggregateDataSource/" + b + "?testConnection=" + c, e);
            }, b.prototype.getAggregatedDatasourcesForImport = function(b, c, d, e) {
                var f = a.httpService.powerbiRequestOptions(e, "GetAggregatedDatasourcesImport");
                return a.httpService.post("powerbi/dmm/aggregateDataSourceImport/" + b + "?testConnection=" + d, c, f);
            }, b.prototype.discoverPublicKey = function(b) {
                var c = a.httpService.powerbiRequestOptions(b, "DiscoverPublicKey");
                return a.httpService.get("powerbi/dmm/gateways/publicKeys", c);
            }, b.prototype.displayOopsErrorAndEndTelemetry = function(b, c, d, e, f) {
                f.reject(), c.error(a.localize.get(d), d, {
                    requestId: e.requestId,
                    statusCode: e.status.toString()
                });
            }, b.prototype.testDataSourceConnection = function(b, c) {
                var d = a.httpService.powerbiRequestOptions(c, "TestDataSourceConnection");
                return a.httpService.post("powerbi/dmm/dataSources/" + b + "/testConnection", null, d);
            }, b;
        }();
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            function c(b, c) {
                var d = a.httpService.powerbiRequestOptions(c, "GetMashUpProviderPackageModels");
                return a.httpService.get("powerbi/providers/mashup/provider/" + b.toString() + "/models", d);
            }
            function d(b, c, d) {
                var e = a.httpService.powerbiRequestOptions(d, "UpdateMashUpProviderPackageModelParameters");
                return a.httpService.post("powerbi/providers/mashup/provider/" + b.toString() + "/parameters", c, e);
            }
            b.getMashUpProviderPackageModels = c, b.updateMashUpProviderPackageModelParameters = d;
        }(b = a.mashupProviderService || (a.mashupProviderService = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b;
        !function(b) {
            function c() {
                var b = [];
                return a.localize.ensureLocalization(function() {
                    b.push(new a.models.SettingsGroup(0, a.localize.get("SettingsGroupsNames_Dashboards"))), 
                    b.push(new a.models.SettingsGroup(1, a.localize.get("SettingsGroupsNames_Datasets"))), 
                    b.push(new a.models.SettingsGroup(2, a.localize.get("SettingsGroupsNames_Workbooks")));
                }), b;
            }
            b.getSettingsGroups = c;
        }(b = a.settingsService || (a.settingsService = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b = function() {
            function a() {}
            return a.prototype.refreshToken = function(a) {
                var b = $('<iframe height="1" width="1" frameborder="0" name="refreshTokenFrame" id="refreshTokenFrameId" sandbox="allow-scripts allow-same-origin allow-forms" src="/tokenRefresh?ver=' + Date.now() + '"></iframe>'), c = $("body");
                c.find("#refreshTokenFrameId").remove(), c.append(b), b[0].onload = function() {
                    a();
                };
            }, a;
        }();
        a.tokenService = new b();
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        function c() {
            return new d();
        }
        b.createActiveGroupIdService = c;
        var d = function() {
            function b() {
                if (this.isInIframe()) {
                    var a = window.top;
                    this.activeGroupObjectId = a.powerbi.common.httpService.activeGroupIdService.activeGroupObjectId;
                }
            }
            return Object.defineProperty(b.prototype, "headerActiveGroupObjectId", {
                get: function() {
                    return this.activeGroupObjectId === a.constants.myWorkspaceGroupId ? "" : this.activeGroupObjectId;
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(b.prototype, "myWorkspaceGroupId", {
                get: function() {
                    return a.constants.myWorkspaceGroupId;
                },
                enumerable: !0,
                configurable: !0
            }), b.prototype.isInIframe = function() {
                try {
                    return window.self !== window.top;
                } catch (a) {
                    return !0;
                }
            }, b;
        }();
        b.ActiveGroupIdService = d;
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b(a) {
            return new c(a);
        }
        a.createChannelSubscriptionManager = b;
        var c = function() {
            function a(a) {
                this.subscribeFunction = a, this.unsubscribeList = [];
            }
            return a.prototype.subscribe = function(a, b) {
                var c = this.subscribeFunction(a, b);
                return c && $.isFunction(c) && this.unsubscribeList.push(c), this;
            }, a.prototype.unsubscribeAll = function() {
                var a = -1, b = this.unsubscribeList.length;
                if (b) {
                    for (a = b; b; ) this.unsubscribeList[--b]();
                    this.unsubscribeList.splice(0, a);
                }
                return a;
            }, a;
        }();
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b() {
            return new c();
        }
        a.createDelayedQueryResultHandler = b;
        var c = function() {
            function a() {}
            return a.prototype.setQueryResolver = function(a) {
                this.queryResolver = a;
            }, a.prototype.registerDelayedResult = function(a, b, c) {
                this.queryResolver ? this.queryResolver.resolveDelayedQuery(a, b, c) : b.reject();
            }, a;
        }();
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b() {
            return new c();
        }
        a.createDragDataService = b;
        var c = function() {
            function a() {}
            return a.prototype.setDragElement = function(a) {
                this.dragElement = a;
            }, a.prototype.setDragContext = function(a) {
                this.dragContext = a;
            }, a.prototype.getDragElement = function() {
                return this.dragElement;
            }, a.prototype.getDragContext = function() {
                return this.dragContext;
            }, a;
        }();
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b() {
            return new c();
        }
        a.createDropdownMenuService = b;
        var c = function() {
            function a() {
                var a = this;
                $(window).on("resize", function() {
                    return a.hideMenu();
                });
            }
            return a.prototype.showMenu = function(a, b, c, d) {
                this.prepareMenuItem(a, b, d), this.showMenuCore(), c && c.stopPropagation();
            }, a.prototype.toggleActive = function(b, c, d, e) {
                this.prepareMenuItem(b, c, e), b.hasClass(a.dropDownActiveClass) ? this.hideMenu() : this.showMenuCore(), 
                d && d.stopPropagation();
            }, a.prototype.hideMenu = function() {
                this.currentDropdownElement && this.currentDropdownElement.hasClass(a.dropDownActiveClass) && (this.currentDropdownElement.removeClass(a.dropDownActiveClass), 
                this.currentDropdownElement.detach(), this.currentDropdownElement = null, $(window).off(jsCommon.DOMConstants.mouseDownEventName, this.mouseDownHideDialog));
            }, a.prototype.showMenuCore = function() {
                var b = this;
                this.currentDropdownElement && ($(window).on(jsCommon.DOMConstants.mouseDownEventName, function(a) {
                    return b.mouseDownHideDialog(a);
                }), this.currentDropdownElement.addClass(a.dropDownActiveClass));
            }, a.prototype.prepareMenuItem = function(b, c, d) {
                if (this.currentDropdownElement) {
                    var e = this.currentDropdownElement;
                    e.is(b) || (e.removeClass(a.dropDownActiveClass), e.detach(), this.currentDropdownElement = null, 
                    this.currentAnchorElement = null);
                }
                if (this.currentDropdownElement || (this.currentDropdownElement = b, this.currentAnchorElement = c, 
                this.currentDropdownElement.appendTo("body")), c) {
                    var f = d ? c.offset().left + c.width() : c.offset().left, g = b.outerWidth(!0), h = g + f > $(window).width(), i = h ? f + c.outerWidth(!0) - g : f, j = d ? c.offset().top : c.offset().top + c.height(), k = b.outerHeight(!0);
                    h = k + j > $(window).height();
                    var l = h ? j - k : j;
                    b.css({
                        position: "absolute",
                        zIndex: 1e3,
                        top: l,
                        left: Math.ceil(i),
                        opacity: 1
                    });
                }
            }, a.prototype.mouseDownHideDialog = function(b) {
                this.currentDropdownElement && this.currentDropdownElement.hasClass(a.dropDownActiveClass) && this.outOfBoundsClickHandler(b) && this.currentDropdownElement.removeClass(a.dropDownActiveClass);
            }, a.prototype.outOfBoundsClickHandler = function(b) {
                var c = b.pageX, d = b.pageY;
                return this.currentAnchorElement && this.currentDropdownElement && this.currentDropdownElement.hasClass(a.dropDownActiveClass) && !this.isOutOfBounds(this.currentAnchorElement, c, d) ? !1 : this.currentDropdownElement && this.currentDropdownElement.hasClass(a.dropDownActiveClass) ? this.isOutOfBounds(this.currentDropdownElement, c, d) : void 0;
            }, a.prototype.isOutOfBounds = function(a, b, c) {
                var d = a.offset(), e = d.left, f = d.top, g = e + a.outerWidth(), h = f + a.outerHeight();
                return e > b || b > g || f > c || c > h;
            }, a.dropDownActiveClass = "active", a;
        }();
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b(a) {
            return new c(a);
        }
        a.createOverlayService = b;
        var c = function() {
            function a(a) {
                var b = this;
                this.overlays = [], this.dropdowns = [], $(window).on(jsCommon.DOMConstants.mouseClickEventName, function(a) {
                    return b.mouseClickHideDialog(a, b.dropdowns);
                }), $(window).on("resize", function() {
                    b.hideAllDropdowns();
                }), this.root = a ? a : $("body");
            }
            return a.prototype.register = function(b, c) {
                c ? this.dropdowns.push(b) : this.overlays.push(b), b.addClass(a.overlayClass), 
                b.appendTo(this.root);
            }, a.prototype.unregister = function(b, c) {
                var d = c ? this.dropdowns : this.overlays, e = d.map(function(a) {
                    return a[0];
                }).indexOf(b[0]);
                e > -1 && (d[e].remove(), d.splice(e, 1)), b.removeClass(a.overlayClass), b.removeClass(a.overlayActiveClass), 
                b.remove();
            }, a.prototype.mouseClickHideDialog = function(b) {
                if (this.dropdowns.length > 0) for (var c = 0, d = this.dropdowns.length; d > c; c++) {
                    var e = this.dropdowns[c];
                    if (e.hasClass(a.overlayActiveClass) && this.outOfBoundsClickHandler(b, e)) {
                        this.hideAllDropdowns();
                        break;
                    }
                }
            }, a.prototype.showOverlay = function(b, c, d) {
                d ? this.repositionDropdown(b, c, !0) : this.repositionToolbar(b, c), b.addClass(a.overlayActiveClass);
            }, a.prototype.toggleDropdown = function(b, c, d, e) {
                for (var f = 0, g = this.dropdowns.length; g > f; f++) {
                    var h = this.dropdowns[f];
                    h.is(b) || h.removeClass(a.overlayActiveClass);
                }
                this.repositionDropdown(b, c, e), b.toggleClass(a.overlayActiveClass), d && d.stopPropagation();
            }, a.prototype.hideAll = function() {
                this.hideAllDropdowns();
                for (var a = 0, b = this.overlays.length; b > a; a++) this.hideOverlay(this.overlays[a]);
            }, a.prototype.outOfBoundsClickHandler = function(a, b) {
                var c = a.pageX, d = a.pageY, e = b.offset(), f = e.left, g = e.top, h = f + b.width(), i = g + b.height();
                return f > c || c > h || g > d || d > i;
            }, a.prototype.repositionDropdown = function(a, b, c) {
                var d = b.offset().left, e = a.outerWidth(!0), f = e + d > $(window).width(), g = c || f ? d + b.outerWidth(!0) - e : d, h = b.offset().top + b.outerHeight(!0), i = a.outerHeight(!0);
                f = i + h > $(window).height();
                var j = f ? h - i : h;
                a.css({
                    top: j,
                    left: Math.ceil(g)
                });
            }, a.prototype.repositionToolbar = function(b, c) {
                var d = b.outerWidth(!0), e = b.outerHeight(!0), f = c.offset().left, g = c.offset().top, h = c.outerHeight(!0), i = c.outerWidth(!0), j = g - e - a.VerticalMargin, k = g + h + a.VerticalMargin, l = f;
                l + d > $(window).width() && (l = f + i - d), 0 > l && (l = 0);
                var m = j;
                0 > m ? m = k : m + e > $(window).height() && (m = j), b.css({
                    top: m,
                    left: l
                });
            }, a.prototype.hideAllDropdowns = function() {
                for (var b = 0, c = this.dropdowns.length; c > b; b++) {
                    var d = this.dropdowns[b];
                    d && d.hasClass(a.overlayActiveClass) && this.hideDropdown(d), this.dropdowns[b].removeClass(a.overlayActiveClass);
                }
            }, a.prototype.hideDropdown = function(b) {
                b.animate({
                    opacity: 0
                }, a.menuFadeOutAnimationMs, function() {
                    b.removeClass(a.overlayActiveClass), b.removeAttr("style");
                });
            }, a.prototype.hideOverlay = function(b) {
                b.removeClass(a.overlayActiveClass);
            }, a.overlayActiveClass = "overlayActive", a.overlayClass = "overlay", a.VerticalMargin = 12, 
            a.menuFadeOutAnimationMs = 250, a;
        }();
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        function c(b) {
            return a.common.errorService = new d(b), a.common.errorService;
        }
        jsCommon.TraceType;
        b.createErrorService = c;
        var d = function() {
            function c(a) {
                this.modalDialog = new jsCommon.ModalDialog(), this.telemetryService = a;
            }
            return c.prototype.error = function(c, d, e) {
                var f, g = this, h = [], i = e && !jsCommon.StringExtensions.isNullOrEmpty(e.requestId) ? e.requestId : "", j = e && !jsCommon.StringExtensions.isNullOrEmpty(e.ecsCorrelationId) ? e.ecsCorrelationId : "";
                this.logTelemetry(i, j, d), e && e.additionalErrorInfo && (h = e.additionalErrorInfo), 
                b.localize.ensureLocalization(function() {
                    f = {
                        errorInfoKey: b.localize.get("AdditionalErrorInfo_ActivityIdText"),
                        errorInfoValue: g.telemetryService.sessionId
                    }, h.push(f), i && (f = {
                        errorInfoKey: b.localize.get("AdditionalErrorInfo_RequestIdText"),
                        errorInfoValue: i
                    }, h.push(f)), e && !jsCommon.StringExtensions.isNullOrEmpty(e.statusCode) && (f = {
                        errorInfoKey: b.localize.get("AdditionalErrorInfo_ErrorCodeText"),
                        errorInfoValue: e.statusCode
                    }, h.push(f)), j && (f = {
                        errorInfoKey: b.localize.get("AdditionalErrorInfo_ecsCorrelationId"),
                        errorInfoValue: j
                    }, h.push(f)), f = {
                        errorInfoKey: b.localize.get("AdditionalErrorInfo_TimestampText"),
                        errorInfoValue: new Date().toString()
                    }, h.push(f), "undefined" == typeof a.build || jsCommon.StringExtensions.isNullOrEmpty(a.build) || (f = {
                        errorInfoKey: b.localize.get("AdditionalErrorInfo_VersionText"),
                        errorInfoValue: a.build
                    }, h.push(f)), "undefined" == typeof clusterUri || jsCommon.StringExtensions.isNullOrEmpty(clusterUri) || (f = {
                        errorInfoKey: b.localize.get("AdditionalErrorInfo_ClusterUriText"),
                        errorInfoValue: clusterUri
                    }, h.push(f));
                    var d = !0;
                    e && e.showAdditionalErrorInfo === !1 && (d = !1);
                    var k = b.localize.get("ErrorMessage_DefaultTitle");
                    g.modalDialog.showCustomError(e ? e.title || k : k, c, e ? e.level : 3, e ? e.isDismissable : !0, d ? h : null, e ? e.dismissCallback : null, e ? e.dialogOptions : null);
                });
            }, c.prototype.fatalCustom = function(a, b, c) {
                jsCommon.StringExtensions.isNullOrEmpty(c) || this.logTelemetry("", "", c), this.modalDialog.showCustomError(a, b, 6, !1);
            }, c.prototype.fatal = function(a, b) {
                this.logTelemetry("", "", b), this.modalDialog.showError(a, 6);
            }, c.prototype.warning = function(a) {
                this.modalDialog.showError(a, 2);
            }, c.prototype.info = function(a) {
                this.modalDialog.showError(a, 0);
            }, c.prototype.infoCustom = function(a, b) {
                this.modalDialog.showMessage(a, b);
            }, c.prototype.control = function() {
                return this.modalDialog;
            }, c.prototype.logTelemetry = function(b, c, d) {
                var e = this.telemetryService;
                e.logEvent(a.telemetry.DashboardErrorDialog, b, c, d, "");
            }, c;
        }();
        b.ErrorService = d, b.errorService;
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b() {
            return new e();
        }
        !function(a) {
            a[a.Data = 0] = "Data", a[a.Section = 1] = "Section", a[a.Visual = 2] = "Visual";
        }(a.EventChannelType || (a.EventChannelType = {}));
        var c = (a.EventChannelType, function() {
            function a(a) {
                this.scope = a;
            }
            return a.prototype.subscribe = function(a, b) {
                var c = this.scope;
                return c && c.$on(a.name, b), this;
            }, a;
        }());
        a.createEventBridge = b;
        var d = function() {
            function a(a) {
                this.type = a;
            }
            return a;
        }(), e = function() {
            function b() {
                this.channelMap = {};
            }
            return b.prototype.getChannel = function(a) {
                return this.getOrCreateChannel(a, !0);
            }, b.prototype.getOrCreateChannel = function(a, b) {
                var c = this.channelMap[a];
                if (!c) {
                    if (!b) return;
                    c = new d(a), this.channelMap[a] = c;
                }
                return $(c);
            }, b.prototype.createChannelSubscriptionManager = function() {
                var b = this;
                return a.createChannelSubscriptionManager(function(a, c) {
                    return b.subscribeToChannel(a, c);
                });
            }, b.prototype.subscribeToChannel = function(a, b) {
                var c = this.getChannel(a.type), d = function() {
                    $(c).off(a.name, null, b);
                };
                return d(), $(c).on(a.name, {}, b), d;
            }, b.prototype.publishToChannel = function(a, b) {
                var c = this.getOrCreateChannel(a.type, !1);
                c && c.trigger(a.name, b);
            }, b.prototype.setBubblingScope = function(a) {
                return new c(a);
            }, b.prototype.subscribeToBubbling = function(a, b, c) {
                return a.$on(b.name, c);
            }, b.prototype.publishBubbling = function(a, b, c) {
                a.$emit(b.name, c);
            }, b;
        }();
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b(a, b) {
            return new d(a, b);
        }
        var c = function() {
            function a() {
                this.orgAppsEnabled = !1, this.microsoftOrgAppEnabled = !1, this.withinDXT = !1, 
                this.groupsEnabled = !1, this.newGetDataEnabled = !1, this.includeFlightingContentProviders = !1, 
                this.showFlagUtteranceButton = !1, this.exportallowed = !1, this.unmin = !1, this.pgw = !0, 
                this.showGettingStartedPopups = !1, this.ignoreGettingStartedPopups = !1, this.useNewGridSize = !1, 
                this.devToolsEnabled = !1, this.explore = !1, this.newTable = !1, this.heatMap = !1, 
                this.dataDotChartEnabled = !1, this.richTextboxEnabled = !1, this.quotaEnabled = !1, 
                this.quotaEnforcementEnabled = !1, this.quotaSmallLimitEnabled = !1, this.forceFreeUserEnabled = !1, 
                this.fullFidelityExcelEnabled = !1, this.vsoVnextAppEnabled = !1, this.exploreToggleEnabled = !1, 
                this.saveVisualData = !1, this.zuoraAppEnabled = !1, this.interpretWithData = !1, 
                this.languageQueryParamEnabled = !1, this.currentContentProviderFlightCode = null, 
                this.cpcode = null, this.allFormatEnabled = !1, this.titleFormatEnabled = !0, this.dataPointFormatEnabled = !0, 
                this.categoryAxisFormatEnabled = !0, this.legendFormatEnabled = !0, this.backgroundFormatEnabled = !0, 
                this.redirectedFromSignup = !1, this.csvContentProviderEnabled = !1;
            }
            return a;
        }();
        a.ClientFeatureSwitches = c, a.createEditableFeatureSwitchService = b;
        var d = function() {
            function a(a, b) {
                this.featureSwitchValues = b, this.initializationDeferred = a.defer();
            }
            return a.prototype.registerFeatureSwitches = function(a) {
                this.featureSwitchValues = $.extend({}, a, this.featureSwitchValues), this.initializationDeferred.resolve(this.featureSwitchValues);
            }, a.prototype.getFeatureSwitches = function() {
                return this.initializationDeferred.promise;
            }, Object.defineProperty(a.prototype, "featureSwitches", {
                get: function() {
                    return this.featureSwitchValues;
                },
                enumerable: !0,
                configurable: !0
            }), a;
        }();
        a.featureSwitchService;
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c = jsCommon.ArrayExtensions, d = a.common.helpers.expiredTokenPromptHelper, e = jsCommon.Utility, f = jsCommon.StringExtensions;
        b.PowerBIErrorHeader = "x-powerbi-error-info", b.PowerBIErrorDetailsHeader = "x-powerbi-error-details";
        var g = function() {
            function a() {}
            return Object.defineProperty(a.prototype, "frontendUri", {
                get: function() {
                    return location.protocol + "//" + location.host;
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(a.prototype, "backendUri", {
                get: function() {
                    return clusterUri;
                },
                enumerable: !0,
                configurable: !0
            }), a;
        }(), h = function() {
            function a() {}
            return a.prototype.interceptUrl = function(a) {
                return a;
            }, a;
        }(), i = function() {
            function a() {}
            return a.prototype.redirectToSignupUrl = function(a) {
                location.href = "/SignupRedirect" + a;
            }, a.prototype.redirectToErrorPage = function(a, b) {
                location.href = f.format("/ErrorPage?code={0}&errorType={1}", status, b);
            }, a.prototype.redirectToPleaseWaitPage = function(a, b) {
                var c = a;
                "1" === b && (c = a.length > 0 ? a + "&redirectedFromSignup=1" : "?redirectedFromSignup=1"), 
                location.href = "/PleaseWait" + c;
            }, a;
        }(), j = function() {
            function a() {}
            return a.prototype.onExpiredPowerBITokenRefresh = function(a) {
                d.promptExpiredPowerBITokenRefreshDialog(a);
            }, a;
        }(), k = function() {
            function b(a, b, c, d, e, f, k, l, m, n, o) {
                void 0 === l && (l = new g()), void 0 === m && (m = new i()), void 0 === n && (n = new h()), 
                void 0 === o && (o = new j()), this.responseCallbacks = [], this.http = a, this.uploader = b, 
                this.promiseFactory = c, this.telemetryService = d, this.errorService = e, this.activeGroupIdService = f, 
                this.clusterUriRetriever = l, this.httpUriRedirector = m, this.urlInterceptor = n, 
                this.expiredTokenSink = o, k && (this.featureSwitchService = k);
            }
            return b.prototype.getAll = function(a, b) {
                var c = this;
                if (this.verifyAllParamsForUrl(a, b)) {
                    var d = a.map(function(a, d) {
                        var e = b[d];
                        return c.prepareGetRequestConfig(a, e);
                    });
                    return this.requestAll(d);
                }
            }, b.prototype.deleteAll = function(a, b) {
                var c = this;
                if (this.verifyAllParamsForUrl(a, b)) {
                    var d = a.map(function(a, d) {
                        var e = b[d];
                        return c.prepareDeleteRequestConfig(a, e);
                    });
                    return this.requestAll(d);
                }
            }, b.prototype.postAll = function(a, b, c) {
                var d = this;
                if (this.verifyAllParamsForUrlAndData(a, b, c)) {
                    var e = a.map(function(a, e) {
                        var f = c[e];
                        return d.preparePostRequestConfig(a, b[e], f);
                    });
                    return this.requestAll(e);
                }
            }, b.prototype.putAll = function(a, b, c) {
                var d = this;
                if (this.verifyAllParamsForUrlAndData(a, b, c)) {
                    var e = a.map(function(a, e) {
                        var f = c[e];
                        return d.preparePutRequestConfig(a, b[e], f);
                    });
                    return this.requestAll(e);
                }
            }, b.prototype.requestAll = function(a) {
                var b = this;
                if (c.isUndefinedOrEmpty(a)) return null;
                for (var d = this.promiseFactory.defer(), e = [], f = a.length, g = 0, h = 0, i = 0, j = a.length; j > i; i++) !function(c) {
                    var j = a[i];
                    b.request(j).then(function(a) {
                        g++, b.processPartialResult(e, a, c, f, g, h, d);
                    }, function(a) {
                        g++, h++, b.processPartialResult(e, a, c, f, g, h, d);
                    });
                }(i);
                return d.promise;
            }, b.prototype.get = function(a, b) {
                var c = this.prepareGetRequestConfig(a, b);
                return this.request(c);
            }, b.prototype["delete"] = function(a, b) {
                var c = this.prepareDeleteRequestConfig(a, b);
                return this.request(c);
            }, b.prototype.post = function(a, b, c) {
                var d = this.preparePostRequestConfig(a, b, c);
                return this.request(d);
            }, b.prototype.put = function(a, b, c) {
                var d = this.preparePutRequestConfig(a, b, c);
                return this.request(d);
            }, b.prototype.patch = function(a, b, c) {
                var d = this.preparePatchRequestConfig(a, b, c);
                return this.request(d);
            }, b.prototype.uploadUsingPost = function(a, b, c) {
                var d = this.preparePostRequestConfig(a, null, c);
                return d.file = b, d.url = this.qualifyUrl(d.url), this.requestInternal(d, null, this.uploader.upload);
            }, b.prototype.uploadUsingPut = function(a, b, c) {
                var d = this.preparePutRequestConfig(a, null, c);
                return d.file = b, d.url = this.qualifyUrl(d.url), this.requestInternal(d, null, this.uploader.upload);
            }, b.prototype.getResolvedHttpChain = function() {
                var a = this.promiseFactory.defer();
                return a.resolve(null), a.promise;
            }, b.prototype.powerbiRequestOptions = function(a, c) {
                var d = {
                    retryCount: b.DefaultRetryCount,
                    headers: {}
                };
                return this.setGroupHeader(d), this.setTelemetryHeaders(d, a), this.setAuthorizationHeader(d), 
                this.setPreviousTenantIdHeader(d), c && (d.telemetryDescription = c), d;
            }, b.prototype.setGroupHeader = function(a) {
                this.featureSwitchService && this.featureSwitchService.featureSwitches.groupsEnabled && (a.headers["X-PowerBI-User-GroupId"] = this.activeGroupIdService.headerActiveGroupObjectId);
            }, b.prototype.setTelemetryHeaders = function(a, b) {
                var c = b ? b.id : e.generateGuid(), d = this.telemetryService;
                a.headers.ActivityId = d.sessionId, a.headers.RequestId = c;
            }, b.prototype.setPreviousTenantIdHeader = function(a) {
                jsCommon.StringExtensions.isNullOrEmpty(previousTenantId) || (a.headers["X-PowerBI-User-PreviousTenantId"] = previousTenantId);
            }, b.prototype.defaultRetryRequestOptions = function() {
                return {
                    retryCount: b.DefaultRetryCount
                };
            }, Object.defineProperty(b.prototype, "frontendUri", {
                get: function() {
                    return this.clusterUriRetriever.frontendUri;
                },
                enumerable: !0,
                configurable: !0
            }), b.prototype.registerResponseCallback = function(a) {
                this.responseCallbacks.push(a);
            }, b.prototype.unregisterResponseCallback = function(a) {
                var b = this.responseCallbacks.indexOf(a);
                b >= 0 && this.responseCallbacks.splice(b, 1);
            }, b.prototype.setAuthorizationHeader = function(a) {
                var b = window.parent;
                return jsCommon.StringExtensions.isNullOrEmpty(b.powerBIAccessToken) ? void this.expiredTokenSink.onExpiredPowerBITokenRefresh(this.telemetryService, null, null) : void (a.headers.Authorization = "Bearer " + b.powerBIAccessToken);
            }, b.prototype.request = function(a) {
                return a.url = this.qualifyUrl(a.url), this.requestInternal(a);
            }, b.prototype.requestInternal = function(c, d, e, f) {
                var g = this;
                d = d || this.promiseFactory.defer(), f = null != f ? f : null != c.retryCount ? c.retryCount : 0;
                var h;
                return h = e ? e(c) : this.http(c), h.success(function(b, c, e, f) {
                    d.resolve({
                        data: b,
                        status: c,
                        headers: e,
                        activityId: f.headers[a.constants.activityId],
                        requestId: f.headers[a.constants.requestId]
                    }), g.notifyResponseListeners(!0);
                }).error(function(h, i, j, k) {
                    if (b.shouldRetry(i) && f > 0) g.requestInternal(k, d, e, f - 1); else if (!c.silentlyFailOnExpiry && b.isTokenExpired(i, j)) g.expiredTokenSink.onExpiredPowerBITokenRefresh(g.telemetryService, d, {
                        data: h,
                        status: i,
                        headers: j,
                        activityId: k.headers[a.constants.activityId],
                        requestId: k.headers[a.constants.requestId]
                    }); else if (b.isUserAccountDisabled(i, j)) g.httpUriRedirector.redirectToErrorPage(i, "UserAccountDisabled", d, {
                        data: h,
                        status: i,
                        headers: j,
                        activityId: k.headers[a.constants.activityId],
                        requestId: k.headers[a.constants.requestId]
                    }); else if (!c.disableRedirectToSignupOnUnlicensedUser && b.isUnlicensedUser(i, j)) {
                        var l = jsCommon.QueryStringUtil.getQueryStringValue("pbi_source");
                        l = l ? "?pbi_source=" + encodeURIComponent(l) : "";
                        var m = jsCommon.QueryStringUtil.getQueryStringValue("redirectedFromSignup");
                        "1" === m ? g.httpUriRedirector.redirectToPleaseWaitPage(l, m, d, {
                            data: h,
                            status: i,
                            headers: j,
                            activityId: k.headers[a.constants.activityId],
                            requestId: k.headers[a.constants.requestId]
                        }) : g.httpUriRedirector.redirectToSignupUrl(l, d, {
                            data: h,
                            status: i,
                            headers: j,
                            activityId: k.headers[a.constants.activityId],
                            requestId: k.headers[a.constants.requestId]
                        });
                    } else d.reject({
                        data: h,
                        status: i,
                        headers: j,
                        activityId: k.headers[a.constants.activityId],
                        requestId: k.headers[a.constants.requestId]
                    });
                    g.notifyResponseListeners(!1);
                }), d.promise;
            }, b.prototype.notifyResponseListeners = function(a) {
                for (var b = this.responseCallbacks, c = 0, d = this.responseCallbacks.length; d > c; ++c) b[c](a);
            }, b.prototype.prepareGetRequestConfig = function(a, b) {
                return this.prepareRequestConfigWithUrl("GET", a, b);
            }, b.prototype.prepareDeleteRequestConfig = function(a, b) {
                return this.prepareRequestConfigWithUrl("DELETE", a, b);
            }, b.prototype.preparePostRequestConfig = function(a, b, c) {
                return this.prepareRequestConfigWithUrlAndData("POST", a, b, c);
            }, b.prototype.preparePutRequestConfig = function(a, b, c) {
                return this.prepareRequestConfigWithUrlAndData("PUT", a, b, c);
            }, b.prototype.preparePatchRequestConfig = function(a, b, c) {
                return this.prepareRequestConfigWithUrlAndData("PATCH", a, b, c);
            }, b.prototype.prepareRequestConfigWithUrl = function(a, b, c) {
                var d = {
                    method: a,
                    url: b
                };
                return angular.extend(d, c);
            }, b.prototype.prepareRequestConfigWithUrlAndData = function(a, b, c, d) {
                var e = {
                    method: a,
                    url: b,
                    data: c
                };
                return angular.extend(e, d);
            }, b.prototype.verifyAllParamsForUrl = function(a, b) {
                return c.isUndefinedOrEmpty(a) || c.isUndefinedOrEmpty(b) || a.length !== b.length ? !1 : !0;
            }, b.prototype.verifyAllParamsForUrlAndData = function(a, b, d) {
                return c.isUndefinedOrEmpty(a) || c.isUndefinedOrEmpty(b) || c.isUndefinedOrEmpty(d) || a.length !== d.length || d.length !== b.length ? !1 : !0;
            }, b.prototype.processPartialResult = function(a, b, c, d, e, f, g) {
                a[c] = b, e === d && (0 === f ? g.resolve(a) : g.reject(a));
            }, b.shouldRetry = function(a) {
                return 401 !== a && 403 !== a;
            }, b.isUserAccountDisabled = function(c, d) {
                return (401 === c || 403 === c) && d(a.common.PowerBIErrorHeader) === b.UserAccountDisabledErrorHeader;
            }, b.isTokenExpired = function(c, d) {
                return 401 === c && d(a.common.PowerBIErrorHeader) === b.TokenExpiredErrorHeader;
            }, b.isUnlicensedUser = function(c, d) {
                return !(401 !== c && 403 !== c || d(a.common.PowerBIErrorHeader) !== b.UserNotLicensedErrorHeader && d(a.common.PowerBIErrorHeader) !== b.TenantNotAllowedErrorHeader);
            }, b.isAbsoluteUrl = function(a) {
                return b.AbsoluteUrlRegex.test(a);
            }, b.prototype.qualifyUrl = function(a) {
                return a = this.urlInterceptor.interceptUrl(a), !this.clusterUriRetriever.backendUri || b.isAbsoluteUrl(a) ? a : e.urlCombine(this.clusterUriRetriever.backendUri, a);
            }, b.AbsoluteUrlRegex = /^(https?:)?\/\//, b.TokenExpiredErrorHeader = "TokenExpired", 
            b.UserAccountDisabledErrorHeader = "UserAccountDisabled", b.UserNotLicensedErrorHeader = "UserNotLicensed", 
            b.TenantNotAllowedErrorHeader = "TenantNotAllowed", b.DefaultRetryCount = 2, b;
        }();
        b.HttpService = k, b.httpService;
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(b) {
            var c = function() {
                function b(a) {
                    this.isDataLoaded = !1, this.isDataLoading = !1, this.isDefaultLanguage = !1, this.currentLanguageLocale = a;
                }
                return b.prototype.load = function(a) {
                    var c = this, d = /en-\w+/;
                    d.test(this.currentLanguageLocale) && (this.currentLanguageLocale = a ? "en-US" : this.currentLanguageLocale);
                    var e = b.promiseFactory.defer();
                    return this.currentLanguageLocale !== b.defaultLanguageLocale ? (this.isDefaultLanguage = this.isDataLoaded = !1, 
                    this.isDataLoading = !0, b.requestLocalizedStrings(this.currentLanguageLocale).promise.then(function(a) {
                        c.isDataLoaded = !0, c.isDataLoading = !1, c.strings = a, e.resolve({});
                    }, function() {
                        c.isDefaultLanguage = c.isDataLoaded = !0, c.isDataLoading = !1, e.resolve({});
                    })) : (this.isDefaultLanguage = this.isDataLoaded = !0, this.isDataLoading = !1, 
                    e.resolve({})), e;
                }, b.requestLocalizedStrings = function() {
                    var c = b.promiseFactory.defer(), d = window.parent, e = window;
                    return d.localizedStrings ? (e.localizedStrings = d.localizedStrings, c.resolve(e.localizedStrings)) : (e.localizedStrings = a.common.localizedStrings, 
                    e.localizedStrings ? c.resolve(e.localizedStrings) : c.reject()), c;
                }, b.promiseFactory = a.createJQueryPromiseFactory(), b.defaultLanguageLocale = "en-US", 
                b;
            }();
            b.LocalizationLoader = c, b.loader = new c(a.common.cultureInfo || window.navigator.language || window.navigator.userLanguage), 
            b.promiseLoad = b.loader.load();
        }(c = b.localization || (b.localization = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        function c(a, c, e) {
            return void 0 === e && (e = b.localization.loader), new d(e, a, c);
        }
        b.createLocalizationService = c;
        var d = function() {
            function c(b, c, d) {
                this.promiseFactory = d || a.createJQueryPromiseFactory(), this.loader = b, this.telemetryService = c;
            }
            return Object.defineProperty(c.prototype, "currentLanguageLocale", {
                get: function() {
                    return this.loader.currentLanguageLocale;
                },
                enumerable: !0,
                configurable: !0
            }), c.prototype.get = function(a) {
                return this.getImpl(a);
            }, c.prototype.getOptional = function(a) {
                return this.getImpl(a, !0);
            }, c.prototype.ensureLocalization = function(a) {
                var c = this.promiseFactory.defer();
                return this.loader.isDataLoaded ? (a(), c.resolve({})) : this.loader.isDataLoading ? b.localization.promiseLoad.promise.then(function() {
                    a(), c.resolve({});
                }, function() {
                    c.resolve({});
                }) : (b.localization.promiseLoad = this.loader.load(), b.localization.promiseLoad.promise.then(function() {
                    a(), c.resolve({});
                }, function() {
                    c.resolve({});
                })), c;
            }, c.prototype.format = function(a, b) {
                for (var c = this.get(a), d = b.length; d--; ) c = c.replace(new RegExp("\\{" + d + "\\}", "gm"), this.formatValue(b[d]));
                return c;
            }, c.prototype.formatValue = function(a) {
                return null == a ? "" : jsCommon.Utility.isString(a) ? a : jsCommon.Utility.isNumber(a) ? a.toLocaleString() : jsCommon.Utility.isDate(a) ? a.toLocaleString() : jsCommon.Utility.isObject(a) ? null != a.toLocaleString ? a.toLocaleString() : a.toString() : "";
            }, c.prototype.getImpl = function(b, c) {
                if (this.loader.isDataLoaded && !this.loader.isDefaultLanguage) {
                    var d = this.loader.strings[b];
                    if (!angular.isUndefined(d) && null !== d) return d;
                }
                var e = a.localization.defaultLocalizedStrings[b];
                return (angular.isUndefined(e) || null === e) && !c && this.telemetryService && this.telemetryService.logEvent(a.telemetry.LocalizationFailedToLoadStrings, this.currentLanguageLocale), 
                e;
            }, c;
        }();
        b.localize;
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        !function(a) {
            a[a.Default = 0] = "Default", a[a.Alert = 1] = "Alert", a[a.Error = 2] = "Error", 
            a[a.Loading = 3] = "Loading", a[a.Success = 4] = "Success", a[a.Warning = 5] = "Warning";
        }(a.NotificationType || (a.NotificationType = {}));
        a.NotificationType;
        !function(a) {
            a[a.Short = 2e3] = "Short", a[a.Medium = 4e3] = "Medium", a[a.Long = 8e3] = "Long";
        }(a.NotificationDuration || (a.NotificationDuration = {}));
        var b = (a.NotificationDuration, function() {
            function a() {
                this._control = new InJs.Notifications.NotificationControl();
            }
            return a.prototype.notify = function(b, c, d, e, f, g, h) {
                void 0 === d && (d = 0), void 0 === e && (e = !0), void 0 === f && (f = 5e3);
                var i, j = 0;
                switch (d) {
                  case 1:
                    i = "alert", j = 3;
                    break;

                  case 2:
                    i = "xCircle", j = 3;
                    break;

                  case 3:
                    i = "spinny", j = 3;
                }
                var k = InJs.Utility.generateGuid();
                if (h) {
                    for (var l = InJs.DomFactory.div().append(c), m = h.length, n = 0; m > n; n++) {
                        var o, p = h[n], q = jsCommon.StringExtensions.format(a.linkActionTemplate, p.displayText, p.linkId.toString());
                        if (p.description) {
                            var r = jsCommon.StringExtensions.format(a.linkDescriptionTemplate, p.description);
                            o = jsCommon.StringExtensions.format(a.linkTemplateWithDescription, r, q);
                        } else o = jsCommon.StringExtensions.format(a.linkTemplateWithoutDescription, q);
                        var s = $(o);
                        s.find(".linkAction").on(jsCommon.DOMConstants.mouseClickEventName, function() {
                            p.action();
                        }), l.append(s);
                    }
                    return this._control.showNotification(k, b, l, g, e, f, j, i), k;
                }
                return this._control.showNotification(k, b, c, g, e, f, j, i), k;
            }, a.prototype.hide = function(a) {
                a && "string" == typeof a ? this._control.hideNotification(a) : this._control.hide();
            }, a.linkTemplateWithDescription = "<div class='linkMessage'>{0} : {1}</div>", a.linkTemplateWithoutDescription = "<div class='linkMessage'>{0}</div>", 
            a.linkDescriptionTemplate = "<span class='linkDescription' title='{0}'>{0}</span>", 
            a.linkActionTemplate = "<span class='linkAction' title='{0}' data-id='{1}'>{0}</span>", 
            a;
        }());
        a.notificationService = new b();
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b() {
            return new c();
        }
        a.createNotificationBarService = b;
        var c = function() {
            function a() {
                this.notifications = [];
            }
            return a.prototype.notify = function(a, b, c, d, e, f) {
                void 0 === b && (b = 0), void 0 === c && (c = !0);
                var g = {
                    id: InJs.Utility.generateGuid(),
                    message: a,
                    type: b,
                    isDismissable: c,
                    onClose: d,
                    actions: e,
                    secondaryLink: f
                };
                return this.notifications.push(g), g.id;
            }, a.prototype.hide = function(a) {
                if (a && "string" == typeof a) {
                    var b = _.findIndex(this.notifications, function(b) {
                        return b.id === a;
                    });
                    this.notifications.splice(b, 1);
                }
            }, a;
        }();
        a.NotificationBarService = c;
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b(a) {
            return new c(a);
        }
        a.createPopupWindowService = b;
        var c = function() {
            function a(a) {
                this.windowService = a;
            }
            return a.prototype.open = function(a, b, c) {
                void 0 === b && (b = 600), void 0 === c && (c = 480);
                var d = (this.windowService.outerWidth - b) / 2;
                d += this.windowService.screenX;
                var e = (this.windowService.outerHeight - c) / 2;
                return e += this.windowService.screenY, this.windowService.open("/popupserverredirect?url=" + encodeURIComponent(a), "_blank", "top=" + e + ", left=" + d + ", screenX=" + d + ", screenY=" + e + ", width=" + b + ", height=" + c + ", resizable=yes");
            }, a;
        }();
        a.popupWindowService;
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b(a) {
            return new c(a);
        }
        a.createPromiseFactory = b;
        var c = function() {
            function a(a) {
                this.q = a;
            }
            return a.prototype.defer = function() {
                return this.q.defer();
            }, a.prototype.reject = function(a) {
                return this.q.reject(a);
            }, a.prototype.resolve = function(a) {
                var b = this.defer();
                return b.resolve(a), b.promise;
            }, a;
        }();
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b(a) {
            return new c(a);
        }
        a.createScopeEventSubscriptionManager = b;
        var c = function() {
            function a(a) {
                this.scope = a, this.unsubscribeList = [];
            }
            return a.prototype.subscribe = function(a, b) {
                var c = this.scope.$on(a, b);
                return c && this.unsubscribeList.push(c), this;
            }, a.prototype.unsubscribeAll = function() {
                for (var a = this.unsubscribeList.length - 1; a >= 0; --a) this.unsubscribeList[a]();
                this.unsubscribeList = [];
            }, a;
        }();
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b(a) {
            return new e(a);
        }
        var c = jsCommon.Errors, d = jsCommon.Utility;
        a.createScopedProvider = b;
        var e = function() {
            function a(a) {
                this.injector = a, this.factories = {};
            }
            return a.prototype.register = function(a, b) {
                return this.factories[a] = b, this;
            }, a.prototype.attachTo = function(b) {
                return this.find(b) && d.throwException(c.invalidOperation("Scoped service create hides instance from ancestor scope.")), 
                b[a.PropertyName] = new f(this.injector, this.factories);
            }, a.prototype.find = function(b) {
                var c = a.PropertyName, d = b;
                do {
                    var e = d[c];
                    if (e) return e;
                } while (d = d.$parent);
            }, a.PropertyName = "scopedInstances", a;
        }(), f = function() {
            function a(a, b) {
                this.injector = a, this.factories = b, this.instances = {};
            }
            return a.prototype.get = function(a, b) {
                if ("$scope" === a) return b;
                var c = this.instances[a];
                if (void 0 !== c) return c;
                var d = this.factories[a], e = [], f = d.services;
                if (f) for (var g = this.injector, h = 0, i = f.length; i > h; h++) e.push(g.get(f[h]));
                var j = d.scopedServices;
                if (j) for (var h = 0, i = j.length; i > h; h++) {
                    var k = j[h], l = this.get(k, b);
                    e.push(l);
                }
                return this.instances[a] = c = d.fn.apply(d, e), c;
            }, a;
        }();
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b = function() {
            function a(a, b, c, d, e, f, g, h) {
                this.rootScope = a, this.http = b, this.timeout = c, this.interval = d, this.sce = e, 
                this.compile = f, this.document = g, this.location = h;
            }
            return a.createController = function(b) {
                var c, d = [ "$scope", "$rootScope", "$attrs", "$http", "$timeout", "$interval", "$sce", "$compile", "$document", "$location", "scopedProvider" ], e = d.length;
                return b.createOptions && (c = b.createOptions()), c && c.additionalServices && d.push.apply(d, c.additionalServices), 
                d.push(function(f, g, h, i, j, k, l, m, n, o, p) {
                    var q = new a(g, i, j, k, l, m, n, o);
                    if (c) {
                        var r = c.additionalServices;
                        if (r) for (var s = e, t = d.length - 1; t > s; s++) q[d[s]] = arguments[s];
                        c.scopedServiceRoot && p.attachTo(f);
                        var u = c.scopedDependencies;
                        if (u) for (var v = p.find(f), s = 0, t = u.length; t > s; s++) {
                            var w = u[s];
                            q[w] = v.get(w, f);
                        }
                    }
                    var x = new b(f, q);
                    return x.onDestroy && f.$on("$destroy", function() {
                        return x.onDestroy();
                    }), x;
                }), d;
            }, a;
        }();
        a.Services = b;
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        var b = function() {
            function a() {}
            return a.prototype.getData = function(a) {
                if (sessionStorage) try {
                    return JSON.parse(sessionStorage[a]);
                } catch (b) {
                    return null;
                }
                return null;
            }, a.prototype.setData = function(a, b) {
                if (sessionStorage) try {
                    sessionStorage[a] = JSON.stringify(b);
                } catch (c) {}
            }, a;
        }();
        a.sessionStorageService = new b();
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b() {
            return new c();
        }
        a.createThemeService = b;
        var c = function() {
            function a() {}
            return a.prototype.getColors = function(a) {
                if (a) {
                    var b = jsCommon.ArrayExtensions.findItemWithName(d, a);
                    if (b) {
                        var c = [];
                        for (var e in b) 0 === e.indexOf("accent") && c.push({
                            value: b[e]
                        });
                        return c;
                    }
                }
            }, a;
        }(), d = [ {
            name: "Adjacency",
            dk1: "#2F2B20",
            dk2: "#675E47",
            lt1: "#FFFFFF",
            lt2: "#DFDCB7",
            hlink: "#D25814",
            folHlink: "#849A0A",
            majorFont: "Cambria",
            minorFont: "Calibri",
            accent1: "#A9A57C",
            accent2: "#9CBEBD",
            accent3: "#D2CB6C",
            accent4: "#95A39D",
            accent5: "#C89F5D",
            accent6: "#B1A089",
            accent7: "#97A97C",
            accent8: "#9CAEBE",
            accent9: "#A8D26C",
            accent10: "#95A2A3",
            accent11: "#BCC85D",
            accent12: "#AEB189"
        }, {
            name: "Angles",
            dk1: "#000000",
            dk2: "#434342",
            lt1: "#FFFFFF",
            lt2: "#CDD7D9",
            hlink: "#5F5F5F",
            folHlink: "#969696",
            majorFont: "Franklin Gothic Medium",
            minorFont: "Franklin Gothic Book",
            accent1: "#797B7E",
            accent2: "#F96A1B",
            accent3: "#08A1D9",
            accent4: "#7C984A",
            accent5: "#C2AD8D",
            accent6: "#506E94",
            accent7: "#79797E",
            accent8: "#F9D71B",
            accent9: "#083ED9",
            accent10: "#57984A",
            accent11: "#BDC28D",
            accent12: "#535094"
        }, {
            name: "Apex",
            dk1: "#000000",
            dk2: "#69676D",
            lt1: "#FFFFFF",
            lt2: "#C9C2D1",
            hlink: "#410082",
            folHlink: "#932968",
            majorFont: "Lucida Sans",
            minorFont: "Book Antiqua",
            accent1: "#CEB966",
            accent2: "#9CB084",
            accent3: "#6BB1C9",
            accent4: "#6585CF",
            accent5: "#7E6BC9",
            accent6: "#A379BB",
            accent7: "#B2CE66",
            accent8: "#87B084",
            accent9: "#6B83C9",
            accent10: "#7965CF",
            accent11: "#AB6BC9",
            accent12: "#BB79B2"
        }, {
            name: "Apothecary",
            dk1: "#000000",
            dk2: "#564B3C",
            lt1: "#FFFFFF",
            lt2: "#ECEDD1",
            hlink: "#CCCC00",
            folHlink: "#B2B2B2",
            majorFont: "Book Antiqua",
            minorFont: "Century Gothic",
            accent1: "#93A299",
            accent2: "#CF543F",
            accent3: "#B5AE53",
            accent4: "#848058",
            accent5: "#E8B54D",
            accent6: "#786C71",
            accent7: "#93A2A0",
            accent8: "#CF9A3F",
            accent9: "#8CB553",
            accent10: "#728458",
            accent11: "#D0E84D",
            accent12: "#786D6C"
        }, {
            name: "Aspect",
            dk1: "#000000",
            dk2: "#323232",
            lt1: "#FFFFFF",
            lt2: "#E3DED1",
            hlink: "#6B9F25",
            folHlink: "#B26B02",
            majorFont: "Verdana",
            minorFont: "Verdana",
            accent1: "#F07F09",
            accent2: "#9F2936",
            accent3: "#1B587C",
            accent4: "#4E8542",
            accent5: "#604878",
            accent6: "#C19859",
            accent7: "#F0ED09",
            accent8: "#9F5529",
            accent9: "#1B287C",
            accent10: "#428556",
            accent11: "#774878",
            accent12: "#B8C159"
        }, {
            name: "Austin",
            dk1: "#000000",
            dk2: "#3E3D2D",
            lt1: "#FFFFFF",
            lt2: "#CAF278",
            hlink: "#E68200",
            folHlink: "#FFA94A",
            majorFont: "Century Gothic",
            minorFont: "Century Gothic",
            accent1: "#94C600",
            accent2: "#71685A",
            accent3: "#FF6700",
            accent4: "#909465",
            accent5: "#956B43",
            accent6: "#FEA022",
            accent7: "#33C600",
            accent8: "#6F715A",
            accent9: "#FFE400",
            accent10: "#799465",
            accent11: "#959243",
            accent12: "#F1FE22"
        }, {
            name: "BlackTie",
            dk1: "#000000",
            dk2: "#46464A",
            lt1: "#FFFFFF",
            lt2: "#E3DCCF",
            hlink: "#67AABF",
            folHlink: "#B1B5AB",
            majorFont: "Garamond",
            minorFont: "Garamond",
            accent1: "#6F6F74",
            accent2: "#A7B789",
            accent3: "#BEAE98",
            accent4: "#92A9B9",
            accent5: "#9C8265",
            accent6: "#8D6974",
            accent7: "#716F74",
            accent8: "#90B789",
            accent9: "#BBBE98",
            accent10: "#9297B9",
            accent11: "#9B9C65",
            accent12: "#8D6F69"
        }, {
            name: "Civic",
            dk1: "#000000",
            dk2: "#646B86",
            lt1: "#FFFFFF",
            lt2: "#C5D1D7",
            hlink: "#00A3D6",
            folHlink: "#694F07",
            majorFont: "Georgia",
            minorFont: "Georgia",
            accent1: "#D16349",
            accent2: "#CCB400",
            accent3: "#8CADAE",
            accent4: "#8C7B70",
            accent5: "#8FB08C",
            accent6: "#D19049",
            accent7: "#D1A649",
            accent8: "#81CC00",
            accent9: "#8C9DAE",
            accent10: "#8C8870",
            accent11: "#8CB09A",
            accent12: "#CFD149"
        }, {
            name: "Clarity",
            dk1: "#292934",
            dk2: "#D2533C",
            lt1: "#FFFFFF",
            lt2: "#F3F2DC",
            hlink: "#0000FF",
            folHlink: "#800080",
            majorFont: "Arial",
            minorFont: "Arial",
            accent1: "#93A299",
            accent2: "#AD8F67",
            accent3: "#726056",
            accent4: "#4C5A6A",
            accent5: "#808DA0",
            accent6: "#79463D",
            accent7: "#93A2A0",
            accent8: "#A8AD67",
            accent9: "#726D56",
            accent10: "#4C4C6A",
            accent11: "#8280A0",
            accent12: "#79633D"
        }, {
            name: "Composite",
            dk1: "#000000",
            dk2: "#5B6973",
            lt1: "#FFFFFF",
            lt2: "#E7ECED",
            hlink: "#26CBEC",
            folHlink: "#598C8C",
            majorFont: "Calibri",
            minorFont: "Calibri",
            accent1: "#98C723",
            accent2: "#59B0B9",
            accent3: "#DEAE00",
            accent4: "#B77BB4",
            accent5: "#E0773C",
            accent6: "#A98D63",
            accent7: "#49C723",
            accent8: "#5981B9",
            accent9: "#A1DE00",
            accent10: "#B77B97",
            accent11: "#E0C73C",
            accent12: "#A3A963"
        }, {
            name: "Concourse",
            dk1: "#000000",
            dk2: "#464646",
            lt1: "#FFFFFF",
            lt2: "#DEF5FA",
            hlink: "#FF8119",
            folHlink: "#44B9E8",
            majorFont: "Lucida Sans Unicode",
            minorFont: "Lucida Sans Unicode",
            accent1: "#2DA2BF",
            accent2: "#DA1F28",
            accent3: "#EB641B",
            accent4: "#39639D",
            accent5: "#474B78",
            accent6: "#7D3C4A",
            accent7: "#2D5DBF",
            accent8: "#DA6E1F",
            accent9: "#EBC61B",
            accent10: "#40399D",
            accent11: "#5A4778",
            accent12: "#7D4D3C"
        }, {
            name: "Couture",
            dk1: "#000000",
            dk2: "#37302A",
            lt1: "#FFFFFF",
            lt2: "#D0CCB9",
            hlink: "#B6A272",
            folHlink: "#8A784F",
            majorFont: "Garamond",
            minorFont: "Garamond",
            accent1: "#9E8E5C",
            accent2: "#A09781",
            accent3: "#85776D",
            accent4: "#AEAFA9",
            accent5: "#8D878B",
            accent6: "#6B6149",
            accent7: "#8D9E5C",
            accent8: "#99A081",
            accent9: "#85826D",
            accent10: "#ABAFA9",
            accent11: "#8D8788",
            accent12: "#656B49"
        }, {
            name: "Elemental",
            dk1: "#000000",
            dk2: "#242852",
            lt1: "#FFFFFF",
            lt2: "#ACCBF9",
            hlink: "#9454C3",
            folHlink: "#3EBBF0",
            majorFont: "Palatino Linotype",
            minorFont: "Palatino Linotype",
            accent1: "#629DD1",
            accent2: "#297FD5",
            accent3: "#7F8FA9",
            accent4: "#4A66AC",
            accent5: "#5AA2AE",
            accent6: "#9D90A0",
            accent7: "#6267D1",
            accent8: "#292DD5",
            accent9: "#837FA9",
            accent10: "#5C4AAC",
            accent11: "#5A79AE",
            accent12: "#A0909B"
        }, {
            name: "Equity",
            dk1: "#000000",
            dk2: "#696464",
            lt1: "#FFFFFF",
            lt2: "#E9E5DC",
            hlink: "#CC9900",
            folHlink: "#96A9A9",
            majorFont: "Franklin Gothic Book",
            minorFont: "Perpetua",
            accent1: "#D34817",
            accent2: "#9B2D1F",
            accent3: "#A28E6A",
            accent4: "#956251",
            accent5: "#918485",
            accent6: "#855D5D",
            accent7: "#D3A417",
            accent8: "#9B681F",
            accent9: "#9AA26A",
            accent10: "#958251",
            accent11: "#918984",
            accent12: "#85705D"
        }, {
            name: "Essential",
            dk1: "#000000",
            dk2: "#D1282E",
            lt1: "#FFFFFF",
            lt2: "#C8C8B1",
            hlink: "#CC9900",
            folHlink: "#969696",
            majorFont: "Arial Black",
            minorFont: "Arial",
            accent1: "#7A7A7A",
            accent2: "#F5C201",
            accent3: "#526DB0",
            accent4: "#989AAC",
            accent5: "#DC5924",
            accent6: "#B4B392",
            accent7: "#7A7A7A",
            accent8: "#B3F501",
            accent9: "#6352B0",
            accent10: "#9F98AC",
            accent11: "#DCB224",
            accent12: "#A4B492"
        }, {
            name: "Executive",
            dk1: "#000000",
            dk2: "#2F5897",
            lt1: "#FFFFFF",
            lt2: "#E4E9EF",
            hlink: "#3399FF",
            folHlink: "#B2B2B2",
            majorFont: "Century Gothic",
            minorFont: "Palatino Linotype",
            accent1: "#6076B4",
            accent2: "#9C5252",
            accent3: "#E68422",
            accent4: "#846648",
            accent5: "#63891F",
            accent6: "#758085",
            accent7: "#7160B4",
            accent8: "#9C7652",
            accent9: "#E6E322",
            accent10: "#848348",
            accent11: "#30891F",
            accent12: "#757885"
        }, {
            name: "Flow",
            dk1: "#000000",
            dk2: "#04617B",
            lt1: "#FFFFFF",
            lt2: "#DBF5F9",
            hlink: "#F49100",
            folHlink: "#85DFD0",
            majorFont: "Calibri",
            minorFont: "Constantia",
            accent1: "#0F6FC6",
            accent2: "#009DD9",
            accent3: "#0BD0D9",
            accent4: "#10CF9B",
            accent5: "#7CCA62",
            accent6: "#A5C249",
            accent7: "#0F18C6",
            accent8: "#0033D9",
            accent9: "#0B6BD9",
            accent10: "#10A8CF",
            accent11: "#62CA7A",
            accent12: "#6BC249"
        }, {
            name: "Foundry",
            dk1: "#000000",
            dk2: "#676A55",
            lt1: "#FFFFFF",
            lt2: "#EAEBDE",
            hlink: "#DB5353",
            folHlink: "#903638",
            majorFont: "Rockwell",
            minorFont: "Rockwell",
            accent1: "#72A376",
            accent2: "#B0CCB0",
            accent3: "#A8CDD7",
            accent4: "#C0BEAF",
            accent5: "#CEC597",
            accent6: "#E8B7B7",
            accent7: "#72A38D",
            accent8: "#B0CCBD",
            accent9: "#A8B6D7",
            accent10: "#B9C0AF",
            accent11: "#BCCE97",
            accent12: "#E8CFB7"
        }, {
            name: "Grid",
            dk1: "#000000",
            dk2: "#534949",
            lt1: "#FFFFFF",
            lt2: "#CCD1B9",
            hlink: "#CC9900",
            folHlink: "#C0C0C0",
            majorFont: "Franklin Gothic Medium",
            minorFont: "Franklin Gothic Medium",
            accent1: "#C66951",
            accent2: "#BF974D",
            accent3: "#928B70",
            accent4: "#87706B",
            accent5: "#94734E",
            accent6: "#6F777D",
            accent7: "#C6A151",
            accent8: "#B0BF4D",
            accent9: "#889270",
            accent10: "#877D6B",
            accent11: "#93944E",
            accent12: "#6F707D"
        }, {
            name: "Hardcover",
            dk1: "#000000",
            dk2: "#895D1D",
            lt1: "#FFFFFF",
            lt2: "#ECE9C6",
            hlink: "#CC9900",
            folHlink: "#B2B2B2",
            majorFont: "Book Antiqua",
            minorFont: "Book Antiqua",
            accent1: "#873624",
            accent2: "#D6862D",
            accent3: "#D0BE40",
            accent4: "#877F6C",
            accent5: "#972109",
            accent6: "#AEB795",
            accent7: "#876524",
            accent8: "#D4D62D",
            accent9: "#9BD040",
            accent10: "#82876C",
            accent11: "#976609",
            accent12: "#9EB795"
        }, {
            name: "Horizon",
            dk1: "#000000",
            dk2: "#1F2123",
            lt1: "#FFFFFF",
            lt2: "#DC9E1F",
            hlink: "#646464",
            folHlink: "#969696",
            majorFont: "Arial Narrow",
            minorFont: "Arial Narrow",
            accent1: "#7E97AD",
            accent2: "#CC8E60",
            accent3: "#7A6A60",
            accent4: "#B4936D",
            accent5: "#67787B",
            accent6: "#9D936F",
            accent7: "#7E80AD",
            accent8: "#CCC360",
            accent9: "#7A7660",
            accent10: "#B3B46D",
            accent11: "#676E7B",
            accent12: "#909D6F"
        }, {
            name: "Median",
            dk1: "#000000",
            dk2: "#775F55",
            lt1: "#FFFFFF",
            lt2: "#EBDDC3",
            hlink: "#F7B615",
            folHlink: "#704404",
            majorFont: "Tw Cen MT",
            minorFont: "Tw Cen MT",
            accent1: "#94B6D2",
            accent2: "#DD8047",
            accent3: "#A5AB81",
            accent4: "#D8B25C",
            accent5: "#7BA79D",
            accent6: "#968C8C",
            accent7: "#9498D2",
            accent8: "#DDC947",
            accent9: "#91AB81",
            accent10: "#C2D85C",
            accent11: "#7B9CA7",
            accent12: "#96918C"
        }, {
            name: "Metal",
            dk1: "#000000",
            dk2: "#4E5B6F",
            lt1: "#FFFFFF",
            lt2: "#D6ECFF",
            hlink: "#EB8803",
            folHlink: "#5F7791",
            majorFont: "Consolas",
            minorFont: "Corbel",
            accent1: "#7FD13B",
            accent2: "#EA157A",
            accent3: "#FEB80A",
            accent4: "#00ADDC",
            accent5: "#738AC8",
            accent6: "#1AB39F",
            accent7: "#3BD13E",
            accent8: "#EA1515",
            accent9: "#CDFE0A",
            accent10: "#0043DC",
            accent11: "#8573C8",
            accent12: "#1A7FB3"
        }, {
            name: "Module",
            dk1: "#000000",
            dk2: "#5A6378",
            lt1: "#FFFFFF",
            lt2: "#D4D4D6",
            hlink: "#168BBA",
            folHlink: "#680000",
            majorFont: "Corbel",
            minorFont: "Corbel",
            accent1: "#F0AD00",
            accent2: "#60B5CC",
            accent3: "#E66C7D",
            accent4: "#6BB76D",
            accent5: "#E88651",
            accent6: "#C64847",
            accent7: "#C0F000",
            accent8: "#6081CC",
            accent9: "#E6976C",
            accent10: "#6BB792",
            accent11: "#E8CD51",
            accent12: "#C68547"
        }, {
            name: "NewsPrint",
            dk1: "#000000",
            dk2: "#303030",
            lt1: "#FFFFFF",
            lt2: "#DEDEE0",
            hlink: "#D26900",
            folHlink: "#D89243",
            majorFont: "Impact",
            minorFont: "Times New Roman",
            accent1: "#AD0101",
            accent2: "#726056",
            accent3: "#AC956E",
            accent4: "#808DA9",
            accent5: "#424E5B",
            accent6: "#730E00",
            accent7: "#AD5601",
            accent8: "#726D56",
            accent9: "#A5AC6E",
            accent10: "#8780A9",
            accent11: "#42425B",
            accent12: "#734600"
        }, {
            name: "Opulent",
            dk1: "#000000",
            dk2: "#B13F9A",
            lt1: "#FFFFFF",
            lt2: "#F4E7ED",
            hlink: "#FFDE66",
            folHlink: "#D490C5",
            majorFont: "Trebuchet MS",
            minorFont: "Trebuchet MS",
            accent1: "#B83D68",
            accent2: "#AC66BB",
            accent3: "#DE6C36",
            accent4: "#F9B639",
            accent5: "#CF6DA4",
            accent6: "#FA8D3D",
            accent7: "#B84E3D",
            accent8: "#BB66A0",
            accent9: "#DEBC36",
            accent10: "#E0F939",
            accent11: "#CF6D74",
            accent12: "#FAE63D"
        }, {
            name: "Oriel",
            dk1: "#000000",
            dk2: "#575F6D",
            lt1: "#FFFFFF",
            lt2: "#FFF39D",
            hlink: "#D2611C",
            folHlink: "#3B435B",
            majorFont: "Century Schoolbook",
            minorFont: "Century Schoolbook",
            accent1: "#FE8637",
            accent2: "#7598D9",
            accent3: "#B32C16",
            accent4: "#F5CD2D",
            accent5: "#AEBAD5",
            accent6: "#777C84",
            accent7: "#FEE437",
            accent8: "#8375D9",
            accent9: "#B37616",
            accent10: "#BAF52D",
            accent11: "#B4AED5",
            accent12: "#787784"
        }, {
            name: "Origin",
            dk1: "#000000",
            dk2: "#464653",
            lt1: "#FFFFFF",
            lt2: "#DDE9EC",
            hlink: "#B292CA",
            folHlink: "#6B5680",
            majorFont: "Bookman Old Style",
            minorFont: "Gill Sans MT",
            accent1: "#727CA3",
            accent2: "#9FB8CD",
            accent3: "#D2DA7A",
            accent4: "#FADA7A",
            accent5: "#B88472",
            accent6: "#8E736A",
            accent7: "#8072A3",
            accent8: "#9FA2CD",
            accent9: "#A2DA7A",
            accent10: "#DDFA7A",
            accent11: "#B8A572",
            accent12: "#8E846A"
        }, {
            name: "Paper",
            dk1: "#000000",
            dk2: "#444D26",
            lt1: "#FFFFFF",
            lt2: "#FEFAC9",
            hlink: "#8E58B6",
            folHlink: "#7F6F6F",
            majorFont: "Constantia",
            minorFont: "Constantia",
            accent1: "#A5B592",
            accent2: "#F3A447",
            accent3: "#E7BC29",
            accent4: "#D092A7",
            accent5: "#9C85C0",
            accent6: "#809EC2",
            accent7: "#94B592",
            accent8: "#F0F347",
            accent9: "#B8E729",
            accent10: "#D09A92",
            accent11: "#B885C0",
            accent12: "#8280C2"
        }, {
            name: "Perspective",
            dk1: "#000000",
            dk2: "#283138",
            lt1: "#FFFFFF",
            lt2: "#FF8600",
            hlink: "#6187E3",
            folHlink: "#7B8EB8",
            majorFont: "Arial",
            minorFont: "Arial",
            accent1: "#838D9B",
            accent2: "#D2610C",
            accent3: "#80716A",
            accent4: "#94147C",
            accent5: "#5D5AD2",
            accent6: "#6F6C7D",
            accent7: "#84839B",
            accent8: "#D2C10C",
            accent9: "#807B6A",
            accent10: "#94143E",
            accent11: "#985AD2",
            accent12: "#776C7D"
        }, {
            name: "Pushpin",
            dk1: "#000000",
            dk2: "#465E9C",
            lt1: "#FFFFFF",
            lt2: "#CCDDEA",
            hlink: "#D83E2C",
            folHlink: "#ED7D27",
            majorFont: "Constantia",
            minorFont: "Franklin Gothic Book",
            accent1: "#FDA023",
            accent2: "#AA2B1E",
            accent3: "#71685C",
            accent4: "#64A73B",
            accent5: "#EB5605",
            accent6: "#B9CA1A",
            accent7: "#F0FD23",
            accent8: "#AA6D1E",
            accent9: "#6F715C",
            accent10: "#3BA745",
            accent11: "#EBC205",
            accent12: "#64CA1A"
        }, {
            name: "Slipstream",
            dk1: "#000000",
            dk2: "#212745",
            lt1: "#FFFFFF",
            lt2: "#B4DCFA",
            hlink: "#56C7AA",
            folHlink: "#59A8D1",
            majorFont: "Trebuchet MS",
            minorFont: "Trebuchet MS",
            accent1: "#4E67C8",
            accent2: "#5ECCF3",
            accent3: "#A7EA52",
            accent4: "#5DCEAF",
            accent5: "#FF8021",
            accent6: "#F14124",
            accent7: "#704EC8",
            accent8: "#5E84F3",
            accent9: "#5DEA52",
            accent10: "#5DB7CE",
            accent11: "#FFEC20",
            accent12: "#F1A624"
        }, {
            name: "Solstice",
            dk1: "#000000",
            dk2: "#4F271C",
            lt1: "#FFFFFF",
            lt2: "#E7DEC9",
            hlink: "#8DC765",
            folHlink: "#AA8A14",
            majorFont: "Gill Sans MT",
            minorFont: "Gill Sans MT",
            accent1: "#3891A7",
            accent2: "#FEB80A",
            accent3: "#C32D2E",
            accent4: "#84AA33",
            accent5: "#964305",
            accent6: "#475A8D",
            accent7: "#385CA7",
            accent8: "#CDFE0A",
            accent9: "#C3732D",
            accent10: "#49AA33",
            accent11: "#968A05",
            accent12: "#56478D"
        }, {
            name: "Technic",
            dk1: "#000000",
            dk2: "#3B3B3B",
            lt1: "#FFFFFF",
            lt2: "#D4D2D0",
            hlink: "#00C8C3",
            folHlink: "#A116E0",
            majorFont: "Franklin Gothic Book",
            minorFont: "Arial",
            accent1: "#6EA0B0",
            accent2: "#CCAF0A",
            accent3: "#8D89A4",
            accent4: "#748560",
            accent5: "#9E9273",
            accent6: "#7E848D",
            accent7: "#6E80B0",
            accent8: "#89CC0A",
            accent9: "#9A89A4",
            accent10: "#628560",
            accent11: "#959E73",
            accent12: "#7F7E8D"
        }, {
            name: "Thatch",
            dk1: "#000000",
            dk2: "#1D3641",
            lt1: "#FFFFFF",
            lt2: "#DFE6D0",
            hlink: "#66AACD",
            folHlink: "#809DB3",
            majorFont: "Tw Cen MT",
            minorFont: "Tw Cen MT",
            accent1: "#759AA5",
            accent2: "#CFC60D",
            accent3: "#99987F",
            accent4: "#90AC97",
            accent5: "#FFAD1C",
            accent6: "#B9AB6F",
            accent7: "#7582A5",
            accent8: "#7ACF0D",
            accent9: "#8D997F",
            accent10: "#90ACA4",
            accent11: "#E1FF1C",
            accent12: "#A3B96F"
        }, {
            name: "Theme1",
            dk1: "#000000",
            dk2: "#666666",
            lt1: "#FFFFFF",
            lt2: "#E7ECED",
            hlink: "#0000FF",
            folHlink: "#800080",
            majorFont: "Segoe UI Light",
            minorFont: "Segoe UI",
            accent1: "#00B8F1",
            accent2: "#DE3A15",
            accent3: "#FF9A00",
            accent4: "#3ACB35",
            accent5: "#BBA8E8",
            accent6: "#DD6952",
            accent7: "#7FD5DB",
            accent8: "#60AF89",
            accent9: "#91A9D0",
            accent10: "#C7F073",
            accent11: "#5E69D8",
            accent12: "#BD8E29"
        }, {
            name: "Theme2",
            dk1: "#000000",
            dk2: "#666666",
            lt1: "#FFFFFF",
            lt2: "#E7ECED",
            hlink: "#0000FF",
            folHlink: "#800080",
            majorFont: "Segoe UI Light",
            minorFont: "Segoe UI",
            accent1: "#BD1799",
            accent2: "#FF9A00",
            accent3: "#3ACB35",
            accent4: "#BBA8E8",
            accent5: "#DD6952",
            accent6: "#7FD5DB",
            accent7: "#60AF89",
            accent8: "#91A9D0",
            accent9: "#C7F073",
            accent10: "#5E69D8",
            accent11: "#BD8E29",
            accent12: "#00B8F1"
        }, {
            name: "Theme3",
            dk1: "#000000",
            dk2: "#666666",
            lt1: "#FFFFFF",
            lt2: "#E7ECED",
            hlink: "#0000FF",
            folHlink: "#800080",
            majorFont: "Segoe UI Light",
            minorFont: "Segoe UI",
            accent1: "#CE4C2C",
            accent2: "#FF9A00",
            accent3: "#3ACB35",
            accent4: "#BBA8E8",
            accent5: "#DD6952",
            accent6: "#7FD5DB",
            accent7: "#60AF89",
            accent8: "#91A9D0",
            accent9: "#C7F073",
            accent10: "#5E69D8",
            accent11: "#BD8E29",
            accent12: "#00B8F1"
        }, {
            name: "Theme4",
            dk1: "#000000",
            dk2: "#666666",
            lt1: "#FFFFFF",
            lt2: "#E7ECED",
            hlink: "#0000FF",
            folHlink: "#800080",
            majorFont: "Segoe UI Light",
            minorFont: "Segoe UI",
            accent1: "#F07800",
            accent2: "#3ACB35",
            accent3: "#BBA8E8",
            accent4: "#DD6952",
            accent5: "#7FD5DB",
            accent6: "#60AF89",
            accent7: "#91A9D0",
            accent8: "#C7F073",
            accent9: "#5E69D8",
            accent10: "#BD8E29",
            accent11: "#00B8F1",
            accent12: "#DE3A15"
        }, {
            name: "Theme5",
            dk1: "#000000",
            dk2: "#666666",
            lt1: "#FFFFFF",
            lt2: "#E7ECED",
            hlink: "#0000FF",
            folHlink: "#800080",
            majorFont: "Segoe UI Light",
            minorFont: "Segoe UI",
            accent1: "#BEB113",
            accent2: "#BBA8E8",
            accent3: "#DD6952",
            accent4: "#7FD5DB",
            accent5: "#60AF89",
            accent6: "#91A9D0",
            accent7: "#C7F073",
            accent8: "#5E69D8",
            accent9: "#BD8E29",
            accent10: "#00B8F1",
            accent11: "#DE3A15",
            accent12: "#FF9A00"
        }, {
            name: "Theme6",
            dk1: "#000000",
            dk2: "#666666",
            lt1: "#FFFFFF",
            lt2: "#E7ECED",
            hlink: "#0000FF",
            folHlink: "#800080",
            majorFont: "Segoe UI Light",
            minorFont: "Segoe UI",
            accent1: "#78A560",
            accent2: "#BBA8E8",
            accent3: "#DD6952",
            accent4: "#7FD5DB",
            accent5: "#60AF89",
            accent6: "#91A9D0",
            accent7: "#C7F073",
            accent8: "#5E69D8",
            accent9: "#BD8E29",
            accent10: "#00B8F1",
            accent11: "#DE3A15",
            accent12: "#FF9A00"
        }, {
            name: "Theme7",
            dk1: "#000000",
            dk2: "#666666",
            lt1: "#FFFFFF",
            lt2: "#E7ECED",
            hlink: "#0000FF",
            folHlink: "#800080",
            majorFont: "Segoe UI Light",
            minorFont: "Segoe UI",
            accent1: "#419DB0",
            accent2: "#DE3A15",
            accent3: "#FF9A00",
            accent4: "#3ACB35",
            accent5: "#BBA8E8",
            accent6: "#DD6952",
            accent7: "#7FD5DB",
            accent8: "#60AF89",
            accent9: "#91A9D0",
            accent10: "#C7F073",
            accent11: "#5E69D8",
            accent12: "#BD8E29"
        }, {
            name: "Theme8",
            dk1: "#000000",
            dk2: "#666666",
            lt1: "#FFFFFF",
            lt2: "#E7ECED",
            hlink: "#0000FF",
            folHlink: "#800080",
            majorFont: "Segoe UI Light",
            minorFont: "Segoe UI",
            accent1: "#8D35DE",
            accent2: "#BD8E29",
            accent3: "#00B8F1",
            accent4: "#DE3A15",
            accent5: "#FF9A00",
            accent6: "#3ACB35",
            accent7: "#BBA8E8",
            accent8: "#DD6952",
            accent9: "#7FD5DB",
            accent10: "#60AF89",
            accent11: "#91A9D0",
            accent12: "#C7F073"
        }, {
            name: "ThemeNew1",
            dk1: "#000000",
            dk2: "#666666",
            lt1: "#FFFFFF",
            lt2: "#E7ECED",
            hlink: "#0000FF",
            folHlink: "#800080",
            majorFont: "Segoe UI Light",
            minorFont: "Segoe UI",
            accent1: "#01B8AA",
            accent2: "#374649",
            accent3: "#FD625E",
            accent4: "#F2C80F",
            accent5: "#5F6B6D",
            accent6: "#8AD4EB",
            accent7: "#FE9666",
            accent8: "#A66999",
            accent9: "#3599B8",
            accent10: "#DFBFBF",
            accent11: "#4AC5BB",
            accent12: "#5F6B6D",
            accent13: "#FB8281",
            accent14: "#F4D25A",
            accent15: "#7F898A",
            accent16: "#A4DDEE",
            accent17: "#FDAB89",
            accent18: "#B687AC",
            accent19: "#28738A",
            accent20: "#A78F8F",
            accent21: "#168980",
            accent22: "#293537",
            accent23: "#BB4A4A",
            accent24: "#B59525",
            accent25: "#475052",
            accent26: "#6A9FB0",
            accent27: "#BD7150",
            accent28: "#7B4F71",
            accent29: "#1B4D5C",
            accent30: "#706060",
            accent31: "#0F5C55",
            accent32: "#1C2325",
            accent33: "#7D3231",
            accent34: "#796419",
            accent35: "#303637",
            accent36: "#476A75",
            accent37: "#7E4B36",
            accent38: "#52354C",
            accent39: "#0D262E",
            accent40: "#544848"
        }, {
            name: "Trek",
            dk1: "#000000",
            dk2: "#4E3B30",
            lt1: "#FFFFFF",
            lt2: "#FBEEC9",
            hlink: "#AD1F1F",
            folHlink: "#FFC42F",
            majorFont: "Franklin Gothic Medium",
            minorFont: "Franklin Gothic Book",
            accent1: "#F0A22E",
            accent2: "#A5644E",
            accent3: "#B58B80",
            accent4: "#C3986D",
            accent5: "#A19574",
            accent6: "#C17529",
            accent7: "#E0F02E",
            accent8: "#A58D4E",
            accent9: "#B5A480",
            accent10: "#C3C16D",
            accent11: "#96A174",
            accent12: "#C1BF29"
        }, {
            name: "Urban",
            dk1: "#000000",
            dk2: "#424456",
            lt1: "#FFFFFF",
            lt2: "#DEDEDE",
            hlink: "#67AFBD",
            folHlink: "#C2A874",
            majorFont: "Trebuchet MS",
            minorFont: "Georgia",
            accent1: "#53548A",
            accent2: "#438086",
            accent3: "#A04DA3",
            accent4: "#C4652D",
            accent5: "#8B5D3D",
            accent6: "#5C92B5",
            accent7: "#6D538A",
            accent8: "#435F86",
            accent9: "#A34D7B",
            accent10: "#C4AC2D",
            accent11: "#8B823D",
            accent12: "#5C66B5"
        }, {
            name: "Verve",
            dk1: "#000000",
            dk2: "#666666",
            lt1: "#FFFFFF",
            lt2: "#D2D2D2",
            hlink: "#17BBFD",
            folHlink: "#FF79C2",
            majorFont: "Century Gothic",
            minorFont: "Century Gothic",
            accent1: "#FF388C",
            accent2: "#E40059",
            accent3: "#9C007F",
            accent4: "#68007F",
            accent5: "#005BD3",
            accent6: "#00349E",
            accent7: "#FF4638",
            accent8: "#E41500",
            accent9: "#9C0033",
            accent10: "#7F0059",
            accent11: "#0900D3",
            accent12: "#1A009E"
        }, {
            name: "Waveform",
            dk1: "#000000",
            dk2: "#073E87",
            lt1: "#FFFFFF",
            lt2: "#C6E7FC",
            hlink: "#0080FF",
            folHlink: "#5EAEFF",
            majorFont: "Candara",
            minorFont: "Candara",
            accent1: "#31B6FD",
            accent2: "#4584D3",
            accent3: "#5BD078",
            accent4: "#A5D028",
            accent5: "#F5C040",
            accent6: "#05E0DB",
            accent7: "#3153FD",
            accent8: "#4C45D3",
            accent9: "#5BD0B0",
            accent10: "#54D028",
            accent11: "#D0F540",
            accent12: "#057BE0"
        } ];
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b() {
            return new c();
        }
        a.createTooltipService = b;
        var c = function() {
            function a() {
                this.arrowPostionClassSet = this.getArrowPostionClassSet();
            }
            return a.prototype.showTooltip = function(b, c, d, e, f, g) {
                var h = this;
                if (c && (c.preventDefault(), c.stopPropagation()), f = f || a.defaultDisplayDelay, 
                g = this.isValidArrowPosition(g) ? g : a.arrowPositions.BottomRight, !this.isTooltipVisible()) {
                    var i = c.originalEvent;
                    if (this.showTooltipTimeoutId && (this.previousMouseX === i.pageX || this.previousMouseY === i.pageY)) return this.previousMouseX = i.pageX, 
                    void (this.previousMouseY = i.pageY);
                    this.previousMouseX = i.pageX, this.previousMouseY = i.pageY, this.showTooltipTimeoutId && window.clearTimeout(this.showTooltipTimeoutId), 
                    this.showTooltipTimeoutId = window.setTimeout(function() {
                        h.tooltipElement || (h.tooltipElement = $(a.htmlTemplate), h.tooltipTitleElement = h.tooltipElement.find(".title"), 
                        h.tooltipDescriptionElement = h.tooltipElement.find(".description")), $("body").append(h.tooltipElement), 
                        h.tooltipTitleElement.text(d), h.tooltipDescriptionElement.text(e), h.tooltipElement.addClass(g), 
                        h.updateTooltipPosition(b, g), h.tooltipElement.addClass(a.tooltipActiveClass), 
                        h.showTooltipTimeoutId = null;
                    }, f);
                }
            }, a.prototype.hideTooltip = function(b) {
                b && (b.preventDefault(), b.stopPropagation()), this.showTooltipTimeoutId && (window.clearTimeout(this.showTooltipTimeoutId), 
                this.showTooltipTimeoutId = null), this.tooltipElement && (this.tooltipElement.removeClass(a.tooltipActiveClass), 
                this.tooltipElement.removeClass(this.arrowPostionClassSet), this.tooltipTitleElement.empty(), 
                this.tooltipDescriptionElement.empty(), this.tooltipElement.detach());
            }, a.prototype.isTooltipVisible = function() {
                return this.tooltipElement && this.tooltipElement.hasClass(a.tooltipActiveClass) && this.tooltipElement.visible();
            }, a.prototype.updateTooltipPosition = function(a, b) {
                var c = this.getElementOffset(a, b);
                this.tooltipElement.css({
                    left: c.left,
                    top: c.top
                });
            }, a.prototype.isValidArrowPosition = function(b) {
                for (var c in a.arrowPositions) if (a.arrowPositions[c] === b) return !0;
                return !1;
            }, a.prototype.getArrowPostionClassSet = function() {
                var b = "";
                for (var c in a.arrowPositions) b = b + " " + a.arrowPositions[c];
                return b;
            }, a.prototype.getElementOffset = function(b, c) {
                var d = this.tooltipElement.outerWidth(), e = this.tooltipElement.outerHeight(), f = b.width(), g = b.height(), h = b.offset(), i = a.arrowOffset;
                switch (c) {
                  case a.arrowPositions.TopLeft:
                    return {
                        left: h.left + f / 2 - i.x,
                        top: h.top + g + i.y
                    };

                  case a.arrowPositions.TopRight:
                    return {
                        left: h.left + f / 2 - d + i.x,
                        top: h.top + g + i.y
                    };

                  case a.arrowPositions.BottomLeft:
                    return {
                        left: h.left + f / 2 - i.x,
                        top: h.top - e - i.y
                    };

                  case a.arrowPositions.BottomRight:
                    return {
                        left: h.left + f / 2 - d + i.x,
                        top: h.top - e - i.y
                    };
                }
            }, a.defaultDisplayDelay = 1e3, a.tooltipActiveClass = "active", a.htmlTemplate = "<div class='tooltip'><div class='title'></div><div class='description'></div></div>", 
            a.arrowPositions = {
                TopLeft: "arrowTopLeft",
                TopRight: "arrowTopRight",
                BottomLeft: "arrowBottomLeft",
                BottomRight: "arrowBottomRight"
            }, a.arrowOffset = {
                x: 20,
                y: 7
            }, a;
        }();
        a.TooltipService = c;
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(a) {
        function b(a) {
            return new c(a);
        }
        a.createViralTenantMergeHelperService = b;
        var c = function() {
            function b(a) {
                this.backToPowerBI = "backToPowerBIErrorLink", this.stayInArchivedContent = "stayInArchivedContentErrorLink", 
                this.localizationService = a;
            }
            return b.prototype.viewingDataFromMergedViralTenant = function() {
                return !jsCommon.StringExtensions.isNullOrUndefinedOrWhiteSpaceString(previousTenantId);
            }, b.prototype.displayFeatureDisabledErrorMessage = function(b) {
                var c = this, d = function(a) {
                    a === c.backToPowerBI && (window.location.href = window.location.protocol + "//" + window.location.host);
                }, e = [ {
                    label: this.localizationService.get("ArchivedContent_ErrorOptionOneText"),
                    resultValue: this.backToPowerBI
                }, {
                    label: this.localizationService.get("ArchivedContent_ErrorOptionTwoText"),
                    resultValue: this.stayInArchivedContent
                } ];
                a.errorService.error(this.localizationService.get(b), "FeatureDisabledInArchivedContent", {
                    title: this.localizationService.get("ArchivedContent_ErrorTitle"),
                    dialogOptions: e,
                    dismissCallback: d,
                    showAdditionalErrorInfo: !1
                });
            }, b;
        }();
        a.ViralTenantMergeHelperService = c;
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c;
        !function(b) {
            var c;
            !function(b) {
                function c(b) {
                    var c = new a.visuals.DataColorPalette(b);
                    return {
                        titleText: {
                            color: {
                                value: "rgba(51,51,51,1)"
                            }
                        },
                        subTitleText: {
                            color: {
                                value: "rgba(145,145,145,1)"
                            }
                        },
                        colorPalette: {
                            dataColors: c
                        },
                        labelText: {
                            color: {
                                value: "rgba(51,51,51,1)"
                            },
                            fontSize: "11px"
                        },
                        isHighContrast: !1
                    };
                }
                b.create = c;
            }(c = b.visualStyles || (b.visualStyles = {}));
        }(c = b.services || (b.services = {}));
    }(b = a.common || (a.common = {}));
}(powerbi || (powerbi = {}));

var powerbi;

!function(a) {
    var b;
    !function(b) {
        var c = jsCommon.Utility.generateGuid;
        b.LocalizationFailedToLoadStrings = function(b, d) {
            var e = {
                languageLocale: b,
                message: d
            }, f = {
                name: "PBI.Localization.FailedToLoadStrings",
                category: 2,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        languageLocale: e.languageLocale,
                        message: e.message
                    };
                },
                info: e
            };
            return "undefined" != typeof a.telemetry.LocalizationFailedToLoadStringsLoggers && (f.loggers = a.telemetry.LocalizationFailedToLoadStringsLoggers), 
            f;
        }, b.DashboardTokenRefreshPrompt = function(b, d) {
            void 0 === d && (d = !1);
            var e = {
                parentId: b,
                isError: d
            }, f = {
                name: "PBI.Dashboard.TokenRefreshPrompt",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        parentId: e.parentId,
                        isError: e.isError
                    };
                },
                info: e
            };
            return "undefined" != typeof a.telemetry.DashboardTokenRefreshPromptLoggers && (f.loggers = a.telemetry.DashboardTokenRefreshPromptLoggers), 
            f;
        }, b.DashboardBITokenRefreshPrompt = function(b, d) {
            void 0 === d && (d = !1);
            var e = {
                parentId: b,
                isError: d
            }, f = {
                name: "PBI.Dashboard.BITokenRefreshPrompt",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        parentId: e.parentId,
                        isError: e.isError
                    };
                },
                info: e
            };
            return "undefined" != typeof a.telemetry.DashboardBITokenRefreshPromptLoggers && (f.loggers = a.telemetry.DashboardBITokenRefreshPromptLoggers), 
            f;
        }, b.DashboardOpenLink = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                url: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.Dashboard.OpenLink",
                category: 1,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        url: f.url,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.DashboardOpenLinkLoggers && (g.loggers = a.telemetry.DashboardOpenLinkLoggers), 
            g;
        }, b.BaseMashupContentProviderChildEvent = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "BaseMashupContentProviderChildEvent",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.BaseMashupContentProviderChildEventLoggers && (g.loggers = a.telemetry.BaseMashupContentProviderChildEventLoggers), 
            g;
        }, b.BaseMashupContentProviderCustomerActionEvent = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "BaseMashupContentProviderCustomerActionEvent",
                category: 1,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.BaseMashupContentProviderCustomerActionEventLoggers && (g.loggers = a.telemetry.BaseMashupContentProviderCustomerActionEventLoggers), 
            g;
        }, b.MashUpContentProviderConnectButtonClicked = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.MashUpContentProvider.ConnectButtonClicked",
                category: 1,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.MashUpContentProviderConnectButtonClickedLoggers && (g.loggers = a.telemetry.MashUpContentProviderConnectButtonClickedLoggers), 
            g;
        }, b.MashUpContentProviderOrgAppPassThrough = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.MashUpContentProvider.OrgAppPassThrough",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.MashUpContentProviderOrgAppPassThroughLoggers && (g.loggers = a.telemetry.MashUpContentProviderOrgAppPassThroughLoggers), 
            g;
        }, b.MashUpContentProviderPreparePackageSucceed = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.MashUpContentProvider.PreparePackageSucceed",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.MashUpContentProviderPreparePackageSucceedLoggers && (g.loggers = a.telemetry.MashUpContentProviderPreparePackageSucceedLoggers), 
            g;
        }, b.MashUpContentProviderGetPackageModels = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.MashUpContentProvider.GetPackageModels",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.MashUpContentProviderGetPackageModelsLoggers && (g.loggers = a.telemetry.MashUpContentProviderGetPackageModelsLoggers), 
            g;
        }, b.MashUpContentProviderSaveModelParameters = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.MashUpContentProvider.SaveModelParameters",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.MashUpContentProviderSaveModelParametersLoggers && (g.loggers = a.telemetry.MashUpContentProviderSaveModelParametersLoggers), 
            g;
        }, b.MashUpContentProviderGetAggregatedDatasourcesForImport = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.MashUpContentProvider.GetAggregatedDatasourcesForImport",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.MashUpContentProviderGetAggregatedDatasourcesForImportLoggers && (g.loggers = a.telemetry.MashUpContentProviderGetAggregatedDatasourcesForImportLoggers), 
            g;
        }, b.MashUpContentProviderUpdateDatasource = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.MashUpContentProvider.UpdateDatasource",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.MashUpContentProviderUpdateDatasourceLoggers && (g.loggers = a.telemetry.MashUpContentProviderUpdateDatasourceLoggers), 
            g;
        }, b.BaseDataSetChildEvent = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "BaseDataSetChildEvent",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.BaseDataSetChildEventLoggers && (g.loggers = a.telemetry.BaseDataSetChildEventLoggers), 
            g;
        }, b.DashboardSettingsDatasetsSaveRefreshSettings = function(b, d, e, f, g, h, i) {
            void 0 === i && (i = !1);
            var j = {
                refreshEnabled: b,
                isDaily: d,
                weekDays: e,
                refreshNotificationEnabled: f,
                providerId: g,
                parentId: h,
                isError: i
            }, k = {
                name: "PBI.Dashboard.SettingsDatasetsSaveRefreshSettings",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        refreshEnabled: j.refreshEnabled,
                        isDaily: j.isDaily,
                        weekDays: j.weekDays,
                        refreshNotificationEnabled: j.refreshNotificationEnabled,
                        providerId: j.providerId,
                        parentId: j.parentId,
                        isError: j.isError
                    };
                },
                info: j
            };
            return "undefined" != typeof a.telemetry.DashboardSettingsDatasetsSaveRefreshSettingsLoggers && (k.loggers = a.telemetry.DashboardSettingsDatasetsSaveRefreshSettingsLoggers), 
            k;
        }, b.DashboardParametersDialogSaveParameters = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.Dashboard.ParametersDialogSaveParameters",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.DashboardParametersDialogSaveParametersLoggers && (g.loggers = a.telemetry.DashboardParametersDialogSaveParametersLoggers), 
            g;
        }, b.DashboardRefreshNowFailedToRetrieveModel = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.Dashboard.RefreshNowFailedToRetrieveModel",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.DashboardRefreshNowFailedToRetrieveModelLoggers && (g.loggers = a.telemetry.DashboardRefreshNowFailedToRetrieveModelLoggers), 
            g;
        }, b.DashboardAuthenticationDialogSaveCredentials = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.Dashboard.AuthenticationDialogSaveCredentials",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.DashboardAuthenticationDialogSaveCredentialsLoggers && (g.loggers = a.telemetry.DashboardAuthenticationDialogSaveCredentialsLoggers), 
            g;
        }, b.DashboardAuthenticationDiscoverPublicKey = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.Dashboard.AuthenticationDiscoverPublicKey",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.DashboardAuthenticationDiscoverPublicKeyLoggers && (g.loggers = a.telemetry.DashboardAuthenticationDiscoverPublicKeyLoggers), 
            g;
        }, b.DashboardRetrieveGateway = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.Dashboard.RetrieveGateway",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.DashboardRetrieveGatewayLoggers && (g.loggers = a.telemetry.DashboardRetrieveGatewayLoggers), 
            g;
        }, b.DashboardPrepareRefreshNow = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.Dashboard.PrepareRefreshNow",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.DashboardPrepareRefreshNowLoggers && (g.loggers = a.telemetry.DashboardPrepareRefreshNowLoggers), 
            g;
        }, b.DashboardGetAggregatedDatasourcesForOneModel = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.Dashboard.GetAggregatedDatasourcesForOneModel",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.DashboardGetAggregatedDatasourcesForOneModelLoggers && (g.loggers = a.telemetry.DashboardGetAggregatedDatasourcesForOneModelLoggers), 
            g;
        }, b.DashboardDatasetRefresh = function(b, d, e) {
            void 0 === e && (e = !1);
            var f = {
                providerId: b,
                parentId: d,
                isError: e
            }, g = {
                name: "PBI.Dashboard.DatasetRefresh",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        providerId: f.providerId,
                        parentId: f.parentId,
                        isError: f.isError
                    };
                },
                info: f
            };
            return "undefined" != typeof a.telemetry.DashboardDatasetRefreshLoggers && (g.loggers = a.telemetry.DashboardDatasetRefreshLoggers), 
            g;
        }, b.DashboardInitializeSettingsDatasetModel = function(b, d) {
            void 0 === d && (d = !1);
            var e = {
                parentId: b,
                isError: d
            }, f = {
                name: "PBI.Dashboard.InitializeSettingsDatasetModel",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        parentId: e.parentId,
                        isError: e.isError
                    };
                },
                info: e
            };
            return "undefined" != typeof a.telemetry.DashboardInitializeSettingsDatasetModelLoggers && (f.loggers = a.telemetry.DashboardInitializeSettingsDatasetModelLoggers), 
            f;
        }, b.DashboardGetRefreshHistory = function(b, d) {
            void 0 === d && (d = !1);
            var e = {
                parentId: b,
                isError: d
            }, f = {
                name: "PBI.Dashboard.GetRefreshHistory",
                category: 0,
                time: Date.now(),
                id: c(),
                getFormattedInfoObject: function() {
                    return {
                        parentId: e.parentId,
                        isError: e.isError
                    };
                },
                info: e
            };
            return "undefined" != typeof a.telemetry.DashboardGetRefreshHistoryLoggers && (f.loggers = a.telemetry.DashboardGetRefreshHistoryLoggers), 
            f;
        };
    }(b = a.telemetry || (a.telemetry = {}));
}(powerbi || (powerbi = {})), angular.module("powerbi.common").run([ "$templateCache", function(a) {
    a.put("views/dialogConfirmContent.html", '<div class="content">    <div class="title">{{viewModel.title}}</div>    <div class="message" ng-if="viewModel.message">{{viewModel.message}}</div></div>'), 
    a.put("views/dialogPromptContent.html", '<div class="content">    <div class="title">{{viewModel.title}}</div>    <div class="message instructions" ng-if="viewModel.instructions">{{viewModel.instructions}}</div>    <input type="text" ng-model="viewModel.userInput" /></div>'), 
    a.put("views/dropdownMenu.html", "<ul class='angular-dropdown' ng-class='{dropdownMenuClass: true, dark: dropdownDarkTheme === true}'>    <li ng-repeat='item in dropdownMenu' class='dropdown-item' dropdown-item-label='labelField' dropdown-item-description='descriptionField' dropdown-item-class='classField' dropdown-menu-item='item'></li></ul>"), 
    a.put("views/dropdownMenuItems.html", '<ul class="angular-dropdown {{dropdownClass}}" ng-class="{dark: dropdownDarkTheme === true}">    <li ng-repeat="item in dropdownItems track by $index" class="dropdown-item {{item.dropdownItemClass}}" ng-mousedown="dropdownOnItemSelected({ selected: item }); $event.stopPropagation();">        <a ng-if="::item.type === 0" class="{{::item.containerClass}}" ng-href="{{::item.href}}" target="{{::item.hrefTarget ? item.hrefTarget : \\"_blank\\" }}">            <div class="dropdown-content {{item.itemClass}}">                <div class="dropdown-label {{::item.labelClass}}">{{::item.text}}</div>                <div class="dropdown-description {{::item.descriptionClass}}" ng-if="::item.description">{{::item.description}}</div>            </div>        </a>        <span ng-if="::item.type === 1" class="{{::item.containerClass}}">            <div class="dropdown-content {{item.itemClass}}">                <div class="dropdown-label {{::item.labelClass}}">{{::item.text}}</div>                <div class="dropdown-description {{::item.descriptionClass}}" ng-if="::item.description">{{::item.description}}</div>            </div>        </span>        <span ng-if="::item.type === 2" class="dropdown-separator"></span>    </li></ul>'), 
    a.put("views/editableLabel.html", '<div class="editableLabel">    <div class="textLabel" ng-click="disableClick || makeEditable()" ng-attr-title="{{customTooltip? undefined : viewModel.displayName}}" ng-bind="viewModel.displayName"></div>    <input class="textInput" type="text" ng-if="editable" ng-blur="onInternalBlur()" ng-keydown="onInternalKeyDown($event)" spellcheck="false" ng-keyup="updateInputState()" maxlength="{{::maxInputLength}}" /></div>'), 
    a.put("views/inlineMessageView.html", '<div class="inlineWarning">    <i ng-class="mode==\'info\'?\'infoIcon\':\'alert\'"></i>    <div class="message" ng-init="detailExpand=false">        <div ng-transclude />        <div ng-if="traceDetails!=null">            <div class="warningDetailLink" ng-click="detailExpand=!detailExpand" ng-switch="detailExpand">                <span localize="SettingsDataset_ShowDetails" ng-switch-when="false"></span>                <span localize="SettingsDataset_HideDetails" ng-switch-when="true"></span>            </div>            <table class="warningDetails" ng-show="detailExpand">                <tr>                    <td class="warningDetailName"><span localize="AdditionalErrorInfo_ActivityIdText"></span>:</td>                    <td class="warningDetailValue" ng-bind="traceDetails.activityId"></td>                </tr>                <tr>                    <td class="warningDetailName"><span localize="AdditionalErrorInfo_RequestIdText"></span>:</td>                    <td class="warningDetailValue" ng-bind="traceDetails.requestId"></td>                </tr>                <tr>                    <td class="warningDetailName"><span localize="AdditionalErrorInfo_ErrorCodeText"></span>:</td>                    <td class="warningDetailValue" ng-bind="traceDetails.errorCode"></td>                </tr>                <tr>                    <td class="warningDetailName"><span localize="AdditionalErrorInfo_TimestampText"></span>:</td>                    <td class="warningDetailValue" ng-bind="traceDetails.time"></td>                </tr>                <tr>                    <td class="warningDetailName"><span localize="AdditionalErrorInfo_VersionText"></span>:</td>                    <td class="warningDetailValue" ng-bind="traceDetails.version"></td>                </tr>            </table>        </div>    </div></div>'), 
    a.put("views/modalDialog.html", '<div class="modal">    <div class="overlay"></div>    <div class="dialog">        <div ng-transclude ng-class="{\'dialog-content-filled\': viewModel.contentFilledDialog, \'dialog-content\': !viewModel.contentFilledDialog}"></div>        <div class="closeBtn" ng-click="cancel()" />        <div class="actions" ng-if="!viewModel.hideActionsButtons">            <button class="confirm biButton primary" ng-class="{\'elevated\': viewModel.confirmButtonImportance === \'elevated\', \'normal\': viewModel.confirmButtonImportance === \'normal\' }" ng-click="confirm()" ng-disabled="viewModel.isConfirmButtonDisabled">{{viewModel.confirmButtonText}}</button>            <button class="cancel biButton" ng-class="{\'elevated\': viewModel.cancelButtonImportance === \'elevated\', \'normal\': viewModel.cancelButtonImportance === \'normal\' }" ng-click="cancel()">{{viewModel.cancelButtonText}}</button>        </div>    </div></div>'), 
    a.put("views/modalThreeButtonDialog.html", '<div class="modal">    <div class="overlay"></div>    <div class="dialog">        <div ng-transclude ng-class="{\'dialog-content-filled\': viewModel.contentFilledDialog, \'dialog-content\': !viewModel.contentFilledDialog}"></div>        <div class="closeBtn" ng-click="cancel()" />        <div class="actions" ng-if="!viewModel.hideActionsButtons">            <button class="confirm biButton primary" ng-class="{\'elevated\': viewModel.confirmButtonImportance === \'elevated\', \'normal\': viewModel.confirmButtonImportance === \'normal\' }" ng-click="confirm()" ng-disabled="viewModel.isConfirmButtonDisabled">{{viewModel.confirmButtonText}}</button>            <button class="deny biButton" ng-class="{\'elevated\': viewModel.denyButtonImportance === \'elevated\', \'normal\': viewModel.denyButtonImportance === \'normal\' }" ng-click="deny()">{{viewModel.denyButtonText}}</button>            <button class="cancel biButton" ng-class="{\'elevated\': viewModel.cancelButtonImportance === \'elevated\', \'normal\': viewModel.cancelButtonImportance === \'normal\' }" ng-click="cancel()">{{viewModel.cancelButtonText}}</button>        </div>    </div></div>'), 
    a.put("views/modalOverlay.html", '<div class="modal">    <div class="overlay"></div></div>'), 
    a.put("views/notificationBar.html", '<div class="notification-bar unselectable" ng-repeat="notification in service.notifications track by notification.id" ng-if="$first">    <div class="bar-actions">        <div class="infiniteLoader" ng-if="notification.type === 3"></div>        <button ng-repeat="action in notification.actions" ng-bind="action.displayText" ng-click="action.action()" ng-class="{\'primary\': $first, \'last\': $last}"></button>        <button class="dismissBtn glyphicon pbi-glyph-close glyph-small" ng-if="notification.isDismissable" ng-click="dismiss(notification)"></button>    </div>    <div class="bar-content" ng-switch="notification.type">        <span ng-switch-when="2" class="icon glyphicon pbi-glyph-error glyph-small"></span>        <span ng-switch-when="4" class="icon glyphicon pbi-glyph-success glyph-small"></span>        <span ng-switch-when="5" class="icon glyphicon pbi-glyph-warning glyph-small"></span>        <span class="message"><span ng-bind="::notification.message"></span><a ng-if="notification.secondaryLink" ng-href="{{::notification.secondaryLink.urlString}}" target="_blank" ng-bind="::notification.secondaryLink.displayText"></a></span>    </div></div>'), 
    a.put("views/qnaQuestionBox.html", '<div class="qnaQuestionBoxContainer">    <spinner class="qnaSpinner" ng-show="showLoadingIndicator"></spinner></div>'), 
    a.put("views/spinner.html", '<div class="powerbi-spinner">    <div class="spinner" ng-if="dots == true">        <div class="dots">            <span>&#9679;</span>            <span>&#9679;</span>            <span>&#9679;</span>            <span>&#9679;</span>            <span>&#9679;</span>        </div>    </div>    <div class="circleSpinner" ng-if="dots == null">        <div class="circle first" />        <div class="circle second" />        <div class="circle third" />        <div class="circle fourth" />        <div class="circle fifth" />        <div class="circle sixth" />        <div class="circle seventh" />        <div class="circle eighth" />    </div></div>'), 
    a.put("views/visual.html", '<div class="visual"></div>'), a.put("views/authDialogBodyView.html", '<div>    <inline-message class="warning" trace-details="traceDetails" ng-show="viewModel.showError">        <span localize="AuthDialog_Error_LoginFailed"></span>    </inline-message>    <div class="authForm">        <inline-message class="warning" ng-show="showOAuthError">            <span localize="OAuth_Security_Error"></span>        </inline-message>        <div class="disabledField" ng-repeat="property in viewModel.datasource.connectionStringGeneralProperties">            <span>{{property.name}}</span>            <input type="text" class="textBox" value="{{property.value}}" />        </div>        <div class="group">            <span localize="AuthDialog_FieldName_Authentication" />        <!-- nToDo - 3877298: Using ng-click in the following <select> because ng-change does not fire -->        <select ng-model="viewModel.selectedAuthenticationIndex"                ng-click="customizeAuthDialog()"                ng-options="viewModel.datasource.credentialTypes.indexOf(credentialType) as credentialType for credentialType in viewModel.datasource.credentialTypes"                ng-disabled="viewModel.showSpinner" tabindex="1" />        </div>        <div class="editableField1" ng-if="viewModel.showEditableField1">            <span>{{viewModel.editableField1Label}}</span>            <input type="text" class="textBox" value="{{viewModel.editableField1Value}}" ng-model="viewModel.editableField1Value" ng-change="dismissSpinnerError()" ng-disabled="viewModel.showSpinner" tabindex="2" focus-on="true" />        </div>        <div class="editableField2" ng-if="viewModel.showEditableField2">            <span>{{viewModel.editableField2Label}}</span>            <input type="password" class="textBox" value="{{viewModel.editableField2Value}}" ng-model="viewModel.editableField2Value" ng-change="dismissSpinnerError()" ng-disabled="viewModel.showSpinner" tabindex="3" />        </div>        <div class="waitingMessageWhenApplyOAuthCredential" ng-if="viewModel.showWaitingMessageForOAuth">        </div>        <spinner circle class="signInSpinner" ng-show="viewModel.showSpinner"></spinner>    </div></div>'), 
    a.put("views/authDialogView.html", '<div>    <modal-dialog class="authDialog" auth-dialog="viewModel" view-model="dialogModel" ng-if="viewModel.showModalDialog&& !viewModel.showPlainUI" on-confirm-action="confirmDialog()" on-cancel-action="closeDialog()" on-close-action="closeDialog()">        <div class="title"><span localize="AuthDialog_Configure"></span> {{viewModel.datasetModel.dataset.name}}</div>        <div ng-include="\'views/authDialogBodyView.html\'"></div>    </modal-dialog>    <div ng-if="viewModel.showModalDialog&& viewModel.showPlainUI" class="authDialog plain">        <div ng-include="\'views/authDialogBodyView.html\'" class="authDialogContent"></div>        <div class="action">            <button ng-click="confirmDialog()" class="primary" localize="AuthDialog_LinkText_SignIn"></button>            <button ng-click="closeDialog()" localize="GetData_Cancel"></button>        </div>    </div></div>'), 
    a.put("views/collapsibleSectionView.html", '<div class="collapsibleSectionControl" ng-class="{isExpanded: isCollapsibleSectionExpanded === true}">    <div class="sectionTitle">        <span class="collapseToggleContainer" ng-click="isCollapsibleSectionExpanded = !isCollapsibleSectionExpanded">            <i class="glyphicon pbi-glyph-caretright collapseToggle"></i>            <span>{{isCollapsibleSectionExpanded ? localizedExpandedTitle : localizedCollapsedTitle}}</span>        </span>    </div>    <div class="content" ng-show="isCollapsibleSectionExpanded" ng-transclude></div></div>'), 
    a.put("views/datasetParametersDialogBodyView.html", '<div>    <form name="parametersForm" ng-submit="confirmDialog()">        <div class="parameterGroup">            <div class="parameter" ng-repeat="parameter in viewModel.datasetModel.dataset.parameters">                <span tabindex="-1" class="fieldName">{{parameter.name}}</span>                <span class="description" tabindex="-1">{{parameter.description}}</span>                <input class="textBox" type="text" placeholder="{{parameter.sample}}" ng-model="parameter.value" ng-disabled="viewModel.showSpinner" autofocus tabindex="{{$index + 1}}" required ng-pattern="parameter.valueValidator">            </div>        </div>    </form>    <spinner class="spinner" ng-if="viewModel.showSpinner" /></div>'), 
    a.put("views/datasetParametersDialogView.html", '<div>    <modal-dialog class="datasetParametersDialog" view-model="dialogModel" ng-if="viewModel.showDatasetParametersDialog && !viewModel.showPlainUI" on-confirm-action="confirmDialog()" on-cancel-action="closeDialog()" on-close-action="closeDialog()">        <div class="title"><span localize="DatasetParametersDialog_Configure"></span> {{viewModel.datasetModel.dataset.name}}</div>        <div class="description">{{viewModel.datasetModel.dataset.description}}</div>        <span localize="DatasetParametersDialog_HelpMessage"></span>        <a ng-click="relocateToLink()" href="">            <span localize="DatasetParametersDialog_LearnMore"></span>        </a>        <div ng-include="\'views/datasetParametersDialogBodyView.html\'"></div>        <div class="validationError" ng-if="viewModel.showValidationError">            <span localize="DatasetParametersDialog_ValidationError"></span>        </div>    </modal-dialog>    <div ng-if="viewModel.showDatasetParametersDialog && viewModel.showPlainUI" class="datasetParametersDialog plain">        <div class="validationError" ng-if="viewModel.showValidationError">            <i class="glyphicon pbi-glyph-error"></i><span localize="DatasetParametersDialog_ValidationError"></span>        </div>        <div ng-include="\'views/datasetParametersDialogBodyView.html\'" class="datasetParametersDialogContent"></div>        <div class="action">            <button class="primary" ng-click="confirmDialog()" localize="DatasetParametersDialog_NextButtonText"></button>            <button ng-click="closeDialog()" localize="GetData_Cancel"></button>        </div>    </div></div>'), 
    a.put("views/popupContainer.html", '<div class="popup-container">     <ng-transclude></ng-transclude></div>'), 
    a.put("views/inlineNameValuePairsView.html", '<div class="inlineWarning">    <i ng-class="mode==\'info\'?\'infoIcon\':\'alert\'"></i>    <div class="message" ng-init="detailExpand=false">        <div ng-transclude />        <div ng-if="nameValuePairs!=null">            <div class="warningDetailLink" ng-click="detailExpand=!detailExpand" ng-switch="detailExpand" ng-show="showTitle">                <span localize="SettingsDataset_ShowDetails" ng-switch-when="false"></span>                <span localize="SettingsDataset_HideDetails" ng-switch-when="true"></span>            </div>            <table class="warningDetails" ng-show="detailExpand">                <tr ng-repeat="pair in nameValuePairs">                    <td class="warningDetailName"><span ng-bind="::pair.Name" />:</td>                    <td class="warningDetailValue"><span ng-bind="::pair.Value" /></td>                </tr>            </table>        </div>    </div></div>');
} ]);
//# sourceMappingURL=PowerBICommon.min.js.map